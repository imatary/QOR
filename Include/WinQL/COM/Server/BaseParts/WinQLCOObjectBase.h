//WinQLCOObjectBase.h

// Copyright Querysoft Limited 2013, 2015, 2017
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef WINQL_COM_COOBJECTBASE_H_3
#define WINQL_COM_COOBJECTBASE_H_3

#include "CompilerQOR.h"

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#include "WinQL/Definitions/Constants.h"
#include "WinQL/Definitions/Security.h"

//--------------------------------------------------------------------------------
#	define __QOR_DECLARE_COMCLASS_ID( myClass )									\
																				\
static const nsCodeQOR::mxGUID* ClassID(void);									\
static const char* TypeName(void)

#	define __QOR_IMPLEMENT_COMCLASS_ID( _MYCLASS, _INTERFACE )					\
const nsCodeQOR::mxGUID* _MYCLASS::ClassID()									\
{																				\
	return (nsCodeQOR::mxGUID*)(&_INTERFACE##_IID);								\
}																				\
																				\
const char* _MYCLASS::TypeName()												\
{																				\
	return #_MYCLASS;															\
}

//--------------------------------------------------------------------------------
namespace nsWinQAPI
{
	class __QOR_INTERFACE( __WINQAPI ) COLE32;
}

//--------------------------------------------------------------------------------
namespace nsWin32
{
	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL_COM ) CCOObjectBase
	{
	public:

		__QOR_DECLARE_OCLASS_ID( CCOObjectBase );

		CCOObjectBase();
		virtual ~CCOObjectBase();
		CCOObjectBase( const CCOObjectBase& );
		CCOObjectBase& operator = ( const CCOObjectBase& );

		long Status( void );

	protected:

		nsWinQAPI::COLE32& m_Library;
		long m_lStatus;

	};

}//nsWin32

#endif//WINQL_COM_COOBJECTBASE_H_3

