//WinQLOLEContainer.h

// Copyright Querysoft Limited 2013, 2015, 2017
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef WINQL_COM_OLECONTAINER_H_3
#define WINQL_COM_OLECONTAINER_H_3

#include "CompilerQOR.h"

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#include "WinQL/Definitions/Constants.h"
#include "WinQL/Definitions/Security.h"
#include "WinQL/Definitions/Interfaces.h"
#include "WinQL/COM/Server/BaseParts/WinQLTInterfaceMember.h"
#include "WinQL/COM/Server/OLE/WinQLOleClientSiteImpl.h"
#include "WinQL/COM/Server/Impls/WinQLAdviseSinkImpl.h"
#include "WinQL/COM/Server/Impls/WinQLMessageFilterImpl.h"
#include "WinQL/COM/Server/OLE/WinQLOleItemContainerImpl.h"
#include "WinQL/COM/Server/Impls/WinQLPersistFileImpl.h"
#include "WinQL/COM/Server/Module/WinQLClassFactory.h"
#include "WinQL/COM/Server/Impls/WinQLDragDrop.h"
#include "WinQL/COM/Server/MMC/WinQLDataObjectImpl.h"
#include "WinQL/COM/Server/OLE/WinQLOleInPlaceSiteImpl.h"
#include "WinQL/COM/Server/OLE/WinQLOleInPlaceFrameImpl.h"
#include "WinQL/COM/Server/OLE/WinQLOleInPlaceObjectImpl.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL_COM ) COLEContainer : public CIUnknownImplBase<>, public CCOObjectBase
	{
	public:

		__QOR_DECLARE_OCLASS_ID( COLEContainer );

		COLEContainer();
		virtual ~COLEContainer();

		void Initialize( void );

		long OleCreateDefaultHandler( const GUID& clsid, IUnknown* pUnkOuter, const GUID& riid, void** lplpObj );
		long OleCreateEmbeddingHelper( const GUID& clsid, IUnknown* pUnkOuter, unsigned long flags, IClassFactory* pCF, const GUID& riid, void** lplpObj );
		long OleCreate( const GUID& rclsid, const GUID& riid, unsigned long renderopt, FormatEtc* pFormatEtc, IStorage* pStg );
		long OleCreateEx( const GUID& rclsid, const GUID& riid, unsigned long dwFlags, unsigned long renderopt, unsigned long cFormats, unsigned long* rgAdvf, FormatEtc* rgFormatEtc, unsigned long* rgdwConnection, IStorage* pStg );
		bool OleIsRunning( void );
		long OleNoteObjectVisible( bool bVisible );
		long TellObjectItsContained( bool bContained );
		long OleRun( void );

	protected:

		IUnknown* m_pContained;

		//Required interfaces
		CTInterfaceMember< COleClientSiteImpl > m_OleClientSitePtr;
		CTInterfaceMember< CAdviseSinkImpl > m_AdviseSinkPtr;

		//Optional interfaces
		CTInterfaceMember< CMessageFilterImpl > m_MessageFilterPtr;				//Message Filtering
			
		CTInterfaceMember< COleItemContainerImpl > m_OleItemContainerPtr;		//Linking to Embedded Objects
		CTInterfaceMember< CPersistFileImpl > m_PersistFilePtr;
		CTInterfaceMember< CClassFactoryImpl > m_ClassFactoryPtr;

		CTInterfaceMember< COleInPlaceSiteImpl > m_OleInPlaceSitePtr;			//In Place Activation
		CTInterfaceMember< COleInPlaceFrameImpl > m_OleInPlaceFramePtr;
		CTInterfaceMember< COleInPlaceObjectImpl > m_OleInPlaceObjectPtr;

		CTInterfaceMember< CDropSourceImpl > m_DropSourcePtr;					//Drag and Drop
		CTInterfaceMember< CDropTargetImpl > m_DropTargetPtr;
		CTInterfaceMember< CDataObjectImpl > m_DataObjectPtr;

	private:

		COLEContainer( const COLEContainer& );
		COLEContainer& operator = ( const COLEContainer& );
	};

}//nsWin32

#endif//WINQL_COM_OLECONTAINER_H_3

