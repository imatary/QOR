//MSW_stat.h

// Copyright Querysoft Limited 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef SYSTEMQOR_MSW_SYS_STAT_H_3
#define SYSTEMQOR_MSW_SYS_STAT_H_3

#include "SystemQOR/MSWindows/types/errno_types.h"
#include "SystemQOR/MSWindows/types/time_types.h"

#include "SystemQOR/MSWindows/types/errno_types.h"
#include "SystemQOR/MSWindows/types/time_types.h"
#include "SystemQOR/MSWindows/types/sys/sys_types.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{

}//nsWin32

#include "SystemQOR/Posix/sys/Basestat.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __QSYS ) Cstat: public nsBaseCRT::Csys_stat
	{
	public:	

        Cstat();
        virtual ~Cstat();

		virtual int chmod( const char*, mode_t );
		virtual int fchmod( int, mode_t );
		virtual int fchmodat( int, const char*, mode_t, int );
		virtual int fstat( int, nsWin32::file_stat* );
		virtual int fstatat( int, const char* __QCMP_RESTRICT, nsWin32::file_stat* __QCMP_RESTRICT, int );
		virtual int futimens( int, const timespec[ 2 ] );
		virtual int lstat( const char* __QCMP_RESTRICT, nsWin32::file_stat* __QCMP_RESTRICT );
		virtual int mkdir( const char*, mode_t );
		virtual int mkdirat( int, const char*, mode_t );
		virtual int mkfifo( const char*, mode_t );
		virtual int mkfifoat( int, const char*, mode_t );
		virtual int mknod( const char*, mode_t, dev_t );
		virtual int mknodat( int, const char*, mode_t, dev_t );
		virtual int stat( const char* __QCMP_RESTRICT, nsWin32::file_stat* __QCMP_RESTRICT );
		virtual mode_t umask( mode_t );
		virtual int utimensat( int, const char*, const timespec[ 2 ], int );
		virtual int _umask( int pmode );
		virtual errno_t _umask_s( int mode, int* pOldMode );
		virtual int _stat( const char* path, sstat* buffer );
		virtual int _stat64( const char* path, sstat64* buffer );
		virtual int _stati64( const char* path, sstati64* buffer );

	private:

		Cstat( const Cstat& );
		Cstat& operator = ( const Cstat& );
	};	

}//nsWin32

#endif//SYSTEMQOR_MSW_SYS_STAT_H_3
