//Role.h

// Copyright Querysoft Limited 2016
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Abstract base for roles

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#ifndef APPOCRITAQOR_ROLE_H_3
#define APPOCRITAQOR_ROLE_H_3

#include "AppocritaQOR/IRole.h"
#include <map>

//------------------------------------------------------------------------------
namespace nsQOR
{
	//------------------------------------------------------------------------------
	//A role for an application such as System Service or Command Line Tool or Desktop Application or Web Service or Web Server
	class __QOR_INTERFACE( __APPOCRITA ) CRole : public IRole
	{
	public:

		CRole(){};
		CRole( nsCodeQOR::mxGUID* classID );
		virtual ~CRole();

		virtual void Setup( IApplication& Application );
		virtual void Shutdown( IApplication& Application );
		virtual ISubSystem::ref_type GetSubSystem( nsCodeQOR::mxGUID* classID );
		virtual void AddSubSystem( nsCodeQOR::mxGUID classID, ISubSystem::ref_type SubSystem );
		static nsCodeQOR::mxGUID* CmdLineTool( void );

	private:

		CRole( const CRole& );
		CRole& operator = ( const CRole& );

		IRole::ref_type m_Impl;
	};

	//--------------------------------------------------------------------------------
	//An application Role such as Service, Command line Tool or Game
	class __QOR_INTERFACE( __APPOCRITA ) CRoleImplBase : public nsQOR::IRole
	{
	public:

		__QOR_DECLARE_OCLASS_ID( CRoleImplBase );

		CRoleImplBase();
		virtual ~CRoleImplBase();
		CRoleImplBase( const CRoleImplBase& src );
		CRoleImplBase& operator = ( const CRoleImplBase& src );

		virtual void Setup( IApplication& );
		virtual void Shutdown( IApplication& );
		virtual ISubSystem::ref_type GetSubSystem( nsCodeQOR::mxGUID* classID );
		virtual void AddSubSystem( nsCodeQOR::mxGUID classID, ISubSystem::ref_type SubSystem );

	private:

		std::map< nsCodeQOR::mxGUID, ISubSystem* > m_MapSubsystems;
	};


}//nsQOR

#endif//APPOCRITAQOR_ROLE_H_3
