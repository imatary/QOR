//ObexObject.cpp

// Copyright Querysoft Limited 2016
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Implements an Obex Object

#include "CompilerQOR.h"
#include "CodeQOR/Tracing/FunctionContextBase.h"
#include "BluefootQOR/Protocols/OBEX/ObexObject.h"

//------------------------------------------------------------------------------
namespace nsOBEX
{
	__QOR_IMPLEMENT_OCLASS_LUID(CObject);

	//------------------------------------------------------------------------------
	CObject::CObject(obex_cmd Command) : m_Command( Command )
	, m_Response(RSP_BAD_REQUEST)
	, m_LastResponse(RSP_BAD_REQUEST)
	, m_HeaderOffset( 0 )
	, m_bAbort( false )
	, m_bSuspended( false )
	{
		__QCS_MEMBER_FCONTEXT("CObject::CObject");
	}

	//------------------------------------------------------------------------------
	CObject::~CObject()
	{
		__QCS_MEMBER_FCONTEXT("CObject::~CObject");
		for (CHeader* pHeader : m_VecHeaders)
		{
			delete pHeader;
		}
	}

	//------------------------------------------------------------------------------
	void CObject::AddHeader(CHeader* pHeader)
	{
		__QCS_MEMBER_FCONTEXT("CObject::AddHeader");
		//TODO: Enforce one-of and ordering rules when adding

		m_VecHeaders.push_back(pHeader);
	}

	//------------------------------------------------------------------------------
	void CObject::Suspend()
	{
		__QCS_MEMBER_FCONTEXT("CObject::Suspend");
		m_bSuspended = true;
	}

	//------------------------------------------------------------------------------
	void CObject::Resume()
	{
		__QCS_MEMBER_FCONTEXT("CObject::Resume");
		m_bSuspended = false;
	}

	//------------------------------------------------------------------------------
	void CObject::Abort(void)
	{
		__QCS_MEMBER_FCONTEXT("CObject::Abort");
		m_bAbort = true;
	}

}//nsOBEX
