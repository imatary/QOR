//WinQLComponentImpl.cpp

// Copyright Querysoft Limited 2013, 2015, 2017
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Base class implementation for MMC snapin Component

#include "WinQL/CodeServices/WinQLPolicy.h"
#include "WinQL/Application/Threading/WinQLCriticalSection.h"
#include "WinQL/Application/ErrorSystem/WinQLError.h"
#include "WinQL/COM/Server/MMC/WinQLComponentImpl.h"
#include "WinQAPI/OLE32.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	using namespace nsWinQAPI;

	__QOR_IMPLEMENT_COMCLASS_ID( CComponentImpl, IComponent, 0x43136EB2,0xD36C,0x11CF,0xAD,0xBC,0x00,0xAA,0x00,0xA8,0x00,0x33 );

	//--------------------------------------------------------------------------------
	CComponentImpl::CComponentImpl( CIUnknownImplBase<>* pImpl ) : CInterfaceImplBase< IComponent>( pImpl )
	{
		_WINQ_FCONTEXT( "CComponentImpl::CComponentImpl" );
		RegisterInterface( dynamic_cast< IComponent* >( this ) );
	}

	//--------------------------------------------------------------------------------
	CComponentImpl::~CComponentImpl()
	{
		_WINQ_FCONTEXT( "CComponentImpl::~CComponentImpl" );
	}

	//--------------------------------------------------------------------------------
    long CComponentImpl::Initialize( IConsole* lpConsole )
	{
		_WINQ_FCONTEXT( "CComponentImpl::Initialize");
		return E_NOTIMPL;
	}

	//--------------------------------------------------------------------------------
    long CComponentImpl::Notify( IDataObject* lpDataObject, MMC_NOTIFY_TYPE event, Cmp_long_ptr arg, Cmp_long_ptr param)
	{
		_WINQ_FCONTEXT( "CComponentImpl::Notify");
		return E_NOTIMPL;
	}

	//--------------------------------------------------------------------------------
    long CComponentImpl::Destroy( Cmp_long_ptr cookie)
	{
		_WINQ_FCONTEXT( "CComponentImpl::Destroy");
		return E_NOTIMPL;
	}

	//--------------------------------------------------------------------------------
    long CComponentImpl::QueryDataObject(  Cmp_long_ptr cookie, DATA_OBJECT_TYPES type, IDataObject** ppDataObject )
	{
		_WINQ_FCONTEXT( "CComponentImpl::QueryDataObject");
		return E_NOTIMPL;
	}

	//--------------------------------------------------------------------------------
    long CComponentImpl::GetResultViewType( Cmp_long_ptr cookie, TCHAR** ppViewType, long* pViewOptions )
	{
		_WINQ_FCONTEXT( "CComponentImpl::GetResultViewType");
		return E_NOTIMPL;
	}

	//--------------------------------------------------------------------------------
    long CComponentImpl::GetDisplayInfo( RESULTDATAITEM* pResultDataItem )
	{
		_WINQ_FCONTEXT( "CComponentImpl::GetDisplayInfo");
		return E_NOTIMPL;
	}

	//--------------------------------------------------------------------------------
    long CComponentImpl::CompareObjects( IDataObject* lpDataObjectA, IDataObject* lpDataObjectB )
	{
		_WINQ_FCONTEXT( "CComponentImpl::CompareObjects");
		return E_NOTIMPL;
	}

}//nsWin32

