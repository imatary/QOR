//WinQLDragDrop.cpp

// Copyright Querysoft Limited 2013, 2015, 2017
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "WinQL/CodeServices/WinQLPolicy.h"
#include "WinQL/Application/Threading/WinQLCriticalSection.h"
#include "WinQL/Application/ErrorSystem/WinQLError.h"
#include "WinQL/COM/Server/Impls/WinQLDragDrop.h"
#include "WinQAPI/OLE32.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{

	using namespace nsWinQAPI;

	__QOR_IMPLEMENT_COMCLASS_ID( CDropSourceImpl, IDropSource, 0x00000121,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46 );
	__QOR_IMPLEMENT_COMCLASS_ID( CDropTargetImpl, IDropTarget, 0x00000122,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46 );

	//--------------------------------------------------------------------------------
	CDropSourceImpl::CDropSourceImpl( CIUnknownImplBase<>* pImpl ) : CInterfaceImplBase< IDropSource >( pImpl )
	{
		_WINQ_FCONTEXT( "CDropSourceImpl::CDropSourceImpl" );
		RegisterInterface( dynamic_cast< IDropSource* >( this ) );
	}

	//--------------------------------------------------------------------------------
	CDropSourceImpl::~CDropSourceImpl()
	{
		_WINQ_FCONTEXT( "CDropSourceImpl::~CDropSourceImpl" );
	}

	//--------------------------------------------------------------------------------
	long CDropSourceImpl::QueryContinueDrag( int fEscapePressed, unsigned long grfKeyState )
	{
		_WINQ_FCONTEXT( "CDropSourceImpl::QueryContinueDrag" );
		long lResult = E_NOTIMPL;
		return lResult;
	}

	//--------------------------------------------------------------------------------
	long CDropSourceImpl::GiveFeedback( unsigned long dwEffect )
	{
		_WINQ_FCONTEXT( "CDropSourceImpl::GiveFeedback" );
		long lResult = E_NOTIMPL;
		return lResult;
	}

	//--------------------------------------------------------------------------------
	long CDropSourceImpl::DoDragDrop( unsigned long dwOKEffects, unsigned long* pdwEffect )
	{
		_WINQ_FCONTEXT( "CDropSourceImpl::DoDragDrop" );
		long lResult = -1;
		__QOR_PROTECT
		{
			lResult = m_Library.DoDragDrop( reinterpret_cast< ::LPDATAOBJECT >( Internal_Interface< IDataObject >() ), 
				reinterpret_cast< ::LPDROPSOURCE >( Internal_Interface< IDropSource >() ), dwOKEffects, pdwEffect );
		}__QOR_ENDPROTECT
		return lResult;
	}



	//--------------------------------------------------------------------------------
	CDropTargetImpl::CDropTargetImpl( CIUnknownImplBase<>* pImpl ) : CInterfaceImplBase< IDropTarget >( pImpl )
	{
		_WINQ_FCONTEXT( "CDropTargetImpl::CDropTargetImpl" );
		RegisterInterface( dynamic_cast< IDropTarget* >( this ) );
	}

	//--------------------------------------------------------------------------------
	CDropTargetImpl::~CDropTargetImpl()
	{
		_WINQ_FCONTEXT( "CDropTargetImpl::~CDropTargetImpl" );
	}

	//--------------------------------------------------------------------------------
	long CDropTargetImpl::DragEnter( IDataObject *pDataObj, unsigned long grfKeyState, POINTL pt, unsigned long* pdwEffect )
	{
		_WINQ_FCONTEXT( "CDropTargetImpl::DragEnter" );
		long lResult = E_NOTIMPL;
		return lResult;
	}

	//--------------------------------------------------------------------------------
	long CDropTargetImpl::DragOver( unsigned long grfKeyState, POINTL pt, unsigned long* pdwEffect )
	{
		_WINQ_FCONTEXT( "CDropTargetImpl::DragOver" );
		long lResult = E_NOTIMPL;
		return lResult;
	}

	//--------------------------------------------------------------------------------
	long CDropTargetImpl::DragLeave( void )
	{
		_WINQ_FCONTEXT( "CDropTargetImpl::DragLeave" );
		long lResult = E_NOTIMPL;
		return lResult;
	}

	//--------------------------------------------------------------------------------
	long CDropTargetImpl::Drop( IDataObject* pDataObj, unsigned long grfKeyState, POINTL pt, unsigned long* pdwEffect )
	{
		_WINQ_FCONTEXT( "CDropTargetImpl::Drop" );
		long lResult = E_NOTIMPL;
		return lResult;
	}

}//nsWin32
