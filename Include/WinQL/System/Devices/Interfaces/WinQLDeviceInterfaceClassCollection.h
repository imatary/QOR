//WinQLDeviceInterfaceClassCollection.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Win32 Device Interface Class Collection

#ifndef WINQL_DEVICEINTERFACECLASSCOLLECTION_H_3
#define WINQL_DEVICEINTERFACECLASSCOLLECTION_H_3

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#include "WinQL/Definitions/Data.h"
#include "WinQL/Definitions/IO.h"
#include "WinQL/System/Devices/WinQLDevice.h"
#include "WinQL/System/Devices/WinQLDeviceHandle.h"
#include "WinQL/System/Devices/Interfaces/WinQLDeviceInterfaceClass.h"
#include "WinQL/CodeServices/Text/WinString.h"
#include <map>

//--------------------------------------------------------------------------------
namespace nsWin32
{

	class __QOR_INTERFACE( __WINQL ) CDeviceInterfaceClass;

	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL ) CDeviceInterfaceClassCollection : public std::map< nsCodeQOR::__mxGUID*, CDeviceInterfaceClass* >
	{

	public:

		typedef std::map< nsCodeQOR::__mxGUID*, CDeviceInterfaceClass* > BaseType;
		/*
		//--------------------------------------------------------------------------------
		enum eSystemDefinedInterfaceClasses
		{
			Bus1394 = 0,
			Class61883,
			ApplicationLaunchButton,
			Battery,
			Lid,
		};
		*/
		static nsCodeQOR::__mxGUID BUS1394_CLASS_GUID;
		static nsCodeQOR::__mxGUID GUID_61883_CLASS;

		static nsCodeQOR::__mxGUID GUID_DEVICE_APPLICATIONLAUNCH_BUTTON;
		static nsCodeQOR::__mxGUID GUID_DEVICE_BATTERY;
		static nsCodeQOR::__mxGUID GUID_DEVICE_LID;
		static nsCodeQOR::__mxGUID GUID_DEVICE_MEMORY;
		static nsCodeQOR::__mxGUID GUID_DEVICE_MESSAGE_INDICATOR;
		static nsCodeQOR::__mxGUID GUID_DEVICE_PROCESSOR;
		static nsCodeQOR::__mxGUID GUID_DEVICE_SYS_BUTTON;
		static nsCodeQOR::__mxGUID GUID_DEVICE_THERMAL_ZONE;
		static nsCodeQOR::__mxGUID GUID_BTHPORT_DEVICE_INTERFACE;
		static nsCodeQOR::__mxGUID GUID_DEVINTERFACE_KEYBOARD;
		static nsCodeQOR::__mxGUID GUID_DEVINTERFACE_MOUSE;

		static nsCodeQOR::__mxGUID GUID_DEVINTERFACE_BRIGHTNESS;
		static nsCodeQOR::__mxGUID GUID_DEVINTERFACE_DISPLAY_ADAPTER;
		static nsCodeQOR::__mxGUID GUID_DEVINTERFACE_I2C;
		static nsCodeQOR::__mxGUID GUID_DEVINTERFACE_IMAGE;
		static nsCodeQOR::__mxGUID GUID_DEVINTERFACE_MONITOR;
		static nsCodeQOR::__mxGUID GUID_DEVINTERFACE_OPM;
		static nsCodeQOR::__mxGUID GUID_DEVINTERFACE_VIDEO_OUTPUT_ARRIVAL;
		static nsCodeQOR::__mxGUID GUID_DISPLAY_DEVICE_ARRIVAL;


		__QOR_DECLARE_OCLASS_ID( CDeviceInterfaceClassCollection );

		CDeviceInterfaceClassCollection( const mxTCHAR* szMachine = 0 );
		CDeviceInterfaceClassCollection( const CDeviceInterfaceClassCollection& src );
		CDeviceInterfaceClassCollection& operator = ( const CDeviceInterfaceClassCollection& src );
		~CDeviceInterfaceClassCollection();

	protected:

		nsCodeQOR::CTLRef< CDeviceInterfaceClass > RegisterInterfaceClass( nsCodeQOR::__mxGUID* GUID );

		const mxTCHAR* m_szMachine;

	private:

		nsWinQAPI::CSetupAPI& m_Library;

	};

}//nsWin32

#endif//WINQL_DEVICEINTERFACECLASSCOLLECTION_H_3

