//WinQLSysLink.cp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "CompilerQOR.h"
__QCMP_WARNING_PUSH
__QCMP_WARNING_DISABLE( __QCMP_WARN_THIS_USED_IN_BASE_INIT_LIST, "Safe usafe: stored in member for later use" );
#include "WinQL/GUI/Windows/SysLink.h"
__QCMP_WARNING_POP

#if		( _WIN32_WINNT >= 0x0501 )

//--------------------------------------------------------------------------------
namespace nsWin32
{
	__QOR_IMPLEMENT_OCLASS_LUID( CSysLinkClass );

	//--------------------------------------------------------------------------------
	CSysLinkClass::CSysLinkClass() : m_ComCtrl32( CCommonCtrl::CCLINK_CLASS )
	{
		_WINQ_FCONTEXT( "CSysLinkClass::CSysLinkClass" );
	}

	//--------------------------------------------------------------------------------
	CSysLinkClass::~CSysLinkClass()
	{
		_WINQ_FCONTEXT( "CSysLinkClass::~CSysLinkClass" );
	}

	//--------------------------------------------------------------------------------
	bool CSysLinkClass::Preregistered()
	{
		_WINQ_FCONTEXT( "CSysLinkClass::Preregistered" );
		return true;
	}

	//--------------------------------------------------------------------------------
	const TCHAR* CSysLinkClass::Name()
	{
		_WINQ_FCONTEXT( "CSysLinkClass::Name" );
		return _TXT( "SysLink" );
	}






	__QOR_IMPLEMENT_OCLASS_LUID( CSysLinkFactory );

	//--------------------------------------------------------------------------------
	CSysLinkFactory::CSysLinkFactory() : CWindowFactory()
	{
		_WINQ_FCONTEXT( "CSysLinkFactory::CSysLinkFactory" );
	}

	//--------------------------------------------------------------------------------
	CSysLinkFactory::~CSysLinkFactory()
	{
		_WINQ_FCONTEXT( "CSysLinkFactory::~CSysLinkFactory" );
	}
	
	//--------------------------------------------------------------------------------
	void* CSysLinkFactory::Instance()
	{
		_WINQ_FCONTEXT( "CSysLinkFactory::Instance" );
		return new CSysLink;//return PreCreateWindow< CSysLink, CSysLinkClass >();
	}

	//--------------------------------------------------------------------------------
	
	
	
	
	
	
	__QOR_IMPLEMENT_OCLASS_LUID( CSysLink );

	//--------------------------------------------------------------------------------
	CSysLink::CSysLink() : CWinCtrlWindow()
	{	
		_WINQ_FCONTEXT( "CSysLink::CSysLink" );
	}

	//--------------------------------------------------------------------------------
	CSysLink::~CSysLink()
	{
		_WINQ_FCONTEXT( "CSysLink::~CSysLink" );
	}

	//--------------------------------------------------------------------------------
	long CSysLink::OnNotify( NotificationMessageHeader* pHdr )
	{
		_WINQ_FCONTEXT( "CSysLink::OnNotify" );
		long lResult = 0;

		if( pHdr != 0 )
		{
			lResult = OnUnknownNotification( pHdr );
		}
		return lResult;
	}

	//--------------------------------------------------------------------------------
	long CSysLink::OnUnknownNotification( NotificationMessageHeader* pHdr )
	{
		_WINQ_FCONTEXT( "CSysLink::OnUnknownNotification" );
		long lResult = 0;
		return lResult;
	}

}//nsWin32

#endif//( _WIN32_WINNT >= 0x0501 )
