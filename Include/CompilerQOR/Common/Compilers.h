//Compilers.h

// Copyright Querysoft Limited 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef QOR_COMPILERS_H_1
#define QOR_COMPILERS_H_1

//Defines the set of potentially supported compilers, 
//the values are arbitrary and may change as compilers are added so don't use them in any calculation

#define __QCMP_GCCXML			0x02	//GCC-XML
#define __QCMP_CRAYC			0x03	//EDG based Cray compiler
#define __QCMP_NVIDIACUDA		0x04	//NVIDIA CUDA C++ compiler for GPU
#define __QCMP_COMCEAU			0x05	//Comceau C++
#define __QCMP_PATHSCALE		0x06	//PathScale EKOPath compiler
#define __QCMP_CLANG			0x07	//Clang C++
#define __QCMP_DIGITALMARS		0x08	//Digital Mars C++
#define __QCMP_INTEL			0x09	//Intel
#define __QCMP_GCC				0x0A	//GNU C++:
#define __QCMP_KAI				0x0B	//Kai C++
#define __QCMP_SGIMIPSPRO		0x0C	//SGI MIPSpro C++
#define __QCMP_GREENHILLS		0x0D	//Greenhills C++
#define __QCMP_CODEGEAR			0x0E	//CodeGear
#define __QCMP_BORLAND			0x0F	//Borland C++
#define __QCMP_METROCW			0x10	//Metrowerks CodeWarrior
#define __QCMP_WATCOM			0x11	//Open Watcom C++
#define __QCMP_SUNWSHOP			0x12	//Sun Workshop Compiler C++
#define __QCMP_HPACC			0x13	//HP aCC
#define __QCMP_MRCPP			0x14	//MPW MrCpp or SCpp
#define __QCMP_PORTLAND			0x15	//Portland Group Inc.
#define __QCMP_IBMXL			0x16	//IBM XL C/C+ for Linux (Little Endian)
#define __QCMP_IAR_ICC			0x17	//IAR C/C++ Compiler
#define __QCMP_METAWARE_HIGH	0x18	//Metaware High C/C++ Compiler
#define __QCMP_COMPAQ_DEC		0x19	//Compaq C/C++
#define __QCMP_DIAB				0x20	//Diab C/C++
#define __QCMP_DIGNUS			0x21	//Dignus Systems/C++
#define __QCMP_MICROTEC			0x22	//Microtec C/C++
#define __QCMP_PALM				0x23	//Palm C/C++
#define __QCMP_TENDRA			0x24	//TenDRA C/C++
#define __QCMP_MSVC				0x01	//Microsoft Visual C++
//NOTE: Add new compiler support here

#define QOR_COMP_COMPILERS	(__QCMP_MSVC)(__QCMP_GCCXML)(__QCMP_CRAYC)(__QCMP_NVIDIACUDA)(__QCMP_COMCEAU)(__QCMP_PATHSCALE)(__QCMP_CLANG)(__QCMP_DIGITALMARS)(__QCMP_INTEL)(__QCMP_GCC)\
(__QCMP_KAI)(__QCMP_SGIMIPSPRO)(__QCMP_GREENHILLS)(__QCMP_CODEGEAR)(__QCMP_BORLAND)(__QCMP_METROCW)(__QCMP_WATCOM)(__QCMP_SUNWSHOP)(__QCMP_HPACC)(__QCMP_MRCPP)(__QCMP_PORTLAND)\
(__QCMP_IBMXL)(__QCMP_IAR_ICC)(__QCMP_METAWARE_HIGH)(__QCMP_COMPAQ_DEC)(__QCMP_DIAB)(__QCMP_DIGNUS)(__QCMP_MICROTEC)(__QCMP_PALM)(__QCMP_TENDRA)
//NOTE: Add new compiler support here

#endif//QOR_COMPILERS_H_1


