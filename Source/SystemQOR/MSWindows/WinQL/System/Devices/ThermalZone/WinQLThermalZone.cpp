//WinQLTermalZone.cpp

// Copyright Querysoft Limited 2013, 2017
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "WinQL/CodeServices/WinQLPolicy.h"
#include "WinQL/Application/Threading/WinQLCriticalSection.h"
#include "WinQL/Definitions/Constants.h"
#include "WinQL/Application/ErrorSystem/WinQLError.h"
#include "WinQL/CodeServices/Text/WinString.h"
#include "WinQL/System/Devices/ThermalZone/WinQLThermalZone.h"
#include "WinQL/System/Devices/Interfaces/WinQLDeviceInterfaceClass.h"
#include "WinQL/System/WinQLSystem.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	__QOR_IMPLEMENT_OCLASS_GUID( CThermalZone, 0x4AFA3D51, 0x74A7, 0x11d0, 0xbe, 0x5e, 0x00, 0xA0, 0xC9, 0x06, 0x28, 0x57 );
	
	nsCodeQOR::CTExternalRegEntry< CThermalZone > CThermalZone::RegEntry;

	//--------------------------------------------------------------------------------
	CThermalZone::CThermalZone() : CDeviceInterface()
	{
		_WINQ_FCONTEXT( "CThermalZone::CThermalZone" );
	}

	//--------------------------------------------------------------------------------
	CThermalZone::~CThermalZone()
	{
		_WINQ_FCONTEXT( "CThermalZone::~CThermalZone" );
	}

	//--------------------------------------------------------------------------------
	void CThermalZone::Open()
	{
		_WINQ_FCONTEXT("CThermalZone::Open");
		if (m_Session.IsNull())
		{
			m_Session = CDeviceInterface::Open(Generic_Read | Generic_Write, File_Share_Read | File_Share_Write, File_Attribute_Normal);
		}
	}

	//--------------------------------------------------------------------------------
	void CThermalZone::Close()
	{
		_WINQ_FCONTEXT("CThermalZone::Open");
		m_Session.Dispose();
	}

	//--------------------------------------------------------------------------------
	void CThermalZone::QueryInformation()
	{
		_WINQ_FCONTEXT("CThermalZone::QueryInformation");
		Open();
		ThermalInfoEx info;
		unsigned long ulBytesReturned = 0;
		m_Session->Control(__WINQL_DEVICE_CONTROL_CODE(File_Device_ThermalZone, Query, Method_Buffered, File_Read_Access), 0, 0, &info, sizeof(info), &ulBytesReturned, 0);
	}

	//--------------------------------------------------------------------------------
	void CThermalZone::SetCoolingPolicy()
	{
		_WINQ_FCONTEXT("CThermalZone::SetCoolingPolicy");
		m_Session->Control(__WINQL_DEVICE_CONTROL_CODE(File_Device_ThermalZone, Set_Cooling, Method_Buffered, File_Write_Access), 0, 0, 0, 0, 0, 0);
	}

	//--------------------------------------------------------------------------------
	void CThermalZone::RunActiveCoolingMethod()
	{
		_WINQ_FCONTEXT("CThermalZone::RunActiveCoolingMethod");
		m_Session->Control(__WINQL_DEVICE_CONTROL_CODE(File_Device_ThermalZone, Run_Active_Cooling, Method_Buffered, File_Write_Access), 0, 0, 0, 0, 0, 0);
	}

}//nsWin32


