//NCPointerController.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "CompilerQOR.h"
__QCMP_WARNING_PUSH
__QCMP_WARNING_DISABLE( __QCMP_WARN_THIS_USED_IN_BASE_INIT_LIST, "Safe usage: stored in member for later use" )
#include "WinQL/GUI/Controllers/Parts/NCPointerController.h"
#include "WinQL/GUI/Window.h"
__QCMP_WARNING_POP

//--------------------------------------------------------------------------------
namespace nsWin32
{
	__QOR_IMPLEMENT_OCLASS_LUID( CNCPointerController );

	//--------------------------------------------------------------------------------
	CNCPointerController::CNCPointerController( nsMammut::CModel* pModelItem, nsQOR::CController::ref_type Parent ) : CBaseWindowPartController( pModelItem, Parent )
	{
		_WINQ_FCONTEXT( "CNCPointerController::CNCPointerController" );
	}

	//--------------------------------------------------------------------------------
	CNCPointerController::~CNCPointerController()
	{
		_WINQ_FCONTEXT( "CNCPointerController::~CNCPointerController" );
	}

	//--------------------------------------------------------------------------------
	bool CNCPointerController::ProcessMessage( COSWindow& Window, Cmp_long_ptr& lResult, unsigned int uMsg, Cmp_uint_ptr wParam, Cmp_long_ptr lParam )
	{
		_WINQ_FCONTEXT( "CNCPointerController::ProcessMessage" );

		bool bProcessed = ProcessHook( Window, lResult, uMsg, wParam, lParam );

		switch ( uMsg )
		{
		case COSWindow::wmNCMouseMove:
			{
				OnNCMouseMove( Window, wParam, lParam );
				lResult = 0;
				bProcessed = true;
			}
			break;
		case COSWindow::wmNCLButtonDown:
			{
				OnNCLButtonDown( Window, wParam, lParam );
				lResult = 0;
				bProcessed = true;
			}
			break;
		case COSWindow::wmNCLButtonUp:
			{
				OnNCLButtonUp( Window, wParam, lParam );
				lResult = 0;
				bProcessed = true;
			}
			break;
		case COSWindow::wmNCLButtonDblClk:
			{
				OnNCLButtonDblClk( Window, wParam, lParam );
				lResult = 0;
				bProcessed = true;
			}
			break;
		case COSWindow::wmNCRButtonDown:
			{
				OnNCRButtonDown( Window, wParam, lParam );
				lResult = 0;
				bProcessed = true;
			}
			break;
		case COSWindow::wmNCRButtonUp:
			{
				OnNCRButtonUp( Window, wParam, lParam );
				lResult = 0;
				bProcessed = true;
			}
			break;
		case COSWindow::wmNCRButtonDblClk:
			{
				OnNCRButtonDblClk( Window, wParam, lParam );
				lResult = 0;
				bProcessed = true;
			}
			break;
		case COSWindow::wmNCMButtonDown:
			{
				OnNCMButtonDown( Window, wParam, lParam );
				lResult = 0;
				bProcessed = true;
			}
			break;
		case COSWindow::wmNCMButtonUp:
			{
				OnNCMButtonUp( Window, wParam, lParam );
				lResult = 0;
				bProcessed = true;
			}
			break;
		case COSWindow::wmNCMButtonDblClk:
			{
				OnNCMButtonDblClk( Window, wParam, lParam );
				lResult = 0;
				bProcessed = true;
			}
			break;
		}

		return bProcessed;
	}

	//--------------------------------------------------------------------------------
	void CNCPointerController::OnNCMouseMove( COSWindow& Window, Cmp_uint_ptr wParam, Cmp_long_ptr lParam )
	{
		_WINQ_FCONTEXT( "CNCPointerController::OnNCMouseMove" );
		Window.DefProc( COSWindow::wmNCMouseMove, wParam, lParam );
	}

	//--------------------------------------------------------------------------------
	void CNCPointerController::OnNCLButtonDown( COSWindow& Window, Cmp_uint_ptr wParam, Cmp_long_ptr lParam )
	{
		_WINQ_FCONTEXT( "CNCPointerController::OnNCLButtonDown" );
		Window.DefProc( COSWindow::wmNCLButtonDown, wParam, lParam );
	}

	//--------------------------------------------------------------------------------
	void CNCPointerController::OnNCLButtonUp( COSWindow& Window, Cmp_uint_ptr wParam, Cmp_long_ptr lParam )
	{
		_WINQ_FCONTEXT( "CNCPointerController::OnNCLButtponUp" );
		Window.DefProc( COSWindow::wmNCLButtonUp, wParam, lParam );
	}

	//--------------------------------------------------------------------------------
	void CNCPointerController::OnNCLButtonDblClk( COSWindow& Window, Cmp_uint_ptr wParam, Cmp_long_ptr lParam )
	{
		_WINQ_FCONTEXT( "CNCPointerController::OnNCLButtonDblClk" );
		Window.DefProc( COSWindow::wmNCLButtonDblClk, wParam, lParam );
	}

	//--------------------------------------------------------------------------------
	void CNCPointerController::OnNCRButtonDown( COSWindow& Window, Cmp_uint_ptr wParam, Cmp_long_ptr lParam )
	{
		_WINQ_FCONTEXT( "CNCPointerController::ONNCRButtonDown" );
		Window.DefProc( COSWindow::wmNCRButtonDown, wParam, lParam );
	}

	//--------------------------------------------------------------------------------
	void CNCPointerController::OnNCRButtonUp( COSWindow& Window, Cmp_uint_ptr wParam, Cmp_long_ptr lParam )
	{
		_WINQ_FCONTEXT( "CNCPointerController::ONNCRButtonUp" );
		Window.DefProc( COSWindow::wmNCRButtonUp, wParam, lParam );
	}

	//--------------------------------------------------------------------------------
	void CNCPointerController::OnNCRButtonDblClk( COSWindow& Window, Cmp_uint_ptr wParam, Cmp_long_ptr lParam )
	{
		_WINQ_FCONTEXT( "CNCPointerController::OnNCRButtonDblClk" );
		Window.DefProc( COSWindow::wmNCRButtonDblClk, wParam, lParam );
	}

	//--------------------------------------------------------------------------------
	void CNCPointerController::OnNCMButtonDown( COSWindow& Window, Cmp_uint_ptr wParam, Cmp_long_ptr lParam )
	{
		_WINQ_FCONTEXT( "CNCPointerController::OnNCMButtonDown" );
		Window.DefProc( COSWindow::wmNCMButtonDown, wParam, lParam );
	}

	//--------------------------------------------------------------------------------
	void CNCPointerController::OnNCMButtonUp( COSWindow& Window, Cmp_uint_ptr wParam, Cmp_long_ptr lParam )
	{
		_WINQ_FCONTEXT( "CNCPointerController::OnNCMButtonUp" );
		Window.DefProc( COSWindow::wmNCMButtonUp, wParam, lParam );
	}

	//--------------------------------------------------------------------------------
	void CNCPointerController::OnNCMButtonDblClk( COSWindow& Window, Cmp_uint_ptr wParam, Cmp_long_ptr lParam )
	{
		_WINQ_FCONTEXT( "CNCPointerController::OnNCMButtonDblClk" );
		Window.DefProc( COSWindow::wmNCMButtonDblClk, wParam, lParam );
	}

}//nsWin32

