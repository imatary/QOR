//CodeString.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//A class to raise the semantic level of strings embedded in the code
//It is intended that this will assist in automatic translation lookup 
//of hard coded strings in the future

#ifndef CODEQOR_DATASTRUCTS_CODESTRING_H_1
#define CODEQOR_DATASTRUCTS_CODESTRING_H_1

#include "CompilerQOR.h"

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#include "CodeQOR/Text/ACodeString.h"
#include "CodeQOR/Text/WCodeString.h"

//--------------------------------------------------------------------------------
//Wrap an embedded string _TXT(), _ATXT() or _WTXT() to enable it to be treated as a first class object
//_ATXT for embedded strings that are always ASCII
//_WTXT for embedded strings that are always UNICODE subject to compiler support
//_TXT for embedded strings that follow __QOR_UNICODE

//Use _T for embedded strings that remain raw, i.e. not objects, but follow __QOR_UNICODE by using _TXT where possible

#	define _ATXT( _X ) ( nsCodeQOR::CACodeString( _X ) )

//Enable unicode strings in the code on compilers that support it e.g. Visual C++
#if ( __QCMP_EXTENSION( Unicode_Const_Str_Conversion ) ) 
#	define _WTXT( _X ) ( nsCodeQOR::CWCodeString( L##_X ) )
#else
#	define _WTXT( _X ) ( nsCodeQOR::CACodeString( _X ) )
#endif

#ifndef _T
#	if ( __QOR_UNICODE )
#		define _T( _X ) L##_X
#	else   
#		define _T( _X ) _X
#	endif
#endif

//--------------------------------------------------------------------------------
#if ( __QOR_UNICODE )
    typedef wchar_t mxTCHAR;
	typedef nsCodeQOR::CWCodeString CodeString;
#	define _TXT( _X ) ( _WTXT( _X ) )
#else
    typedef char mxTCHAR;
	typedef nsCodeQOR::CACodeString CodeString;
#	define _TXT( _X ) ( _ATXT( _X ) )
#endif

#define __QOR_CODESTRING( _V, _X ) nsCodeQOR::CCodeString _V( _T( _X ) )

//--------------------------------------------------------------------------------
namespace nsCodeQOR
{
}//nsCodeQOR

#endif//CODEQOR_DATASTRUCTS_CODESTRING_H_1
