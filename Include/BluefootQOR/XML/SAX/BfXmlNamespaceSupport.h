//BfXmlNamespaceSupport.h

// Copyright Querysoft Limited 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef BLUEFOOT_XML_SAX_NAMESPACESUPPORT_H_3
#define BLUEFOOT_XML_SAX_NAMESPACESUPPORT_H_3

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

//
#include "CompilerQOR.h"
#include "CodeQOR/Text/TString.h"
#include <vector>
#include <map>
#include <stack>

//------------------------------------------------------------------------------
namespace nsBluefoot
{
	//------------------------------------------------------------------------------
	class __QOR_INTERFACE( __BLUEFOOTQOR ) CXmlNamespaceSupport
	{
	public:

		typedef std::map< nsCodeQOR::CUCS2String, nsCodeQOR::CUCS2String > NamespaceMap;

		__QOR_DECLARE_OCLASS_ID( CXmlNamespaceSupport );

		CXmlNamespaceSupport();
		~CXmlNamespaceSupport();

		void SetPrefix( const nsCodeQOR::CUCS2String&, const nsCodeQOR::CUCS2String& );

		nsCodeQOR::CUCS2String Prefix( const nsCodeQOR::CUCS2String& ) const;
		nsCodeQOR::CUCS2String Uri( const nsCodeQOR::CUCS2String& ) const;
		void SplitName( const nsCodeQOR::CUCS2String&, nsCodeQOR::CUCS2String&, nsCodeQOR::CUCS2String& ) const;
		void ProcessName( const nsCodeQOR::CUCS2String&, bool, nsCodeQOR::CUCS2String&, nsCodeQOR::CUCS2String& ) const;
		std::vector< nsCodeQOR::CUCS2String > Prefixes() const;
		std::vector< nsCodeQOR::CUCS2String > Prefixes( const nsCodeQOR::CUCS2String& ) const;

		void PushContext( void );
		void PopContext( void );
		void Reset( void );

	private:

		std::stack< NamespaceMap > m_NsStack;
		NamespaceMap m_Ns;

		friend class CXmlSimpleReaderPrivate;
		friend class CXMLReader;
		CXmlNamespaceSupport( const CXmlNamespaceSupport& src );
		CXmlNamespaceSupport& operator = ( const CXmlNamespaceSupport& src );
	};

}//nsBluefoot

#endif//BLUEFOOT_XML_SAX_NAMESPACESUPPORT_H_3
