//DeviceCollection.h

// Copyright Querysoft Limited 2013, 2017
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Win32 DeviceManager Collection Class Base

#ifndef WINQL_DEVICECOLLECTION_H_3
#define WINQL_DEVICECOLLECTION_H_3

#include "CompilerQOR.h"

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#include "WinQL/Definitions/Data.h"
#include "WinQL/Definitions/IO.h"
#include "MammutQOR/Models/MapModel.h"

//--------------------------------------------------------------------------------
namespace nsWinQAPI
{
	class __QOR_INTERFACE( __WINQAPI ) CSetupAPI;
}

//--------------------------------------------------------------------------------
namespace nsWin32
{
	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE(__WINQL) CSetupAPIBase
	{
	public:

		CSetupAPIBase();
		CSetupAPIBase( const CSetupAPIBase& src );
		CSetupAPIBase( CSetupAPIBase&& src );
		CSetupAPIBase& operator = ( const CSetupAPIBase& src );
		CSetupAPIBase& operator = (CSetupAPIBase&& src);
		virtual ~CSetupAPIBase();

	protected:

		nsWinQAPI::CSetupAPI& m_Library;

	};

	//--------------------------------------------------------------------------------
	template< class TKey, class TItem >
	class CTDeviceCollection : public nsMammut::CMapModel< TKey, TItem >, public CSetupAPIBase
	{
	public:

		typedef nsMammut::CMapModel< TKey, TItem > BaseName;

		//--------------------------------------------------------------------------------
		CTDeviceCollection( const mxTCHAR* szMachineName ) : BaseName(), CSetupAPIBase()
		,	m_szMachineName( szMachineName )
		,	m_bRemote( m_szMachineName == 0 ? false : true )
		{
		}

		//--------------------------------------------------------------------------------
		CTDeviceCollection( const CTDeviceCollection& src ) : BaseName( src ), CSetupAPIBase( src )
		{
			m_szMachineName = src.m_szMachineName;
			m_bRemote = src.m_bRemote;
		}

		//--------------------------------------------------------------------------------
		CTDeviceCollection& operator = ( const CTDeviceCollection& src )
		{
			if( &src != this )
			{
				BaseName::operator = ( src );
				m_szMachineName = src.m_szMachineName;
				m_bRemote = src.m_bRemote;
			}
			return *this;
		}

		//--------------------------------------------------------------------------------
		virtual ~CTDeviceCollection()
		{
		}

		//--------------------------------------------------------------------------------
		unsigned long Size( void )
		{
			return size();
		}

		//--------------------------------------------------------------------------------
		bool IsRemote( void )
		{
			return m_bRemote;
		}

		//--------------------------------------------------------------------------------
		bool IsLocal( void )
		{
			return !m_bRemote;
		}

	protected:
		
		const mxTCHAR* m_szMachineName;
		bool m_bRemote;

	private:

	};

}//

#endif//WINQL_DEVICECOLLECTION_H_3
