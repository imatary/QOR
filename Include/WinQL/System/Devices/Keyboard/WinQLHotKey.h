//WinQLHotKey.h

// Copyright Querysoft Limited 2013, 2017
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Win32 Keyboard Input

#ifndef WINQL_SYSTEM_DEVICE_KEYBOARD_HOTKEY_H_3
#define WINQL_SYSTEM_DEVICE_KEYBOARD_HOTKEY_H_3

#include "CompilerQOR.h"

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#include "WinQL/WinQL.h"
#include "WinQL/CodeServices/WinQLPolicy.h"
#include "WinQL/Application/Threading/WinQLCriticalSection.h"
#include "WinQL/Definitions/Handles.h"
#include "WinQL/CodeServices/Handles/WinQLHandleMap.h"
#include "WinQL/GUI/Window.h"
#include "WinQL/Application/Threading/WinQLThreadAffinity.h"
#include "WinQL/CodeServices/WinQLSharedRef.h"

//--------------------------------------------------------------------------------
namespace nsWinQAPI
{
	class __QOR_INTERFACE(__WINQAPI) CUser32;
}

//--------------------------------------------------------------------------------
namespace nsWin32
{

	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE(__WINQL) CHotKey
	{
	public:

		typedef nsCodeQOR::CTLRef< CHotKey > refType;

		__QOR_DECLARE_OCLASS_ID(CHotKey);

		CHotKey();
		CHotKey(COSWindow::refType Wnd, int id, unsigned int fsModifiers, unsigned int vk, int* pbResult);
		CHotKey(const CHotKey& src);
		CHotKey& operator = (const CHotKey& src);
		virtual ~CHotKey();

	protected:

		COSWindow::refType m_Wnd;
		int m_id;
		int* m_pbResult;

	private:

		nsWinQAPI::CUser32& m_Library;
	};

	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE(__WINQL) CHotKeys : public nsCodeQOR::CTArray< CHotKey*, CWinQLPolicy >
	{
	public:

		typedef nsCodeQOR::CTArray< CHotKey, CWinQLPolicy > BaseName;

		__QOR_DECLARE_OCLASS_ID(CHotKeys);

		CHotKeys();
		virtual ~CHotKeys();

		CHotKey::refType CreateHotKey(COSWindow::refType Wnd, int id, unsigned int fsModifiers, unsigned int vk, int* pbResult);
	};

}//nsWin32

#endif//WINQL_SYSTEM_DEVICE_KEYBOARD_HOTKEY_H_3
