//BuildOpts.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.


//Definitions needed to construct an MSVC 2010 command line


#define QOR_PP_BUILD_COMPILER_EXECUTABLE				cl.exe
#define QOR_PP_BUILD_LINKER_EXECUTABLE					link.exe
#define QOR_PP_BUILD_LIB_EXECUTABLE						lib.exe
#define QOR_PP_BUILD_ASSEMBLER_EXECUTABLE				ml.exe

#ifndef	QOR_PP_BUILD_CMP_INTRINSICS_ENABLE
#	define QOR_PP_BUILD_CMP_INTRINSICS_ENABLE			__QCS_NO_
#endif

#define QOR_PP_BUILD_CMP_OPT_SWTICH_PRE					/

#ifndef NDEBUG
#	define QOR_PP_CONFIG_INT_DIR						Debug/
#	define QOR_PP_BUILD_CMP_RUNTIME_LIBRARY_OPTS		( 2, ( MTd, MDd ) )
#else
#	define QOR_PP_BUILD_CMP_RUNTIME_LIBRARY_OPTS		( 2, ( MT, MD ) )
#	define QOR_PP_CONFIG_INT_DIR						Release/
#endif

//general
//	includes
#define QOR_PP_BUILD_CMP_INCLUDE_PATH_OPT				I//Switch for include folders
#define QOR_PP_BUILD_CMP_DEFINE_OPT						D//SWitch for preprocessor definitions

//	Debug format
#define QOR_PP_BUILD_CMP_DEBUG_FORMAT_OPTS				( 3,( Z7 /*C7 compatible*/, Zi /*Program Databse*/, ZI /*Edit and Continue*/ ) )
#define QOR_PP_BUILD_CMP_DEBUG_FORMAT_SELECT_DEFAULT	1
#ifndef QOR_PP_BUILD_CMP_DEBUG_FORMAT_SELECT
#	define QOR_PP_BUILD_CMP_DEBUG_FORMAT_SELECT			QOR_PP_BUILD_CMP_DEBUG_FORMAT_SELECT_DEFAULT
#endif
#define QOR_PP_BUILD_CMP_DEBUG_FORMAT_OPT				QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_CMP_DEBUG_FORMAT_SELECT, QOR_PP_BUILD_CMP_DEBUG_FORMAT_OPTS )			

//	Logo supression
#define QOR_PP_BUILD_CMP_SUPRESS_LOGO_OPTS				( 2, ( QOR_PP_EMPTY(), nologo ) )
#define QOR_PP_BUILD_CMP_SUPRESS_LOGO_SELECT_DEFAULT	1
#ifndef QOR_PP_BUILD_CMP_SUPRESS_LOGO_SELECT
#	define QOR_PP_BUILD_CMP_SUPRESS_LOGO_SELECT			QOR_PP_BUILD_CMP_SUPRESS_LOGO_SELECT_DEFAULT
#endif
#define QOR_PP_BUILD_CMP_SUPRESS_LOGO_OPT				QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_CMP_SUPRESS_LOGO_SELECT, QOR_PP_BUILD_CMP_SUPRESS_LOGO_OPTS )

//	Warning level
#define QOR_PP_BUILD_CMP_WARNING_LEVEL_OPTS				( 6,( W0, W1, W2, W3, W4, Wall ) )
#define QOR_PP_BUILD_CMP_WARNING_LEVEL_SELECT_DEFAULT	4
#ifndef QOR_PP_BUILD_CMP_WARNING_LEVEL_SELECT
#	define QOR_PP_BUILD_CMP_WARNING_LEVEL_SELECT		QOR_PP_BUILD_CMP_WARNING_LEVEL_SELECT_DEFAULT
#endif
#define QOR_PP_BUILD_CMP_WARNING_LEVEL_OPT				QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_CMP_WARNING_LEVEL_SELECT, QOR_PP_BUILD_CMP_WARNING_LEVEL_OPTS )

//	Warnings as errors
#define QOR_PP_BUILD_CMP_WARNINGS_AS_ERRORS_OPTS		( 2,( WX-, WX ) )
#define QOR_PP_BUILD_CMP_WARNINGS_AS_ERRORS_SELECT_DEF	0
#ifndef	QOR_PP_BUILD_CMP_WARNINGS_AS_ERRORS_SELECT
#	define QOR_PP_BUILD_CMP_WARNINGS_AS_ERRORS_SELECT	QOR_PP_BUILD_CMP_WARNINGS_AS_ERRORS_SELECT_DEF	
#endif
#define QOR_PP_BUILD_CMP_WARNINS_AS_ERRORS_OPT			QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_CMP_WARNINGS_AS_ERRORS_SELECT, QOR_PP_BUILD_CMP_WARNINGS_AS_ERRORS_OPTS )

//	Multiprocessor build
#define QOR_PP_BUILD_CMP_MULTIPROCESSOR_OPTS			( 2, ( QOR_PP_EMPTY(), MP ) )
#define QOR_PP_BUILD_CMP_MULTIPROCESSOR_SELECT_DEFAULT	1
#ifndef QOR_PP_BUILD_CMP_MULTIPROCESSOR_SELECT
#	define QOR_PP_BUILD_CMP_MULTIPROCESSOR_SELECT		QOR_PP_BUILD_CMP_MULTIPROCESSOR_SELECT_DEFAULT
#endif
#define QOR_PP_BUILD_CMP_MULTIPROCESSOR_OPT				QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_CMP_MULTIPROCESSOR_SELECT, QOR_PP_BUILD_CMP_MULTIPROCESSOR_OPTS )


#define QOR_PP_BUILD_CMP_SWITCHES_GENERAL				QOR_PP_BUILD_CMP_MAKE_OPT( QOR_PP_BUILD_CMP_DEBUG_FORMAT_OPT )	\
														QOR_PP_BUILD_CMP_MAKE_OPT( QOR_PP_BUILD_CMP_SUPRESS_LOGO_OPT ) \
														QOR_PP_BUILD_CMP_MAKE_OPT( QOR_PP_BUILD_CMP_WARNING_LEVEL_OPT ) \
														QOR_PP_BUILD_CMP_MAKE_OPT( QOR_PP_BUILD_CMP_WARNINS_AS_ERRORS_OPT ) \
														QOR_PP_BUILD_CMP_MAKE_OPT( QOR_PP_BUILD_CMP_MULTIPROCESSOR_OPT )

//Optimization
#define QOR_PP_BUILD_CMP_OPTIMIZATION_OPTS				( 4, ( Od, O1, O2, Ox ) )
#define QOR_PP_BUILD_CMP_OPTIMIZATION_SELECT_DEFAULT	0
#ifndef QOR_PP_BUILD_CMP_OPTIMIZATION_SELECT
#	define QOR_PP_BUILD_CMP_OPTIMIZATION_SELECT			QOR_PP_BUILD_CMP_OPTIMIZATION_SELECT_DEFAULT
#endif
#define QOR_PP_BUILD_CMP_OPTIMIZATION_OPT				QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_CMP_OPTIMIZATION_SELECT, QOR_PP_BUILD_CMP_OPTIMIZATION_OPTS )

//	inlines
#define QOR_PP_BUILD_CMP_INLINE_EXPANSION_OPTS			( 4, ( QOR_PP_EMPTY(), Ob0, Ob1, Ob2 ) )
#define QOR_PP_BUILD_CMP_INLINE_EXPANSION_SELECT_DEF	3
#ifndef QOR_PP_BUILD_CMP_INLINE_EXPANSION_SELECT
#	define QOR_PP_BUILD_CMP_INLINE_EXPANSION_SELECT		QOR_PP_BUILD_CMP_INLINE_EXPANSION_SELECT_DEF
#endif
#define QOR_PP_BUILD_CMP_INLINE_EXPANSION_OPT			QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_CMP_INLINE_EXPANSION_SELECT, QOR_PP_BUILD_CMP_INLINE_EXPANSION_OPTS )

//	intrinsics
#define QOR_PP_BUILD_CMP_INTRINSICS_OPTS				( 2, ( QOR_PP_EMPTY(), Oi ) )
#define QOR_PP_BUILD_CMP_INTRINSICS_SELECT_DEF			QOR_PP_IF( QOR_PP_EQUAL( QOR_PP_BUILD_CMP_INTRINSICS_ENABLE, __QCS_YES_ ), 1, 0 )
#ifndef QOR_PP_BUILD_CMP_INTRINSICS_SELECT
#	define QOR_PP_BUILD_CMP_INTRINSICS_SELECT			QOR_PP_BUILD_CMP_INTRINSICS_SELECT_DEF
#endif
#define QOR_PP_BUILD_CMP_INTRINSICS_OPT					QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_CMP_INTRINSICS_SELECT, QOR_PP_BUILD_CMP_INTRINSICS_OPTS )

//	frame pointer
#define QOR_PP_BUILD_CMP_OMIT_FRAME_POINTERS_OPTS		( 2, ( Oy-, Oy ) )
#define QOR_PP_BUILD_CMP_OMIT_FRAME_POINTERS_SELECT_DEF	0
#ifndef QOR_PP_BUILD_CMP_OMIT_FRAME_POINTERS_SELECT
#	define QOR_PP_BUILD_CMP_OMIT_FRAME_POINTERS_SELECT	QOR_PP_BUILD_CMP_OMIT_FRAME_POINTERS_SELECT_DEF
#endif
#define QOR_PP_BUILD_CMP_OMIT_FRAME_POINTERS_OPT		QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_CMP_OMIT_FRAME_POINTERS_SELECT, QOR_PP_BUILD_CMP_OMIT_FRAME_POINTERS_OPTS )

#define QOR_PP_BUILD_CMP_SWITCHES_OPTIMIZATION			QOR_PP_BUILD_CMP_MAKE_OPT( QOR_PP_BUILD_CMP_OPTIMIZATION_OPT ) \
														QOR_PP_BUILD_CMP_MAKE_OPT( QOR_PP_BUILD_CMP_INLINE_EXPANSION_OPT ) \
														QOR_PP_BUILD_CMP_MAKE_OPT( QOR_PP_BUILD_CMP_INTRINSICS_OPT ) \
														QOR_PP_BUILD_CMP_MAKE_OPT( QOR_PP_BUILD_CMP_OMIT_FRAME_POINTERS_OPT )


//Preprocessor

//	options
#define	QOR_PP_BUILD_CMP_IGNORE_STANDARD_INC_OPTS		( 2, ( QOR_PP_EMPTY(), X ) )
#define QOR_PP_BUILD_CMP_IGNORE_STANDARD_INC_SELECT_DEF	1
#ifndef QOR_PP_BUILD_CMP_IGNORE_STANDARD_INC_SELECT
#	define QOR_PP_BUILD_CMP_IGNORE_STANDARD_INC_SELECT	QOR_PP_BUILD_CMP_IGNORE_STANDARD_INC_SELECT_DEF
#endif
#define	QOR_PP_BUILD_CMP_IGNORE_STANDARD_INC_OPT		QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_CMP_IGNORE_STANDARD_INC_SELECT, QOR_PP_BUILD_CMP_IGNORE_STANDARD_INC_OPTS )

#define QOR_PP_BUILD_CMP_SWITCHES_PREPROCESSOR			QOR_PP_BUILD_CMP_MAKE_OPT( QOR_PP_BUILD_CMP_IGNORE_STANDARD_INC_OPT )


//Code generation

//	minimal rebuild
#define QOR_PP_BUILD_CMP_MINIMAL_REBUILD_OPTS			( 2, ( Gm-, Gm ) )
#define QOR_PP_BUILD_CMP_MINIMAL_REBUILD_SELECT_DEF		0
#ifndef QOR_PP_BUILD_CMP_MINIMAL_REBUILD_SELECT
#	define QOR_PP_BUILD_CMP_MINIMAL_REBUILD_SELECT		QOR_PP_BUILD_CMP_MINIMAL_REBUILD_SELECT_DEF
#endif
#define QOR_PP_BUILD_CMP_MINIMAL_REBUILD_OPT			QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_CMP_MINIMAL_REBUILD_SELECT, QOR_PP_BUILD_CMP_MINIMAL_REBUILD_OPTS )

//	exceptions
#define QOR_PP_BUILD_CMP_CPP_EXCPETIONS_OPTS			( 4, ( QOR_PP_EMPTY(), EHa, EHsc, EHs ) )
#define QOR_PP_BUILD_CMP_CPP_EXCEPTIONS_SELECT_DEF		QOR_PP_IF( QOR_PP_EQUAL(__QOR_CPP_EXCEPTIONS,__QCS_YES_), 2, 0 )
#ifndef QOR_PP_BUILD_CMP_CPP_EXCEPTIONS_SELECT
#	define QOR_PP_BUILD_CMP_CPP_EXCEPTIONS_SELECT		QOR_PP_BUILD_CMP_CPP_EXCEPTIONS_SELECT_DEF
#endif
#define QOR_PP_BUILD_CMP_CPP_EXCEPTIONS_OPT				QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_CMP_CPP_EXCEPTIONS_SELECT, QOR_PP_BUILD_CMP_CPP_EXCPETIONS_OPTS )

//	Runtime Checks
#define QOR_PP_BUILD_CMP_RUNTIME_CHECKS_OPTS			( 3, ( RTCs, RTCu, RTCsu ) )
#define QOR_PP_BUILD_CMP_RUNTIME_CHECKS_SELECT_DEF		2
#ifndef QOR_PP_BUILD_CMP_RUNTIME_CHECKS_SELECT
#	define QOR_PP_BUILD_CMP_RUNTIME_CHECKS_SELECT		QOR_PP_BUILD_CMP_RUNTIME_CHECKS_SELECT_DEF
#endif
#define QOR_PP_BUILD_CMP_RUNTIME_CHECKS_OPT				QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_CMP_RUNTIME_CHECKS_SELECT, QOR_PP_BUILD_CMP_RUNTIME_CHECKS_OPTS )

//	runtime library
#define QOR_PP_BUILD_CMP_RUNTIME_LIBRARY_SELECT_DEF		1
#ifndef QOR_PP_BUILD_CMP_RUNTIME_LIBRARY_SELECT
#	define QOR_PP_BUILD_CMP_RUNTIME_LIBRARY_SELECT		QOR_PP_BUILD_CMP_RUNTIME_LIBRARY_SELECT_DEF
#endif
#define QOR_PP_BUILD_CMP_RUNTIME_LIBRARY_OPT			QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_CMP_RUNTIME_LIBRARY_SELECT, QOR_PP_BUILD_CMP_RUNTIME_LIBRARY_OPTS )

//	Security
#define QOR_PP_BUILD_CMP_BUFFER_SECURITY_OPTS			( 2, ( GS-, GS ) )				 //dependent on Config safety level and OS
#define QOR_PP_BUILD_CMP_BUFFER_SECURITY_SELECT_DEF		0
#ifndef QOR_PP_BUILD_CMP_BUFFER_SECURITY_SELECT
#	define QOR_PP_BUILD_CMP_BUFFER_SECURITY_SELECT		QOR_PP_BUILD_CMP_BUFFER_SECURITY_SELECT_DEF
#endif
#define QOR_PP_BUILD_CMP_BUFFER_SECURITY				QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_CMP_BUFFER_SECURITY_SELECT, QOR_PP_BUILD_CMP_BUFFER_SECURITY_OPTS )

//	Floating point model
#define QOR_PP_BUILD_CMP_FLOATING_POINT_MODEL_OPTS		( 3, ( fp:precise, fp:strict, fp:fast ) )
#define QOR_PP_BUILD_CMP_FLOATING_POINT_SELECT_DEF 1
#ifndef QOR_PP_BUILD_CMP_FLOATING_POINT_SELECT
#	define QOR_PP_BUILD_CMP_FLOATING_POINT_SELECT		QOR_PP_BUILD_CMP_FLOATING_POINT_SELECT_DEF
#endif
#define QOR_PP_BUILD_CMP_FLOATING_POINT_MODEL_OPT		QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_CMP_FLOATING_POINT_SELECT, QOR_PP_BUILD_CMP_FLOATING_POINT_MODEL_OPTS )

#define QOR_PP_BUILD_CMP_SWITCHES_CODE_GENERATION		QOR_PP_BUILD_CMP_MAKE_OPT( QOR_PP_BUILD_CMP_MINIMAL_REBUILD_OPT ) \
														QOR_PP_BUILD_CMP_MAKE_OPT( QOR_PP_BUILD_CMP_CPP_EXCEPTIONS_OPT ) \
														QOR_PP_BUILD_CMP_MAKE_OPT( QOR_PP_BUILD_CMP_RUNTIME_CHECKS_OPT ) \
														QOR_PP_BUILD_CMP_MAKE_OPT( QOR_PP_BUILD_CMP_RUNTIME_LIBRARY_OPT ) \
														QOR_PP_BUILD_CMP_MAKE_OPT( QOR_PP_BUILD_CMP_BUFFER_SECURITY ) \
														QOR_PP_BUILD_CMP_MAKE_OPT( QOR_PP_BUILD_CMP_FLOATING_POINT_MODEL_OPT )

//Language

//	wchar_t
#define QOR_PP_BUILD_CMP_WCHART_BUILTIN_OPTS			( 2, ( Zc:wchar_t, Zc:wchar_t- ) )
#define QOR_PP_BUILD_CMP_WCHART_BUILTIN_SELECT_DEF		0
#ifndef QOR_PP_BUILD_CMP_WCHART_BUILTIN_SELECT
#	define QOR_PP_BUILD_CMP_WCHART_BUILTIN_SELECT		QOR_PP_BUILD_CMP_WCHART_BUILTIN_SELECT_DEF
#endif
#define QOR_PP_BUILD_CMP_WCHART_BUILTIN_OPT				QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_CMP_WCHART_BUILTIN_SELECT, QOR_PP_BUILD_CMP_WCHART_BUILTIN_OPTS )

//	for scope
#define QOR_PP_BUILD_CMP_FORSCOPE_OPTS					( 2, ( Zc:forScope, Zc:forScope- ) )
#define QOR_PP_BUILD_CMP_FORESCOPE_SELECT_DEF			0
#ifndef QOR_PP_BUILD_CMP_FORESCOPE_SELECT
#	define QOR_PP_BUILD_CMP_FORESCOPE_SELECT			QOR_PP_BUILD_CMP_FORESCOPE_SELECT_DEF
#endif
#define QOR_PP_BUILD_CMP_FORSCOPE_OPT					QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_CMP_FORESCOPE_SELECT, QOR_PP_BUILD_CMP_FORSCOPE_OPTS )

//	RTTI
#define QOR_PP_BUILD_CMP_ENABLE_RTTI_OPTS				( 2, ( GR, GR- ) )
#define QOR_PP_BUILD_CMP_ENABLE_RTTI_SELECT_DEF			0
#ifndef QOR_PP_BUILD_CMP_ENABLE_RTTI_SELECT
#	define QOR_PP_BUILD_CMP_ENABLE_RTTI_SELECT			QOR_PP_BUILD_CMP_ENABLE_RTTI_SELECT_DEF
#endif
#define QOR_PP_BUILD_CMP_ENABLE_RTTI_OPT				QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_CMP_ENABLE_RTTI_SELECT, QOR_PP_BUILD_CMP_ENABLE_RTTI_OPTS )

#define QOR_PP_BUILD_CMP_SWITCHES_LANGUAGE				QOR_PP_BUILD_CMP_MAKE_OPT( QOR_PP_BUILD_CMP_WCHART_BUILTIN_OPT ) \
														QOR_PP_BUILD_CMP_MAKE_OPT( QOR_PP_BUILD_CMP_FORSCOPE_OPT ) \
														QOR_PP_BUILD_CMP_MAKE_OPT( QOR_PP_BUILD_CMP_ENABLE_RTTI_OPT )

//Precompiled header
#define QOR_PP_BUILD_CMP_PRECOMPILED_HEADER_OPT			Fp

//Output files
#define QOR_PP_BUILD_CMP_ASM_LIST_LOCATION_OPT			Fa
#define QOR_PP_BUILD_CMP_OBJECT_FILE_LOCATION_OPT		Fo
#define QOR_PP_BUILD_CMP_PROGRAM_DATABASE_FILE_OPT		Fd

#define QOR_PP_BUILD_CMP_SWITCHES_OUTPUT				QOR_PP_CAT( QOR_PP_BUILD_CMP_MAKE_OPT( QOR_PP_BUILD_CMP_ASM_LIST_LOCATION_OPT ), QOR_PP_EXPAND( QOR_PP_STRINGIZE( QOR_PP_CONFIG_INT_DIR ) ) ) \
														QOR_PP_CAT( QOR_PP_BUILD_CMP_MAKE_OPT( QOR_PP_BUILD_CMP_OBJECT_FILE_LOCATION_OPT ), QOR_PP_EXPAND( QOR_PP_STRINGIZE( QOR_PP_CONFIG_INT_DIR ) ) ) \
														QOR_PP_CAT( QOR_PP_BUILD_CMP_MAKE_OPT( QOR_PP_BUILD_CMP_PROGRAM_DATABASE_FILE_OPT ), QOR_PP_EXPAND( QOR_PP_STRINGIZE( QOR_PP_CAT( QOR_PP_CONFIG_INT_DIR, vc100.pdb ) ) ) )
//Advanced
//	calling conventions
#define QOR_PP_BUILD_CMP_CALLING_CONVENTION_OPTS		( 3, ( Gd, Gr, Gz ) )
#define QOR_PP_BUILD_CMP_CALLING_CONVENTION_SELECT		0
#define QOR_PP_BUILD_CMP_CALLING_CONVENTION_OPT			QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_CMP_CALLING_CONVENTION_SELECT, QOR_PP_BUILD_CMP_CALLING_CONVENTION_OPTS )
#define QOR_PP_BUILD_CMP_ANALYSE_OPT					QOR_PP_EMPTY()
#define QOR_PP_BUILD_CMP_INTERNAL_ERROR_REPORTING_OPT	errorReport:queue

#define QOR_PP_BUILD_CMP_SWITCHES_ADVANCED				QOR_PP_BUILD_CMP_MAKE_OPT( QOR_PP_BUILD_CMP_CALLING_CONVENTION_OPT ) \
														QOR_PP_BUILD_CMP_MAKE_OPT( QOR_PP_BUILD_CMP_ANALYSE_OPT ) \
														QOR_PP_BUILD_CMP_MAKE_OPT( QOR_PP_BUILD_CMP_INTERNAL_ERROR_REPORTING_OPT )

#define QOR_PP_BUILD_CMP_MAKE_OPT( _X )					QOR_PP_IF( QOR_PP_IS_EMPTY( QOR_PP_EXPAND( _X ) ), QOR_PP_EMPTY(), QOR_PP_CAT(QOR_PP_BUILD_CMP_OPT_SWTICH_PRE, _X) )

#define QOR_PP_BUILD_CMP_INCLUDES						QOR_PP_SEQ_FOR_EACH_I( QOR_PP_BUILD_CMP_MAKE_INCLUDE, QOR_PP_BUILD_CMP_INCLUDE_PATH_OPT, QOR_CONFIG_INCLUDES )
#define QOR_PP_BUILD_CMP_MAKE_INCLUDE( r, _SWITCH, _IGNORE, _ITEM )	QOR_PP_BUILD_CMP_MAKE_OPT(_SWITCH) QOR_PP_STRINGIZE( _ITEM )

#ifndef NDEBUG
#	define QOR_CONFIG_DEFINES_COMPILER					QOR_PP_LIST_APPEND( QOR_CONFIG_DEFINES_MODULE, ("_DEBUG") )
#else
#	define QOR_CONFIG_DEFINES_COMPILER					QOR_CONFIG_DEFINES_MODULE
#endif

#define QOR_PP_BUILD_CMP_DEFINES						QOR_PP_LIST_FOR_EACH( QOR_PP_BUILD_CMP_MAKE_DEFINE, QOR_PP_BUILD_CMP_DEFINE_OPT, QOR_CONFIG_DEFINES_COMPILER )
#define QOR_PP_BUILD_CMP_MAKE_DEFINE( r, _SWITCH, _ITEM ) QOR_PP_CAT( QOR_PP_BUILD_CMP_MAKE_OPT(_SWITCH),_ITEM )

#define QOR_PP_BUILD_CMP_SWITCHES_ALL					QOR_PP_BUILD_CMP_SWITCHES_GENERAL \
														QOR_PP_BUILD_CMP_SWITCHES_OPTIMIZATION \
														QOR_PP_BUILD_CMP_SWITCHES_PREPROCESSOR \
														QOR_PP_BUILD_CMP_DEFINES \
														QOR_PP_BUILD_CMP_SWITCHES_CODE_GENERATION \
														QOR_PP_BUILD_CMP_SWITCHES_LANGUAGE \
														QOR_PP_BUILD_CMP_SWITCHES_OUTPUT \
														QOR_PP_BUILD_CMP_SWITCHES_ADVANCED

#define QOR_PP_BUILD_CMP_OPTIONS						QOR_PP_BUILD_CMP_INCLUDES QOR_PP_BUILD_CMP_SWITCHES_ALL 

#define QOR_PP_BUILD_CMP_COMMAND_LINE(_PATH,_EXTENSION,_X) \
														QOR_PP_BUILD_COMPILER_EXECUTABLE QOR_PP_BUILD_CMP_MAKE_OPT( c ) QOR_PP_BUILD_CMP_OPTIONS QOR_PP_CAT(_PATH,QOR_PP_CAT(_X,_EXTENSION))


/*
Debug\qs1.dll.embed.manifest.res*/

#define QOR_PP_BUILD_LINK_OPT_SWITCH_PRE				/

//Named switches
//	error report
#define QOR_PP_BUILD_LINK_ERROR_REPORT_OPTS				( 4, ( none , prompt , queue , send ) )
#define QOR_PP_BUILD_LINK_ERROR_REPORT_SELECT_DEF		1
#ifndef QOR_PP_BUILD_LINK_ERROR_REPORT_SELECT
#	define QOR_PP_BUILD_LINK_ERROR_REPORT_SELECT		QOR_PP_BUILD_LINK_ERROR_REPORT_SELECT_DEF
#endif
#define QOR_PP_BUILD_LINK_ERROR_REPORT_OPT				QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_LINK_ERROR_REPORT_SELECT, QOR_PP_BUILD_LINK_ERROR_REPORT_OPTS )

//	subsystem
#define QOR_PP_BUILD_LINK_SUBSYSTEM_OPTS				( 10, ( BOOT_APPLICATION, CONSOLE, EFI_APPLICATION, EFI_BOOT_SERVICE_DRIVER, EFI_ROM, EFI_RUNTIME_DRIVER, NATIVE, POSIX, WINDOWS, WINDOWSCE ) )
#define QOR_PP_BUILD_LINK_SUBSYSTEM_SELECT_DEF			1
#ifndef QOR_PP_BUILD_LINK_SUBSYSTEM_SELECT
#	define QOR_PP_BUILD_LINK_SUBSYSTEM_SELECT			QOR_PP_BUILD_LINK_SUBSYSTEM_SELECT_DEF
#endif
#define QOR_PP_BUILD_LINK_SUBSYSTEM_OPT					QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_LINK_SUBSYSTEM_SELECT, QOR_PP_BUILD_LINK_SUBSYSTEM_OPTS )

//	machine
#define QOR_PP_BUILD_LINK_MACHINE_OPTS					( 11, ( X86, X64, THUMB, SH4, MIPS, MIPS16, MIPSFPU, MIPS16FPU, IA64, EBC, ARM ) )
#define QOR_PP_BUILD_LINK_MACHINE_SELECT_DEF			0
#ifndef QOR_PP_BUILD_LINK_MACHINE_SELECT
#	define QOR_PP_BUILD_LINK_MACHINE_SELECT				QOR_PP_BUILD_LINK_MACHINE_SELECT_DEF
#endif
#define QOR_PP_BUILD_LINK_MACHINE_OPT					QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_LINK_MACHINE_SELECT, QOR_PP_BUILD_LINK_MACHINE_OPTS )

//	tlid
#define QOR_PP_BUILD_LINK_TLID_OPTS						( 1, ( 1 ) )
#define QOR_PP_BUILD_LINK_TLID_SELECT_DEF				0
#ifndef QOR_PP_BUILD_LINK_TLID_SELECT
#	define QOR_PP_BUILD_LINK_TLID_SELECT				QOR_PP_BUILD_LINK_TLID_SELECT_DEF
#endif
#define QOR_PP_BUILD_LINK_TLID_OPT						QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_LINK_TLID_SELECT, QOR_PP_BUILD_LINK_TLID_OPTS )

#define QOR_PP_BUILD_LINK_MAKE_NAMED_OPT( _X, _NAME )	QOR_PP_IF( QOR_PP_IS_EMPTY( QOR_PP_EXPAND( _NAME ) ), QOR_PP_EMPTY(), QOR_PP_CAT( QOR_PP_CAT(QOR_PP_BUILD_LINK_OPT_SWITCH_PRE, _X), QOR_PP_CAT(:,_NAME) ) )
#define QOR_PP_BUILD_LINK_MAKE_SIMPLE_OPT( _X )			QOR_PP_IF( QOR_PP_IS_EMPTY( _X ), QOR_PP_EMPTY(), QOR_PP_CAT( QOR_PP_BUILD_LINK_OPT_SWITCH_PRE, _X ) )

#define QOR_PP_BUILD_LINK_MAKE_IMPLIB_NAME( _MODULENAME ) \
														QOR_PP_STRINGIZE( QOR_PP_CAT( QOR_PP_CAT( QOR_PP_CAT( QOR_PP_BUILD_DIR, QOR_PP_CONFIG_INT_DIR ), _MODULENAME ), .lib ) )

#define QOR_PP_BUILD_LINK_MAKE_PDB_NAME( _MODULENAME ) \
														QOR_PP_STRINGIZE( QOR_PP_CAT( QOR_PP_CAT( QOR_PP_CAT( QOR_PP_BUILD_DIR, QOR_PP_CONFIG_INT_DIR ), _MODULENAME ), .pdb ) )

#define QOR_PP_BUILD_LINK_SWITCHES_NAMED(_MODULENAME)	QOR_PP_BUILD_LINK_MAKE_NAMED_OPT( ErrorReport, QOR_PP_BUILD_LINK_ERROR_REPORT_OPT ) \
														QOR_PP_BUILD_LINK_MAKE_NAMED_OPT( SubSystem, QOR_PP_BUILD_LINK_SUBSYSTEM_OPT ) \
														QOR_PP_BUILD_LINK_MAKE_NAMED_OPT( Machine, QOR_PP_BUILD_LINK_MACHINE_OPT ) \
														QOR_PP_BUILD_LINK_MAKE_NAMED_OPT( TLBID, QOR_PP_BUILD_LINK_TLID_OPT ) \
														QOR_PP_BUILD_LINK_MAKE_NAMED_OPT( IMPLIB, QOR_PP_BUILD_LINK_MAKE_IMPLIB_NAME(_MODULENAME) ) \
														QOR_PP_BUILD_LINK_MAKE_NAMED_OPT( PDB, QOR_PP_BUILD_LINK_MAKE_PDB_NAME(_MODULENAME) )


#define QOR_PP_BUILD_LINK_MAKE_DLL_NAME( _MODULENAME ) \
														QOR_PP_STRINGIZE( QOR_PP_CAT( QOR_PP_CAT( QOR_PP_CAT( QOR_PP_BUILD_DIR, QOR_PP_CONFIG_INT_DIR ), _MODULENAME ), .dll ) )
//Output
#define QOR_PP_BUILD_LINK_SWITCHES_OUTPUT(_MODULENAME)	QOR_PP_BUILD_LINK_MAKE_NAMED_OPT( OUT, QOR_PP_BUILD_LINK_MAKE_DLL_NAME(_MODULENAME) )

//Simple
//	incremental
#define QOR_PP_BUILD_LINK_INCREMENTAL_OPTS				( 2, ( QOR_PP_EMPTY(), INCREMENTAL ) )
#define QOR_PP_BUILD_LINK_INCREMENTAL_SELECT_DEF		1
#ifndef QOR_PP_BUILD_LINK_INCREMENTAL_SELECT
#	define QOR_PP_BUILD_LINK_INCREMENTAL_SELECT			QOR_PP_BUILD_LINK_INCREMENTAL_SELECT_DEF
#endif
#define QOR_PP_BUILD_LINK_INCREMENTAL_OPT				QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_LINK_INCREMENTAL_SELECT, QOR_PP_BUILD_LINK_INCREMENTAL_OPTS )

//	nologo
#define QOR_PP_BUILD_LINK_NOLOGO_OPTS					( 2, ( QOR_PP_EMPTY(), NOLOGO ) )
#define QOR_PP_BUILD_LINK_NOLOGO_SELECT_DEF				1
#ifndef QOR_PP_BUILD_LINK_NOLOGO_SELECT
#	define QOR_PP_BUILD_LINK_NOLOGO_SELECT				QOR_PP_BUILD_LINK_NOLOGO_SELECT_DEF
#endif
#define QOR_PP_BUILD_LINK_NOLOGO_OPT					QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_LINK_NOLOGO_SELECT, QOR_PP_BUILD_LINK_NOLOGO_OPTS )

//	nodefaultlib
#define QOR_PP_BUILD_LINK_NODEAFULTLIB_OPTS				( 2, ( QOR_PP_EMPTY(), NODEFAULTLIB ) )
#define QOR_PP_BUILD_LINK_NODEFAULTLIB_SELECT_DEF		1
#ifndef QOR_PP_BUILD_LINK_NODEFAULTLIB_SELECT
#	define QOR_PP_BUILD_LINK_NODEFAULTLIB_SELECT		QOR_PP_BUILD_LINK_NODEFAULTLIB_SELECT_DEF
#endif
#define QOR_PP_BUILD_LINK_NODEFAULTLIB_OPT				QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_LINK_NODEFAULTLIB_SELECT, QOR_PP_BUILD_LINK_NODEFAULTLIB_OPTS )

//	debug
#define QOR_PP_BUILD_LINK_DEBUG_OPTS					( 2, ( QOR_PP_EMPTY(), DEBUG ) )
#define QOR_PP_BUILD_LINK_DEBUG_SELECT_DEF				1
#ifndef QOR_PP_BUILD_LINK_DEBUG_SELECT
#	define QOR_PP_BUILD_LINK_DEBUG_SELECT				QOR_PP_BUILD_LINK_DEBUG_SELECT_DEF
#endif
#define QOR_PP_BUILD_LINK_DEBUG_OPT						QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_LINK_DEBUG_SELECT, QOR_PP_BUILD_LINK_DEBUG_OPTS )

//	dynamicbase
#define QOR_PP_BUILD_LINK_DYNAMICBASE_OPTS				( 2, ( QOR_PP_EMPTY(), DYNAMICBASE ) )
#define QOR_PP_BUILD_LINK_DYNAMICBASE_SELECT_DEF		1
#ifndef QOR_PP_BUILD_LINK_DYNAMICBASE_SELECT
#	define QOR_PP_BUILD_LINK_DYNAMICBASE_SELECT			QOR_PP_BUILD_LINK_DYNAMICBASE_SELECT_DEF
#endif
#define QOR_PP_BUILD_LINK_DYNAMICBASE_OPT				QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_LINK_DYNAMICBASE_SELECT, QOR_PP_BUILD_LINK_DYNAMICBASE_OPTS )

//	nxcompat
#define QOR_PP_BUILD_LINK_NXCOMPAT_OPTS					( 2, ( QOR_PP_EMPTY(), NXCOMPAT ) )
#define QOR_PP_BUILD_LINK_NXCOMPAT_SELECT_DEF			1
#ifndef QOR_PP_BUILD_LINK_NXCOMPAT_SELECT
#	define QOR_PP_BUILD_LINK_NXCOMPAT_SELECT			QOR_PP_BUILD_LINK_NXCOMPAT_SELECT_DEF
#endif
#define QOR_PP_BUILD_LINK_NXCOMPAT_OPT					QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_LINK_NXCOMPAT_SELECT, QOR_PP_BUILD_LINK_NXCOMPAT_OPTS )

//	dll
#define QOR_PP_BUILD_LINK_DLL_OPTS						( 2, ( QOR_PP_EMPTY(), DLL ) )
#define QOR_PP_BUILD_LINK_DLL_SELECT_DEF				1
#ifndef QOR_PP_BUILD_LINK_DLL_SELECT
#	define QOR_PP_BUILD_LINK_DLL_SELECT					QOR_PP_BUILD_LINK_DLL_SELECT_DEF
#endif
#define QOR_PP_BUILD_LINK_DLL_OPT						QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_LINK_DLL_SELECT, QOR_PP_BUILD_LINK_DLL_OPTS )


#define QOR_PP_BUILD_LINK_SWITCHES_SIMPLE				QOR_PP_BUILD_LINK_MAKE_SIMPLE_OPT( QOR_PP_BUILD_LINK_INCREMENTAL_OPT ) \
														QOR_PP_BUILD_LINK_MAKE_SIMPLE_OPT( QOR_PP_BUILD_LINK_NOLOGO_OPT ) \
														QOR_PP_BUILD_LINK_MAKE_SIMPLE_OPT( QOR_PP_BUILD_LINK_NODEFAULTLIB_OPT ) \
														QOR_PP_BUILD_LINK_MAKE_SIMPLE_OPT( QOR_PP_BUILD_LINK_DEBUG_OPT ) \
														QOR_PP_BUILD_LINK_MAKE_SIMPLE_OPT( QOR_PP_BUILD_LINK_DYNAMICBASE_OPT ) \
														QOR_PP_BUILD_LINK_MAKE_SIMPLE_OPT( QOR_PP_BUILD_LINK_NXCOMPAT_OPT ) \
														QOR_PP_BUILD_LINK_MAKE_SIMPLE_OPT( QOR_PP_BUILD_LINK_DLL_OPT )

//Manifest
//	manifest
#define QOR_PP_BUILD_LINK_MANIFEST_OPTS					( 2, ( QOR_PP_EMPTY(), MANIFEST ) )
#define QOR_PP_BUILD_LINK_MANIFEST_SELECT_DEF			1
#ifndef QOR_PP_BUILD_LINK_MANIFEST_SELECT
#	define QOR_PP_BUILD_LINK_MANIFEST_SELECT			QOR_PP_BUILD_LINK_MANIFEST_SELECT_DEF
#endif
#define QOR_PP_BUILD_LINK_MANIFEST_OPT					QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_LINK_MANIFEST_SELECT, QOR_PP_BUILD_LINK_MANIFEST_OPTS )

#define QOR_PP_BUILD_LINK_MANIFEST_INTERMEDIATE( _MODULE_NAME )	\
														QOR_PP_STRINGIZE( QOR_PP_CAT( QOR_PP_CAT( QOR_PP_CONFIG_INT_DIR,_MODULE_NAME ), .dll.intermediate.manifest ) )

#define QOR_PP_BUILD_LINK_SWITCHES_MANIFEST(_MODULE_NAME) \
														QOR_PP_BUILD_LINK_MAKE_SIMPLE_OPT( QOR_PP_BUILD_LINK_MANIFEST_OPT ) \
														QOR_PP_BUILD_LINK_MAKE_NAMED_OPT( ManifestFile, QOR_PP_BUILD_LINK_MANIFEST_INTERMEDIATE( _MODULE_NAME ) ) \
														QOR_PP_BUILD_LINK_MAKE_NAMED_OPT( MANIFESTUAC, "level='asInvoker' uiAccess='false'" ) /*\
														QOR_PP_CAT( QOR_PP_CAT( QOR_PP_CAT( QOR_PP_CONFIG_INT_DIR, QOR_MODULE_NAME ), .dll ), .embed.manifest.res )*/

#define QOR_PP_BUILD_LINK_SWITCHES_ALL(_LIBPATHS_SEQUENCE, _LIBS_SEQUENCE, _MODULE_NAME) \
														QOR_PP_BUILD_LINK_SWITCHES_NAMED(_MODULE_NAME) \
														QOR_PP_BUILD_LINK_SWITCHES_OUTPUT(_MODULE_NAME) \
														QOR_PP_BUILD_LINK_SWITCHES_SIMPLE \
														QOR_PP_SEQ_FOR_EACH_I( QOR_PP_BUILD_LINK_MAKE_LIBPATH, _, _LIBPATHS_SEQUENCE ) \
														QOR_PP_SEQ_FOR_EACH_I( QOR_PP_BUILD_LINK_MAKE_LIB, _, _LIBS_SEQUENCE ) \
														QOR_PP_BUILD_LINK_SWITCHES_MANIFEST(_MODULE_NAME)
 
#define QOR_PP_BUILD_LINK_OPTIONS(_LIBPATHS_SEQUENCE, _LIBS_SEQUENCE, _MODULE_NAME) \
														QOR_PP_BUILD_LINK_SWITCHES_ALL(_LIBPATHS_SEQUENCE, _LIBS_SEQUENCE, _MODULE_NAME)

#define QOR_PP_BUILD_LINK_MAKE_OBJ( r, _EXT, _IGNORE, _OBJ ) QOR_PP_CAT( _OBJ,_EXT )
#define QOR_PP_BUILD_LINK_MAKE_LIBPATH( r, _IG1, _IG2, _PATH ) QOR_PP_BUILD_LINK_MAKE_NAMED_OPT( LibPath, QOR_PP_STRINGIZE( _PATH ) )
#define QOR_PP_BUILD_LINK_MAKE_LIB( r, _IG1, _IG2, _NAME ) QOR_PP_STRINGIZE( QOR_PP_CAT( _NAME,.lib ) )

#define QOR_PP_BUILD_LINK_COMMAND_LINE(_LIBPATHS_SEQUENCE, _LIBS_SEQUENCE, _OBJS_SEQUENCE, _MODULE_NAME) \
														QOR_PP_BUILD_LINKER_EXECUTABLE QOR_PP_BUILD_LINK_OPTIONS(_LIBPATHS_SEQUENCE, _LIBS_SEQUENCE, _MODULE_NAME) \
														QOR_PP_SEQ_FOR_EACH_I( QOR_PP_BUILD_LINK_MAKE_OBJ, .o, _OBJS_SEQUENCE )

#define QOR_PP_BUILD_LINK_COMMAND_LINE2(_LIBPATHS_SEQUENCE, _LIBS_SEQUENCE, _MODULE_NAME) \
														QOR_PP_BUILD_LINKER_EXECUTABLE QOR_PP_BUILD_LINK_OPTIONS(_LIBPATHS_SEQUENCE, _LIBS_SEQUENCE, _MODULE_NAME) \
														QOR_PP_CAT( @,QOR_PP_BUILD_LINK_OBJLISTNAME( _MODULE_NAME ) )

#define QOR_PP_BUILD_LINK_OBJLISTNAME( _MODULE_NAME )	QOR_PP_CAT( QOR_PP_CAT( QOR_PP_CONFIG_INT_DIR, _MODULE_NAME ), objlist.txt )

#define QOR_PP_BUILD_LINK_PREPARE_OBJLIST( _MODULE_NAME ) \
														echo ??/n > QOR_PP_BUILD_LINK_OBJLISTNAME( _MODULE_NAME )

#define QOR_PP_BUILD_LINK_EXPORT_OBJNAME( r, _MODULE_NAME, _, _X ) \
														echo QOR_PP_CAT( _X,.obj ) >> QOR_PP_BUILD_LINK_OBJLISTNAME( _MODULE_NAME )



//Simple switches
//	nodefaultlib
#define QOR_PP_BUILD_LIB_NODEFAULTLIB_OPTS				( 2, ( QOR_PP_EMPTY(), NODEFAULTLIB ) )
#define QOR_PP_BUILD_LIB_NODEFAULTLIB_SELECT_DEF		1
#ifndef QOR_PPBUILD_LIB_NODEFAULTLIB_SELECT
#	define QOR_PP_BUILD_LIB_NODEFAULTLIB_SELECT			QOR_PP_BUILD_LIB_NODEFAULTLIB_SELECT_DEF
#endif
#define QOR_PP_BUILD_LIB_NODEFAULTLIB_OPT				QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_LIB_NODEFAULTLIB_SELECT, QOR_PP_BUILD_LIB_NODEFAULTLIB_OPTS )

//	nologo
#define QOR_PP_BUILD_LIB_NOLOGO_OPTS					( 2, ( QOR_PP_EMPTY(), NOLOGO ) )
#define QOR_PP_BUILD_LIB_NOLOGO_SELECT_DEF				1
#ifndef QOR_PP_BUILD_LIB_NOLOGO_SELECT
#	define QOR_PP_BUILD_LIB_NOLOGO_SELECT				QOR_PP_BUILD_LIB_NOLOGO_SELECT_DEF
#endif
#define QOR_PP_BUILD_LIB_NOLOGO_OPT						QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_LIB_NOLOGO_SELECT, QOR_PP_BUILD_LIB_NOLOGO_OPTS )

//	verbose
#define QOR_PP_BUILD_LIB_VERBOSE_OPTS					( 2, ( QOR_PP_EMPTY(), VERBOSE ) )
#define QOR_PP_BUILD_LIB_VERBOSE_SELECT_DEF				0
#ifndef QOR_PP_BUILD_LIB_VERBOSE_SELECT
#	define QOR_PP_BUILD_LIB_VERBOSE_SELECT				QOR_PP_BUILD_LIB_VERBOSE_SELECT_DEF
#endif
#define QOR_PP_BUILD_LIB_VERBOSE_OPT					QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_LIB_VERBOSE_SELECT, QOR_PP_BUILD_LIB_VERBOSE_OPTS )

//	ltcg
#define QOR_PP_BUILD_LIB_LTCG_OPTS						( 2, ( QOR_PP_EMPTY(), LTCG ) )
#define QOR_PP_BUILD_LIB_LTCG_SELECT_DEF				0
#ifndef QOR_PP_BUILD_LIB_LTCG_SELECT
#	define QOR_PP_BUILD_LIB_LTCG_SELECT					QOR_PP_BUILD_LIB_LTCG_SELECT_DEF
#endif
#define QOR_PP_BUILD_LIB_LTCG_OPT						QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_LIB_LTCG_SELECT, QOR_PP_BUILD_LIB_LTCG_OPTS )


//Named switches
//	error report
#define QOR_PP_BUILD_LIB_ERROR_REPORT_OPTS				( 4, ( none , prompt , queue , send ) )
#define QOR_PP_BUILD_LIB_ERROR_REPORT_SELECT_DEF		1
#ifndef QOR_PP_BUILD_LIB_ERROR_REPORT_SELECT
#	define QOR_PP_BUILD_LIB_ERROR_REPORT_SELECT			QOR_PP_BUILD_LIB_ERROR_REPORT_SELECT_DEF
#endif
#define QOR_PP_BUILD_LIB_ERROR_REPORT_OPT				QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_LIB_ERROR_REPORT_SELECT, QOR_PP_BUILD_LIB_ERROR_REPORT_OPTS )

//	machine
#define QOR_PP_BUILD_LIB_MACHINE_OPTS					( 11, ( X86, X64, THUMB, SH4, MIPS, MIPS16, MIPSFPU, MIPSFPU16, IA64, EBC, ARM ) )
#define QOR_PP_BUILD_LIB_MACHINE_SELECT_DEF				0
#ifndef QOR_PP_BUILD_LIB_MACHINE_SELECT
#	define QOR_PP_BUILD_LIB_MACHINE_SELECT				QOR_PP_BUILD_LIB_MACHINE_SELECT_DEF
#endif
#define QOR_PP_BUILD_LIB_MACHINE_OPT					QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_LIB_MACHINE_SELECT, QOR_PP_BUILD_LIB_MACHINE_OPTS )

//	wx
#define QOR_PP_BUILD_LIB_WX_OPTS						( 2, ( QOR_PP_EMPTY(), :NO ) )
#define QOR_PP_BUILD_LIB_WX_SELECT_DEF					1
#ifndef QOR_PP_BUILD_LIB_WX_SELECT
#	define QOR_PP_BUILD_LIB_WX_SELECT					QOR_PP_BUILD_LIB_WX_SELECT_DEF
#endif
#define QOR_PP_BUILD_LIB_WX_OPT							QOR_PP_ARRAY_ELEM( QOR_PP_BUILD_LIB_WX_SELECT, QOR_PP_BUILD_LIB_WX_OPTS )


#define QOR_PP_BUILD_LIB_SWITCHES_SIMPLE				QOR_PP_BUILD_LINK_MAKE_SIMPLE_OPT( QOR_PP_BUILD_LIB_NODEFAULTLIB_OPT ) \
														QOR_PP_BUILD_LINK_MAKE_SIMPLE_OPT( QOR_PP_BUILD_LIB_NOLOGO_OPT ) \
														QOR_PP_BUILD_LINK_MAKE_SIMPLE_OPT( QOR_PP_BUILD_LIB_VERBOSE_OPT ) \
														QOR_PP_BUILD_LINK_MAKE_SIMPLE_OPT( QOR_PP_BUILD_LIB_LTCG_OPT )
														
														

#define QOR_PP_BUILD_LIB_SWITCHES_NAMED(_LIB_NAME)		QOR_PP_BUILD_LINK_MAKE_NAMED_OPT( ErrorReport, QOR_PP_BUILD_LIB_ERROR_REPORT_OPT ) \
														QOR_PP_BUILD_LINK_MAKE_NAMED_OPT( Machine, QOR_PP_BUILD_LIB_MACHINE_OPT ) \
														QOR_PP_BUILD_LINK_MAKE_NAMED_OPT( wx, QOR_PP_BUILD_LIB_WX_OPT ) \


#define QOR_PP_BUILD_LIB_SWITCHES_ALL( _LIBPATHS_SEQUENCE, _LIBS_SEQUENCE, _LIB_NAME ) \
														QOR_PP_BUILD_LIB_SWITCHES_SIMPLE \
														QOR_PP_BUILD_LIB_SWITCHES_NAMED( _LIB_NAME ) \
														QOR_PP_SEQ_FOR_EACH_I(QOR_PP_BUILD_LINK_MAKE_LIBPATH, _, _LIBPATHS_SEQUENCE) \
														QOR_PP_SEQ_FOR_EACH_I(QOR_PP_BUILD_LINK_MAKE_LIB, _, _LIBS_SEQUENCE)

#define QOR_PP_BUILD_LIB_OPTIONS( _LIBPATHS_SEQUENCE, _LIBS_SEQUENCE, _LIB_NAME ) \
														QOR_PP_BUILD_LIB_SWITCHES_ALL( _LIBPATHS_SEQUENCE, _LIBS_SEQUENCE, _LIB_NAME )

#define QOR_PP_BUILD_LIB_OBJLISTNAME( _LIB_NAME )		QOR_PP_CAT( QOR_PP_CAT( QOR_PP_CONFIG_INT_DIR, _LIB_NAME ), objlist.txt )

#define QOR_PP_BUILD_LIB_COMMAND_LINE( _LIBPATHS_SEQUENCE, _LIBS_SEQUENCE, _OBJS_SEQUENCE, _LIB_NAME ) \
														QOR_PP_BUILD_LIB_EXECUTABLE QOR_PP_BUILD_LIB_OPTIONS( _LIBPATHS_SEQUENCE, _LIBS_SEQUENCE, _LIB_NAME ) \
														QOR_PP_SEQ_FOR_EACH_I( QOR_PP_BUILD_LINK_MAKE_OBJ, .o, _OBJS_SEQUENCE )

#define QOR_PP_BUILD_LIB_COMMAND_LINE2( _LIBPATHS_SEQUENCE, _LIBS_SEQUENCE, _LIB_NAME ) \
														QOR_PP_BUILD_LIB_EXECUTABLE QOR_PP_BUILD_LIB_OPTIONS( _LIBPATHS_SEQUENCE, _LIBS_SEQUENCE, _LIB_NAME ) \
														QOR_PP_CAT(@,QOR_PP_BUILD_LIB_OBJLISTNAME(_LIB_NAME))

#define QOR_PP_BUILD_LIB_EXPORT_OBJNAME( r, _LIB_NAME, _, _X ) \
														echo QOR_PP_CAT( _X,.obj ) >> QOR_PP_BUILD_LIB_OBJLISTNAME( _LIB_NAME )

#define QOR_PP_BUILD_LIB_PREPARE_OBJLIST( _LIB_NAME )	echo ??/n > QOR_PP_BUILD_LIB_OBJLISTNAME( _LIB_NAME )


