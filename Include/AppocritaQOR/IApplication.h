//IApplication.h

// Copyright Querysoft Limited 2013, 2016
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Abstract interface for applications

#include "CompilerQOR.h"

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#ifndef APPOCRITAQOR_IAPPLICATION_H_3
#define APPOCRITAQOR_IAPPLICATION_H_3

#include "AppocritaQOR/IRole.h"

//------------------------------------------------------------------------------
namespace nsQOR
{
	class __QOR_INTERFACE( __APPOCRITA ) IEvent;
	class __QOR_INTERFACE( __APPOCRITA ) IWorkflow;

	//------------------------------------------------------------------------------
	class __QOR_INTERFACE( __APPOCRITA ) IApplication
	{
	public:

		__QOR_DECLARE_OCLASS_ID( IApplication );

		__QOR_IMPL_REF( IApplication );

		IApplication(){}
		virtual ~IApplication(){};

		virtual void SetRole( IRole::ref_type Role ) = 0;
		virtual IRole::ref_type GetRole( void ) = 0;
		virtual void SetWorkflow( nsCodeQOR::CTLRef< IWorkflow > ) = 0;
		virtual nsCodeQOR::CTLRef< IWorkflow > GetWorkflow( void ) = 0;
		virtual void SetOuter( IApplication::ref_type ) = 0;
		virtual void Setup( void ) = 0;
		virtual void Shutdown( void ) = 0;
		virtual int Run( void ) = 0;
		virtual int Run( nsCodeQOR::CTLRef< IWorkflow > ) = 0;
		virtual void EnqueueEvent( nsCodeQOR::CTLRef< IEvent > pEvent ) = 0;
		virtual void Stop( void ) = 0;
		virtual void OnIdle(void) = 0;
	};
}//nsQOR

#endif//APPOCRITAQOR_IAPPLICATION_H_3
