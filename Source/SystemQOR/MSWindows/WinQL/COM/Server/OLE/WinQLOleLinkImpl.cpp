//WinQLOleLinkImpl.cpp

// Copyright Querysoft Limited 2013, 2015, 2017
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "WinQL/CodeServices/WinQLPolicy.h"
#include "WinQL/Application/Threading/WinQLCriticalSection.h"
#include "WinQL/COM/Server/OLE/WinQLOleLinkImpl.h"
#include "WinQAPI/OLE32.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{

	__QOR_IMPLEMENT_COMCLASS_ID( COleLinkImpl, IOleLink, 0x0000011d,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46 );

	//-------------------------------------------------------------------------------
	COleLinkImpl::COleLinkImpl( CIUnknownImplBase<>* pImpl ) : CInterfaceImplBase( pImpl )
	{
		_WINQ_FCONTEXT( "COleLinkImpl::COleLinkImpl" );
	}

	//--------------------------------------------------------------------------------
	COleLinkImpl::~COleLinkImpl()
	{
		_WINQ_FCONTEXT( "COleLinkImpl::~COleLinkImpl" );
	}

	//--------------------------------------------------------------------------------
	long __QCMP_STDCALLCONVENTION COleLinkImpl::SetUpdateOptions( unsigned long dwUpdateOpt )
	{
		_WINQ_FCONTEXT( "COleLinkImpl::SetUpdateOptions" );
		return E_NotImpl;
	}

	//--------------------------------------------------------------------------------
	long __QCMP_STDCALLCONVENTION COleLinkImpl::GetUpdateOptions( unsigned long* pdwUpdateOpt )
	{
		_WINQ_FCONTEXT( "COleLinkImpl::GetUpdateOptions" );
		return E_NotImpl;
	}

	//--------------------------------------------------------------------------------
	long __QCMP_STDCALLCONVENTION COleLinkImpl::SetSourceMoniker( IMoniker* pmk, const GUID& rclsid )
	{
		_WINQ_FCONTEXT( "COleLinkImpl::SetSourceMoniker" );
		return E_NotImpl;
	}

	//--------------------------------------------------------------------------------
	long __QCMP_STDCALLCONVENTION COleLinkImpl::GetSourceMoniker( IMoniker** ppmk )
	{
		_WINQ_FCONTEXT( "COleLinkImpl::GetSourceMoniker" );
		return E_NotImpl;
	}

	//--------------------------------------------------------------------------------
	long __QCMP_STDCALLCONVENTION COleLinkImpl::SetSourceDisplayName( const wchar_t* pszStatusText )
	{
		_WINQ_FCONTEXT( "COleLinkImpl::SetSourceDisplayName" );
		return E_NotImpl;
	}

	//--------------------------------------------------------------------------------
	long __QCMP_STDCALLCONVENTION COleLinkImpl::GetSourceDisplayName( wchar_t** ppszDisplayName )
	{
		_WINQ_FCONTEXT( "COleLinkImpl::GetSourceDisplayName" );
		return E_NotImpl;
	}

	//--------------------------------------------------------------------------------
	long __QCMP_STDCALLCONVENTION COleLinkImpl::BindToSource( unsigned long bindflags, IBindCtx* pbc )
	{
		_WINQ_FCONTEXT( "COleLinkImpl::BindToSource" );
		return E_NotImpl;
	}

	//--------------------------------------------------------------------------------
	long __QCMP_STDCALLCONVENTION COleLinkImpl::BindIfRunning( void )
	{
		_WINQ_FCONTEXT( "COleLinkImpl::BindIfRunning" );
		return E_NotImpl;
	}

	//--------------------------------------------------------------------------------
	long __QCMP_STDCALLCONVENTION COleLinkImpl::GetBoundSource( IUnknown** ppunk )
	{
		_WINQ_FCONTEXT( "COleLinkImpl::GetBoundSource" );
		return E_NotImpl;
	}

	//--------------------------------------------------------------------------------
	long __QCMP_STDCALLCONVENTION COleLinkImpl::UnbindSource( void )
	{
		_WINQ_FCONTEXT( "COleLinkImpl::UnbindSource" );
		return E_NotImpl;
	}

	//--------------------------------------------------------------------------------
	long __QCMP_STDCALLCONVENTION COleLinkImpl::Update( IBindCtx* pbc )
	{
		_WINQ_FCONTEXT( "COleLinkImpl::Update" );
		return E_NotImpl;
	}

}//nsWin32


