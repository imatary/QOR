//WinQLPipeClientAdaptor.h

// Copyright Querysoft Limited 2013, 2016, 2017
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef WINQL_IO_PIPELIENTADAPTOR_H_3
#define WINQL_IO_PIPELIENTADAPTOR_H_3

#include "CompilerQOR.h"

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#include "WinQL/Application/Comms/IPC/Pipe/WinQLPipe.h"
#include "WinQL/Application/IO/Pipe/WinQLPipeConnector.h"
#include "WinQL/Application/IO/Pipe/WinQLPipeSource.h"
#include "WinQL/Application/IO/Pipe/WinQLPipeSink.h"
#include "BluefootQOR/BfConnectionPool.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	//--------------------------------------------------------------------------------
	//Adapt a general PipeConnector for use as a connection on the client side of the pipe
	class __QOR_INTERFACE( __WINQL ) CPipeClientAdaptor : public CPipeConnector
	{
	public:

		__QOR_DECLARE_OCLASS_ID( CPipeClientAdaptor );

		CPipeClientAdaptor( nsBluefoot::CConnectionPool* pPool = 0 );
		virtual ~CPipeClientAdaptor();

		//Pipe client connection overrides for CPlug interface
		virtual void OnConnected();

		void SetReadMode( unsigned long ulReadMode );
		unsigned long GetReadMode( void );

	protected:

		unsigned long m_ulReadMode;	

	};

}//nsWin32

#endif//WINQL_IO_PIPELIENTADAPTOR_H_3
