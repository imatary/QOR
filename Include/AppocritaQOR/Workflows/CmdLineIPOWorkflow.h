//CmdLineIPOWorkflow.h

// Copyright Querysoft Limited 2016
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma __QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#ifndef _APPOCRITAQOR_WORKFLOWS_CMDLINEIPO_H_
#define _APPOCRITAQOR_WORKFLOWS_CMDLINEIPO_H_

#include "CompilerQOR.h"
#include "AppocritaQOR/Workflow.h"
#include "AppocritaQOR/State.h"
#include "AppocritaQOR/Event.h"

//------------------------------------------------------------------------------
namespace nsQOR
{
	//------------------------------------------------------------------------------
	struct __QOR_INTERFACE( __APPOCRITA ) CApplicationStartupState : public CState
	{
	public:

		CApplicationStartupState( CWorkflow::ref_type pWorkflow ) : CState( pWorkflow ){}

		virtual bool operator()(IEvent::ref_type _event);
		virtual void OnEnter( IEvent::ref_type pEvent );
		virtual void OnLeave( IEvent::ref_type pEvent );
	};

	//------------------------------------------------------------------------------
	struct __QOR_INTERFACE( __APPOCRITA ) CCmdLineInputState : public CState
	{
	public:

		CCmdLineInputState( CWorkflow::ref_type pWorkflow ) : CState( pWorkflow ){}

		virtual bool operator()(IEvent::ref_type _event);
		virtual void OnEnter( IEvent::ref_type pEvent );
		virtual void OnLeave( IEvent::ref_type pEvent );
	};

	//------------------------------------------------------------------------------
	struct __QOR_INTERFACE( __APPOCRITA ) CProcessingState : public CState
	{
	public:

		CProcessingState( CWorkflow::ref_type pWorkflow ) : CState( pWorkflow ){}

		virtual bool operator()(IEvent::ref_type _event);
		virtual void OnEnter( IEvent::ref_type pEvent );
		virtual void OnLeave( IEvent::ref_type pEvent );
	};

	//------------------------------------------------------------------------------
	struct __QOR_INTERFACE( __APPOCRITA ) CCmdLineOutputState : public CState
	{
	public:

		CCmdLineOutputState( CWorkflow::ref_type pWorkflow ) : CState( pWorkflow ){}

		virtual bool operator()(IEvent::ref_type _event);
		virtual void OnEnter( IEvent::ref_type pEvent );
		virtual void OnLeave( IEvent::ref_type pEvent );
	};

	//------------------------------------------------------------------------------
	class __QOR_INTERFACE( __APPOCRITA ) CCmdLineIPOWorkflow : public CWorkflow
	{
	public:

		CCmdLineIPOWorkflow( IApplication& Application );
		CCmdLineIPOWorkflow( const CCmdLineIPOWorkflow& src );
		virtual ~CCmdLineIPOWorkflow();
		CCmdLineIPOWorkflow& operator = ( const CCmdLineIPOWorkflow& src );

		IState::ref_type InitialState( void );

		CApplicationStartupState m_StartupState;
		CCmdLineInputState m_InputState;
		CProcessingState m_ProcessingState;
		CCmdLineOutputState m_OutputState;

		CEvent m_ApplicationStartupCompleteEvent;

	private:

		IApplication& m_Application;

		CCmdLineIPOWorkflow();
	};

}//nsQOR

#endif//_APPOCRITAQOR_WORKFLOWS_CMDLINEIPO_H_
