//WinQLDevice.h

// Copyright Querysoft Limited 2013, 2017
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Win32 Device IO

#ifndef WINQL_DEVICE_H_1
#define WINQL_DEVICE_H_1

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#include "WinQL/Definitions/Data.h"
#include "WinQL/Definitions/IO.h"
#include "WinQL/CodeServices/Text/WinString.h"

//--------------------------------------------------------------------------------
namespace nsWinQAPI
{
	class __QOR_INTERFACE( __WINQAPI ) CSetupAPI;
}

//--------------------------------------------------------------------------------
namespace nsWin32
{
	class __QOR_INTERFACE( __WINQL ) COSWindow;

	//--------------------------------------------------------------------------------
	struct DevicePropertyKey
	{
		nsCodeQOR::__mxGUID		fmtid;
		unsigned long			pid;
	};

	//--------------------------------------------------------------------------------
	struct SP_DevInfo_Data
	{
		unsigned long			cbSize;
		nsCodeQOR::__mxGUID		ClassGuid;
		unsigned long			DevInst;
		Cmp_ulong_ptr			Reserved;
	};

	//--------------------------------------------------------------------------------
	struct SP_Device_Interface_Data
	{
		unsigned long			cbSize;
		nsCodeQOR::__mxGUID     InterfaceClassGuid;
		unsigned long			Flags;
		Cmp_ulong_ptr			Reserved;
	};

	//--------------------------------------------------------------------------------
	struct SP_Device_Interface_Node
	{
		SP_Device_Interface_Node* pNext;
		unsigned long			cbSize;
		nsCodeQOR::__mxGUID		InterfaceClassGuid;
		unsigned long			ulFlags;		
	};

	//--------------------------------------------------------------------------------
	struct SP_Device_Node
	{
		SP_Device_Node* pNext;
		unsigned long			cbSize;
		nsCodeQOR::__mxGUID     SetupClassGuid;
		unsigned long			Instance;
		unsigned long			ulFlags;
		SP_Device_Interface_Node* pInterface0;
	};

	//--------------------------------------------------------------------------------
	struct SP_Device_Interface_Detail_Data
	{
		unsigned long cbSize;
		mxTCHAR  DevicePath[ MaxPath ];
	};

	class __QOR_INTERFACE( __WINQL ) CDeviceFile;
	class __QOR_INTERFACE( __WINQL ) CIODeviceFile;

}//nsWin32

#endif//WINQL_DEVICE_H_1
