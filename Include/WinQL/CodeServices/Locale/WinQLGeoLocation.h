//WinQLGeoLocation.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Win32 Geo Location

#ifndef WINQL_CS_LC_GEO_H_3
#define WINQL_CS_LC_GEO_H_3

#include "WinQL/Application/I18n/WinQLI18n.h"
#include "CodeQOR/DataStructures/TRef.h"

__QOR_DECLARE_REF(nsWin32, __WINQLL, CGeoLocation, CTRef);

//--------------------------------------------------------------------------------
namespace nsWin32
{
	typedef long			GEOID;
	typedef unsigned long	GEOTYPE;
	typedef unsigned long	GEOCLASS;

	//--------------------------------------------------------------------------------
	enum eGeoClass 
	{
		GeoClass_Nation  = 16,
		GeoClass_Region  = 14,
	};

	//--------------------------------------------------------------------------------
	enum eGeoType
	{
		GeoType_Nation      =       0x0001,
		GeoType_Latitude    =       0x0002,
		GeoType_Longitude   =       0x0003,
		GeoType_ISO2        =       0x0004,
		GeoType_ISO3        =       0x0005,
		GeoType_RFC1766     =       0x0006,
		GeoType_LCID        =       0x0007,
		GeoType_FriendlyName=       0x0008,
		GeoType_OfficialName=       0x0009,
		GeoType_TimeZones   =       0x000A,
		GeoType_OfficialLanguages = 0x000B,
	};

	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL ) CGeoLocationHelper
	{
	public:

		__QOR_DECLARE_OCLASS_ID( CGeoLocationHelper );

		CGeoLocationHelper();
		CGeoLocationHelper( const CGeoLocationHelper& src );
		CGeoLocationHelper( CGeoLocationHelper&& move );
		CGeoLocationHelper& operator = ( const CGeoLocationHelper& src);
		CGeoLocationHelper& operator = ( CGeoLocationHelper&& move);
		~CGeoLocationHelper();
		BOOL EnumSystemGeoID( GEOCLASS GeoClass, GEOID ParentGeoId, GeoEnumCallback lpGeoEnumProc ) const;
		CTString GetGeoInfo( GEOID GeoId, GEOTYPE GeoType, unsigned short usLanguage ) const;
		GEOID GetUserNation() const;
		GEOID GetUserRegion() const;
		GEOID GetUserGeoID( GEOCLASS GeoClass ) const;
		BOOL SetUserGeoID( GEOID GeoID ) const;

	private:

		CLocaleHelper m_Win32LocaleHelper;
	};

	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL ) CGeoLocation
	{

	public:

		__QOR_DECLARE_OCLASS_ID( CGeoLocation );

		CGeoLocation() = delete;
		CGeoLocation( GEOID ID );
		CGeoLocation( const CGeoLocation& src );
		CGeoLocation( CGeoLocation&& move );
		CGeoLocation& operator = ( const CGeoLocation& src );
		CGeoLocation& operator = ( CGeoLocation&& move);
		~CGeoLocation();

		GEOID ID() const;
		CTString GetNation( unsigned short usLanguage ) const;
		CTString GetLatitude( unsigned short usLanguage ) const;
		CTString GetLongitude( unsigned short usLanguage ) const;
		CTString GetISO2( unsigned short usLanguage ) const;
		CTString GetISO3( unsigned short usLanguage ) const;
		CTString GetRFC1766( unsigned short usLanguage ) const;
		CTString GetLCID( unsigned short usLanguage ) const;
		CTString GetFriendlyName( unsigned short usLanguage ) const;
		CTString GetOfficialName( unsigned short usLanguage ) const;

	private:

		GEOID m_ID;
		CGeoLocationHelper m_Helper;
	};

}//nsWin32

#endif//WINQL_CS_LC_GEO_H_3
