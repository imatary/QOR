//WinQLBluetoothClient.h

// Copyright Querysoft Limited 2013, 2016
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Win32 Client for Bluetooth Service

#ifndef WINQL_COMMS_BLUETOOTHCLIENT_H_3
#define WINQL_COMMS_BLUETOOTHCLIENT_H_3

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#include "WinQL/WinQL.h"
#include "WinQL/CodeServices/WinQLPolicy.h"
#include "WinQL/CodeServices/Text/WinString.h"
#include "WinQL/Application/Comms/Bluetooth/WinQLBluetoothRemoteDevice.h"
#include "WinQL/System/Devices/BluetoothRadio/WinQLBluetoothRadio.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL ) CBluetoothClient
	{
	public:

		typedef nsCodeQOR::CTLRef< CBluetoothClient > refType;

		static nsCodeQOR::mxGUID OBEXObjectPushServiceClass_UUID;

		__QOR_DECLARE_OCLASS_ID( CBluetoothClient );

		CBluetoothClient( nsCodeQOR::mxGUID& ServiceUUID );
		virtual ~CBluetoothClient();

		//--------------------------------------------------------------------------------
		refType Ref( void )
		{
			return refType( this, false );
		}

		virtual void AttachDevice( CBluetoothRemoteDevice::refType Device );

		//Authenticate

	private:

		nsCodeQOR::mxGUID& m_ServiceUUID;

		CBluetoothClient();
		CBluetoothClient( const CBluetoothClient& );
		CBluetoothClient& operator = ( const CBluetoothClient& );
	};

#ifndef __WINQL

	__QOR_INTERFACE( __WINQL ) nsCodeQOR::mxGUID __QCMP_DECLARE_MERGE_INITIALIZERS CBluetoothClient::OBEXObjectPushServiceClass_UUID		 = { 0x00001105, 0x0000, 0x1000, { 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB } };
#endif

}//nsWin32

#endif//WINQL_COMMS_BLUETOOTHCLIENT_H_3
