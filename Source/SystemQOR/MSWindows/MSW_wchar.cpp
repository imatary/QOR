//MSW_wchar.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "SystemQOR.h"
#include <stdio.h>
#include <errno.h>
#include <limits.h>

#if		(QOR_SYS_OS == QOR_SYS_MSW)

#include "SystemQOR/MSWindows/MSW_wchar.h"
#include "WinQL/WinQL.h"
#include "WinQL/System/WinQLSystem.h"
#include "WinQL/CodeServices/Text/WinQLFormatter.h"
#include "WinQL/Application/ErrorSystem/WinQLError.h"
#include "WinQL/CodeServices/Locale/WinQLLocaleUpdate.h"

//------------------------------------------------------------------------------
__QOR_IMPLEMENT_OCLASS_GUID( nsWin32::Cwchar, 0x00000000, 0x0000, 0x0000, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 )

//--------------------------------------------------------------------------------
namespace nsWin32
{
	//--------------------------------------------------------------------------------
	Cwchar::Cwchar()
	{
		__QCS_MEMBER_FCONTEXT( "Cwchar::Cwchar" );
	}

	//--------------------------------------------------------------------------------
	Cwchar::~Cwchar()
	{
		__QCS_MEMBER_FCONTEXT( "Cwchar::~Cwchar" );
	}

	//--------------------------------------------------------------------------------
	int Cwchar::is_wctype( wint_t wc, wctype_t Type )
	{
		_WINQ_FCONTEXT( "Cwchar::is_wctype" );
		int iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::fwprintf( FILE* stream, const wchar_t* format, ... )
	{
		_WINQ_FCONTEXT( "Cwchar::fwprintf" );
		int iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::fwscanf( FILE* stream, const wchar_t* format, ... )
	{
		_WINQ_FCONTEXT( "Cwchar::fwprintf" );
		int iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::swprintf(wchar_t* s, size_t n, const wchar_t* format, ...)
	{
		_WINQ_FCONTEXT( "Cwchar::swprintf" );
		int iResult = 0;
		//nsWin32::CTString Format( format, wcslen( format ) );
		//nsWin32::CTString Output( s, wcslen( s ) );
		//iResult = Output.Format( Format, vargs );
		return iResult;

	}

	//--------------------------------------------------------------------------------
	int Cwchar::swscanf( const wchar_t* s, const wchar_t* format, ... )
	{
		_WINQ_FCONTEXT( "Cwchar::swscanf" );
		int iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::vfwprintf( FILE* stream, const wchar_t* format, va_list arg )
	{
		_WINQ_FCONTEXT( "Cwchar::vfwprintf" );
		int iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::vfwscanf( FILE* stream, const wchar_t* format, va_list arg )
	{
		_WINQ_FCONTEXT( "Cwchar::vfwscanf" );
		int iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::vswprintf( wchar_t* s, size_t n, const wchar_t* format, va_list arg )
	{
		_WINQ_FCONTEXT( "Cwchar::vswprintf" );
		int iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::vswscanf( const wchar_t* s, const wchar_t* format, va_list arg )
	{
		_WINQ_FCONTEXT( "Cwchar::vswscanf" );
		int iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::vwprintf( const wchar_t* format, va_list arg )
	{
		_WINQ_FCONTEXT( "Cwchar::vwprintf" );
		int iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::vwscanf( const wchar_t* format, va_list arg )
	{
		_WINQ_FCONTEXT( "Cwchar::vwscanf" );
		int iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::wprintf( const wchar_t* format, va_list vargs )
	{
		_WINQ_FCONTEXT( "Cwchar::wprintf" );
		int iResult = 0;
		if( format == 0 )
		{
			errno = EINVAL;
			iResult = -1;
		}
		else
		{
			/*
			::nsPosum::CStream Stream( 1 );
			iResult = Stream.Wprintf( format, vargs );
			*/
		}
		return iResult;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::wscanf( const wchar_t* format, ... )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	wint_t Cwchar::fgetwc( FILE* stream )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wint_t iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::fgetws( wchar_t* s, int n, FILE* stream )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wint_t Cwchar::fputwc( wchar_t c, FILE* stream )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wint_t iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::fputws( const wchar_t* s, FILE* stream )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::fwide( FILE* stream, int mode )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	wint_t Cwchar::getwc( FILE* stream )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wint_t iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	wint_t Cwchar::getwchar( void )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wint_t iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	wint_t Cwchar::putwc( wchar_t c, FILE* stream )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wint_t iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	wint_t Cwchar::putwchar( wchar_t c )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wint_t iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	wint_t Cwchar::ungetwc( wint_t c, FILE* stream )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wint_t iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	double Cwchar::wcstod( const wchar_t* nptr, wchar_t** endptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	float Cwchar::wcstof( const wchar_t* nptr, wchar_t** endptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		float Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	long double Cwchar::wcstold( const wchar_t* nptr, wchar_t** endptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	long int Cwchar::wcstol( const wchar_t* nptr, wchar_t** endptr, int ibase )
	{
		_WINQ_FCONTEXT( "Cwchar::wcstol" );
		const wchar_t *p;
		wchar_t c;
		unsigned long number;
		unsigned digval;
		unsigned long maxval;
		int flags = 0;

		if( endptr != 0 )
		{
			// store beginning of string in endptr
			*endptr = const_cast< wchar_t* >( nptr );
		}

		//_VALIDATE_RETURN(nptr != NULL, EINVAL, 0L);
		//_VALIDATE_RETURN(ibase == 0 || (2 <= ibase && ibase <= 36), EINVAL, 0L);

		p = nptr;           // p is our scanning pointer
		number = 0;         // start with zero

		c = *p++;           // read char

		while( iswspace(c) )
		{
			c = *p++;       // skip whitespace
		}

		if( c == '-' ) 
		{
			flags |= FL_NEG;    // remember minus sign
			c = *p++;
		}
		else if( c == '+' )
		{
			c = *p++;       // skip sign
		}

		if( ibase == 0 ) 
		{
			// determine base free-lance, based on first two chars of string
			if( _wchartodigit( c ) != 0 )
			{
				ibase = 10;
			}
			else if( *p == L'x' || *p == L'X' )
			{
				ibase = 16;
			}
			else
			{
				ibase = 8;
			}
		}

		if( ibase == 16 ) 
		{
			// we might have 0x in front of number; remove if there
			if( _wchartodigit( c ) == 0 && ( *p == L'x' || *p == L'X' ) ) 
			{
				++p;
				c = *p++;   // advance past prefix
			}
		}

		// if our number exceeds this, we will overflow on multiply
		maxval = ULONG_MAX / ibase;

		for (;;) 
		{ 
			// convert c to value
			if( ( digval = _wchartodigit( c ) ) != -1 )
				;			
			else if( __ascii_iswalpha( c ) )
			{
				digval = __ascii_towupper( c ) - L'A' + 10;
			}
			else
			{
				break;
			}

			if( digval >= (unsigned)ibase )
			{
				break;      // exit loop if bad digit found
			}

			// record the fact we have read one digit
			flags |= FL_READDIGIT;

			// we now need to compute number = number * base + digval, but we need to know if overflow occured.  This requires a tricky pre-check.

			if( number < maxval || (number == maxval && (unsigned long)digval <= ULONG_MAX % ibase ) ) 
			{
				// we won't overflow, go ahead and multiply
				number = number * ibase + digval;
			}
			else 
			{
				// we would have overflowed -- set the overflow flag
				flags |= FL_OVERFLOW;
				if( endptr == NULL ) 
				{
					// no need to keep on parsing if we don't have to return the endptr.
					break;
				}
			}

			c = *p++;       // read next digit
		}

		--p;                // point to place that stopped scan

		if( !( flags & FL_READDIGIT ) ) 
		{
			// no number there; return 0 and point to beginning of string
			if( endptr )
			{
				// store beginning of string in endptr later on 
				p = nptr;
			}
			number = 0L;        // return 0
		}
		else if ( (flags & FL_OVERFLOW) || ( !(flags & FL_UNSIGNED) && ( ( (flags & FL_NEG) && (number > -LONG_MIN) ) || ( !(flags & FL_NEG) && (number > LONG_MAX) ) ) ) )
		{
			// overflow or signed overflow occurred
			errno = ERANGE;
			if ( flags & FL_UNSIGNED )
			{
				number = ULONG_MAX;
			}
			else if ( flags & FL_NEG )
			{
				number = (unsigned long)(-LONG_MIN);
			}
			else
			{
				number = LONG_MAX;
			}
		}

		if( endptr != 0 )
		{			
			*endptr = const_cast< wchar_t* >( p );		// store pointer to char that stopped the scan
		}

		if( flags & FL_NEG )
		{
			// negate result if there was a neg sign
			number = (unsigned long)(-(long)number);
		}

		return number;          // done.
	}

	//--------------------------------------------------------------------------------
	long long int Cwchar::wcstoll( const wchar_t* nptr, wchar_t** endptr, int base )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	unsigned long int Cwchar::wcstoul( const wchar_t* nptr, wchar_t** endptr, int base )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	unsigned long long int Cwchar::wcstoull( const wchar_t* nptr, wchar_t** endptr, int base )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::wcscpy( wchar_t* s1, const wchar_t* s2 )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::wcsncpy( wchar_t* s1, const wchar_t* s2, size_t n )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::wmemcpy( wchar_t* s1, const wchar_t* s2, size_t n )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::wmemmove( wchar_t* s1, const wchar_t* s2, size_t n )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::wcscat( wchar_t* s1, const wchar_t* s2 )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::wcsncat( wchar_t* s1, const wchar_t* s2, size_t n )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::wcscmp( const wchar_t* s1, const wchar_t* s2 )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::wcscoll( const wchar_t* s1, const wchar_t* s2 )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::wcsncmp( const wchar_t* s1, const wchar_t* s2, size_t n )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::wcsxfrm( wchar_t* s1, const wchar_t* s2, size_t n )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::wmemcmp( const wchar_t* s1, const wchar_t* s2, size_t n )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::wcschr( const wchar_t* s, wchar_t c )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::wcscspn( const wchar_t* s1, const wchar_t* s2 )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::wcspbrk( const wchar_t* s1, const wchar_t* s2 )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::wcsrchr( const wchar_t* s, wchar_t c )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::wcsspn( const wchar_t* s1, const wchar_t* s2 )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int iResult = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::wcsstr( const wchar_t* s1, const wchar_t* s2 )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::wcstok( wchar_t* s1, const wchar_t* s2, wchar_t** ptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::wmemchr( const wchar_t* s, wchar_t c, size_t n )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::wcslen( const wchar_t* s )
	{
		_WINQ_FCONTEXT( "Cwchar::wcslen" );
		size_t stResult = 0;
		if( s != 0 )
		{
			const wchar_t* pwchEOS = s;

			while( *pwchEOS++ ) ;

			stResult = static_cast< size_t >( pwchEOS - s - 1 );
		}
		return stResult;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::wmemset( wchar_t* s, wchar_t c, size_t n )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::wcsftime( wchar_t* s, size_t maxsize, const wchar_t* format, const struct tm* timeptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		size_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wint_t Cwchar::btowc( int c )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wint_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::wctob( wint_t c )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::mbsinit( const mbstate_t* ps )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::mbrlen( const char* s, size_t n, mbstate_t* ps )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		size_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::mbrtowc( wchar_t* pwc, const char* s, size_t n, mbstate_t* ps )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		size_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::wcrtomb( char* s, wchar_t wc, mbstate_t* ps )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		size_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::mbsrtowcs( wchar_t* dst, const char** src, size_t len, mbstate_t* ps )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		size_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::wcsrtombs( char* dst, const wchar_t** src, size_t len, mbstate_t* ps )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		size_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::wcsncnt( const wchar_t* string, int cnt )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::wcswcs( const wchar_t* p1, const wchar_t* p2 )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::wcswidth( const wchar_t*, size_t )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::wcwidth( wchar_t )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wcsncnt( const wchar_t* string, int cnt )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    size_t Cwchar::wcsnlen( const wchar_t* str, size_t numberOfElements )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		size_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    int Cwchar::isleadbyte( int wc )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    int Cwchar::_wutime64( const wchar_t* filename, __utimbuf64* times )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    int Cwchar::_wutime32( const wchar_t* filename, __utimbuf32* _Time )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    int Cwchar::_wunlink( const wchar_t* filename )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    double Cwchar::_wtof( const wchar_t* string )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		double Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    int Cwchar::_wtoi( const wchar_t* string )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    long Cwchar::_wtol( const wchar_t* string )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		long Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    Cmp_signed__int64 Cwchar::_wtoi64( const wchar_t* string )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		Cmp_signed__int64 Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    wchar_t* Cwchar::_wtmpnam( wchar_t* string )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    errno_t Cwchar::_wtmpnam_s( wchar_t* pDstBuf, size_t SizeInWords )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		errno_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    wchar_t* Cwchar::_wtempnam( const wchar_t* pDirectory, const wchar_t* pFilePrefix )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    int Cwchar::_wsystem( const wchar_t* pCommand )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    wchar_t* Cwchar::_wstrtime( wchar_t* timestr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    errno_t Cwchar::_wstrtime_s( wchar_t* pBuf, size_t SizeInWords )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		errno_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    wchar_t* Cwchar::_wstrdate( wchar_t* datestr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    errno_t Cwchar::_wstrdate_s( wchar_t* pBuf, size_t SizeInWords )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		errno_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    int Cwchar::_wstat32( const wchar_t* pName, _stat32* pStat )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    int Cwchar::_wstat32i64( const wchar_t* pName, _stat32i64* pStat )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    int Cwchar::_wstat64( const wchar_t* pName, _stat64* pStat )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    int Cwchar::_wstat64i32( const wchar_t* pName, _stat64i32* pStat )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    void Cwchar::_wsplitpath( const wchar_t* path, wchar_t* drive, wchar_t* dir, wchar_t* fname, wchar_t* ext )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
	}

	//--------------------------------------------------------------------------------
    errno_t Cwchar::_wsplitpath_s( const wchar_t* pFullPath, wchar_t* pDrive, size_t DriveSize, wchar_t* pDir, size_t DirSize, wchar_t* pFilename, size_t FilenameSize, wchar_t* pExt, size_t ExtSize )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		errno_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    intptr_t Cwchar::_wspawnvpe( int _Mode, const wchar_t* Filename, const wchar_t* const* _ArgList, const wchar_t* const* _Env )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		intptr_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    intptr_t Cwchar::_wspawnvp( int _Mode, const wchar_t* Filename, const wchar_t* const* _ArgList )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		intptr_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    intptr_t Cwchar::_wspawnve( int _Mode, const wchar_t* Filename, const wchar_t* const* _ArgList, const wchar_t* const* _Env )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		intptr_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    intptr_t Cwchar::_wspawnv( int _Mode, const wchar_t* Filename, const wchar_t* const* _ArgList )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		intptr_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    intptr_t Cwchar::_wspawnlpe( int _Mode, const wchar_t* Filename, const wchar_t* _ArgList, ... )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		intptr_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    intptr_t Cwchar::_wspawnlp( int _Mode, const wchar_t* Filename, const wchar_t* _ArgList, ... )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		intptr_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    intptr_t Cwchar::_wspawnle( int _Mode, const wchar_t* Filename, const wchar_t* _ArgList, ... )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		intptr_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    intptr_t Cwchar::_wspawnl( int _Mode, const wchar_t* Filename, const wchar_t* _ArgList, ... )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		intptr_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    size_t Cwchar::__wcsncnt( const wchar_t* pStr, size_t MaxCount )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		size_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    int Cwchar::fwprintf_s( FILE* pFile, const wchar_t* format, va_list vargs )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    int Cwchar::fwscanf_s( FILE* pFile, const wchar_t* format, va_list vargs )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    int Cwchar::swscanf_s( const wchar_t* s, const wchar_t* format, va_list vargs )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    errno_t Cwchar::mbsrtowcs_s( size_t* pRetval, wchar_t* pDst, size_t Size, const char** ppSrc, size_t n, mbstate_t* _State )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		errno_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    int Cwchar::swprintf_s( wchar_t* s, size_t SizeInWords, const wchar_t* format, va_list vargs )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    int Cwchar::wscanf_s( const wchar_t* __QCMP_RESTRICT format, va_list vargs )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    int Cwchar::vfwprintf_s( FILE* stream, const wchar_t* format, va_list arg )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    int Cwchar::vwprintf_s( const wchar_t* format, va_list arg )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    int Cwchar::_vswprintf( wchar_t* string, const wchar_t* format, va_list arg )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    int Cwchar::vswprintf_s( wchar_t* s, size_t n, const wchar_t* format, va_list arg )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    errno_t Cwchar::wcrtomb_s( size_t* pReturnValue, char* mbchar, size_t sizeOfmbchar, wchar_t* wchar, mbstate_t* mbstate )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		errno_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    errno_t Cwchar::wcscat_s( wchar_t* strDestination, size_t numberOfElements, const wchar_t* strSource )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		errno_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    errno_t Cwchar::wcscpy_s( wchar_t* strDestination, size_t numberOfElements, const wchar_t* strSource )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		errno_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    errno_t Cwchar::wcsncat_s( wchar_t* strDest, size_t numberOfElements, const wchar_t* strSource, size_t count )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		errno_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    errno_t Cwchar::wcsncpy_s( wchar_t* strDest, size_t numberOfElements, const wchar_t* strSource, size_t count )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		errno_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    errno_t Cwchar::wcsrtombs_s( size_t* pReturnValue, char* mbstr, size_t sizeInBytes, const wchar_t** wcstr, size_t count, mbstate_t* mbstate )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		errno_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    wchar_t* Cwchar::wcstok_s( wchar_t* strToken, const wchar_t* strDelimit, wchar_t** context )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
    int Cwchar::wprintf_s( const wchar_t* __QCMP_RESTRICT format, va_list vargs )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::mbsnrtowcs( wchar_t* wcstr, const char** mbstr, size_t nmc, size_t len, mbstate_t* mbState )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		size_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	FILE* Cwchar::open_wmemstream( wchar_t** bufp, size_t* sizep )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		FILE* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::wcpcpy( wchar_t* ws1, const wchar_t* ws2 )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::wcpncpy( wchar_t* ws1, const wchar_t* ws2, size_t n )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::wcscasecmp( const wchar_t* ws1, const wchar_t* ws2 )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::wcscasecmp_l( const wchar_t* ws1, const wchar_t* ws2, locale_t l )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::wcscoll_l( const wchar_t* ws1, const wchar_t* ws2, locale_t l )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::wcsdup( const wchar_t* ws )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::wcsncasecmp( const wchar_t* ws1, const wchar_t* ws2, size_t n )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::wcsncasecmp_l( const wchar_t* ws1, const wchar_t* ws2, size_t n, locale_t l )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::wcsnrtombs( char* dst, const wchar_t** src, size_t nwc, size_t len, mbstate_t* ps )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		size_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::wcsxfrm_l( wchar_t* s1, const wchar_t* s2, size_t n, locale_t l )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		size_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_swprintf_p_l( wchar_t* buffer, size_t sizeOfBuffer, const wchar_t* format, locale_t locale, va_list )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_swprintf_s_l( wchar_t* buffer, size_t sizeOfBuffer, const wchar_t* format, locale_t locale, va_list )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_swscanf_l( const wchar_t* buffer, const wchar_t* format, locale_t locale, va_list )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_swscanf_s_l( const wchar_t* buffer, const wchar_t* format, locale_t locale, va_list )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	double Cwchar::_wtof_l( const wchar_t* string, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		double Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wtoi_l( const wchar_t* string, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	long Cwchar::_wtol_l( const wchar_t* string, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		long Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	Cmp_signed__int64 Cwchar::_wtoi64_l( const wchar_t* string, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		Cmp_signed__int64 Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	//int Cwchar::_wstat64( const wchar_t* pName, _stat64* pStat )
	int Cwchar::_wsopen( const wchar_t* pFilename, int OpenFlag, int ShareFlag, int PermissionMode )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_wsopen_s( int* pFileHandle, const wchar_t* pFilename, int OpenFlag, int ShareFlag, int PermissionFlag )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		errno_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::_wsetlocale( int Category, const wchar_t* pLocale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	void Cwchar::_wsearchenv( const wchar_t* filename, const wchar_t* varname, wchar_t* pathname )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_wsearchenv_s( const wchar_t* pFilename, const wchar_t* pEnvVar, wchar_t* pResultPath, size_t SizeInWords )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		errno_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wrmdir( const wchar_t* pPath )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wrename( const wchar_t* pOldFilename, const wchar_t* pNewFilename )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wremove( const wchar_t* pFilename )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_wputenv_s( const wchar_t* pName, const wchar_t* pValue )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		errno_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wputenv( const wchar_t* pEnvString )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wprintf_p( const wchar_t* pFormat, va_list )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wprintf_l( const wchar_t* format, locale_t locale, va_list )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	FILE* Cwchar::_wpopen( const wchar_t* pCommand, const wchar_t* pMode )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		FILE* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	void Cwchar::_wperror( const wchar_t* pErrMsg )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wopen( const wchar_t* pFilename, int OpenFlag, va_list )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_wmktemp_s( wchar_t* pTemplateName, size_t SizeInWords )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		errno_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::_wmktemp( wchar_t* pTemplate )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wmkdir( const wchar_t* pPath )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_wmakepath_s( wchar_t* pPathResult, size_t SizeInBytes, const wchar_t* pDrive, const wchar_t* pDir, const wchar_t* pFilename, const wchar_t* pExt )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		errno_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	void Cwchar::_wmakepath( wchar_t* path, const wchar_t* drive, const wchar_t* dir, const wchar_t* fname, const wchar_t* ext )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::_wgetenv( const wchar_t* _VarName )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_wgetenv_s( size_t* pReturnSize, wchar_t* pDstBuf, size_t DstSizeInWords, const wchar_t* pVarName )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		errno_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::_wgetdcwd( int oDrive, wchar_t* pDstBuf, int SizeInWords )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::_wgetdcwd_nolock( int iDrive, wchar_t* pDstBuf, int SizeInWords )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::_wgetcwd( wchar_t* pDstBuf, int SizeInWords )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::_wfullpath( wchar_t* pFullPath, const wchar_t* pPath, size_t SizeInWords )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::_wfullpath_dbg( wchar_t* absPath, const wchar_t* relPath, size_t maxLength, int blockType, const char* filename, int linenumber )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	FILE* Cwchar::_wfsopen( const wchar_t* pFilename, const wchar_t* pMode )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		FILE* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	FILE* Cwchar::_wfreopen( const wchar_t* pFilename, const wchar_t* pMode, FILE* pOldFile )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		FILE* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_wfreopen_s( FILE** pFile, const wchar_t* pFilename, const wchar_t* pMode, FILE* pOldFile )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		errno_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	FILE* Cwchar::_wfopen( const wchar_t* pFilename, const wchar_t* pMode )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		FILE* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_wfopen_s( FILE** ppFile, const wchar_t* pFilename, const wchar_t* pMode )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		errno_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wfindnext( intptr_t handle, _wfinddata_t* fileinfo )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wfindnext32( intptr_t FindHandle, _wfinddata32_t* pFindData )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wfindnext32i64( intptr_t FindHandle, _wfinddata32i64_t* pFindData )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wfindnext64( intptr_t FindHandle, _wfinddata64_t* pFindData )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wfindnexti64( intptr_t handle, _wfinddatai64_t* fileinfo )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wfindnext64i32( intptr_t FindHandle, _wfinddata64i32_t* pFindData )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	intptr_t Cwchar::_wfindfirst( const wchar_t* filespec, _wfinddata_t* fileinfo )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		intptr_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	intptr_t Cwchar::_wfindfirst32( const wchar_t* pFilename, _wfinddata32_t* pFindData )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		intptr_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	intptr_t Cwchar::_wfindfirst32i64( const wchar_t* pFilename, _wfinddata32i64_t* pFindData )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		intptr_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	intptr_t Cwchar::_wfindfirst64( const wchar_t* pFilename, _wfinddata64_t* pFindData )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		intptr_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	intptr_t Cwchar::_wfindfirsti64( const wchar_t* filespec, _wfinddatai64_t* fileinfo )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		intptr_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	intptr_t Cwchar::_wfindfirst64i32( const wchar_t* pFilename, _wfinddata64i32_t* pFindData )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		intptr_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	FILE* Cwchar::_wfdopen( int FileHandle, const wchar_t* pMode )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		FILE* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	intptr_t Cwchar::_wexecvpe( const wchar_t* pFilename, const wchar_t* const* ArgList, const wchar_t* const* pEnv )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		intptr_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	intptr_t Cwchar::_wexecvp( const wchar_t* pFilename, const wchar_t* const* ArgList )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		intptr_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	intptr_t Cwchar::_wexecve( const wchar_t* pFilename, const wchar_t* const* ArgList, const wchar_t* const* pEnv )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		intptr_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	intptr_t Cwchar::_wexecv( const wchar_t* pFilename, const wchar_t* const* ArgList )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		intptr_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	intptr_t Cwchar::_wexeclpe( const wchar_t* pFilename, const wchar_t* pArgList, va_list )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		intptr_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	intptr_t Cwchar::_wexeclp( const wchar_t* pFilename, const wchar_t* pArgList, va_list )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		intptr_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	intptr_t Cwchar::_wexecle( const wchar_t* pFilename, const wchar_t* pArgList, va_list )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		intptr_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	intptr_t Cwchar::_wexecl( const wchar_t* pFilename, const wchar_t* pArgList, va_list )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		intptr_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_wdupenv_s( wchar_t** ppBuffer, size_t* pBufferSizeInWords, const wchar_t* pVarName )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		errno_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::_wctime( const time_t* timer )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::_wctime32( const __time32_t* pTime )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_wctime32_s( wchar_t* pBuf, size_t SizeInWords, const __time32_t* pTime )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		errno_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::_wctime64( const __time64_t* pTime )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_wctime64_s( wchar_t* pBuf, size_t SizeInWords, const __time64_t* pTime )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		errno_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::_wcsupr( wchar_t* pStr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_wcsupr_s( wchar_t* pStr, size_t Size )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		errno_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	Cmp_signed__int64 Cwchar::_wcstoi64( const wchar_t* pStr, wchar_t** ppEndPtr, int iRadix )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		Cmp_signed__int64 Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	Cmp_unsigned__int64 Cwchar::_wcstoui64( const wchar_t* pStr, wchar_t** ppEndPtr, int iRadix )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		Cmp_unsigned__int64 Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::_wcsset( wchar_t* pStr, wchar_t Val )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_wcsset_s( wchar_t* pStr, size_t SizeInWords, wchar_t Val )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		errno_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::_wcsrev( wchar_t* pStr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::_wcsnset( wchar_t* pStr, wchar_t Val, size_t MaxCount )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_wcsnset_s( wchar_t* pDst, size_t DstSizeInWords, wchar_t Val, size_t MaxCount )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		errno_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wcsncoll( const wchar_t* pStr1, const wchar_t* pStr2, size_t MaxCount )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wcsnicoll( const wchar_t* pStr1, const wchar_t* pStr2, size_t MaxCount )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wcsnicmp( const wchar_t* pStr1, const wchar_t* pStr2, size_t MaxCount )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::_wcslwr( wchar_t* String )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_wcslwr_s( wchar_t* pStr, size_t SizeInWords )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		errno_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wcsicoll( const wchar_t* pStr1, const wchar_t* pStr2 )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wcsicmp( const wchar_t* pStr1, const wchar_t* pStr2 )
	{
		_WINQ_FCONTEXT("Cwchar::_wcsicmp" );
		return 0;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::_wcsdup( const wchar_t* pStr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wcreat( const wchar_t* pFilename, int iPermissionMode )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wchmod( const wchar_t* pFilename, int iMode )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wchdir( const wchar_t* pPath )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::_wcserror( int ErrNum )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_wcserror_s( wchar_t* pBuf, size_t SizeInWords, int ErrNum )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::_wasctime( const tm* pTm )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_wasctime_s( wchar_t* pBuf, size_t SizeInWords, const tm* pTm )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_waccess( const wchar_t* pFilename, int iAccessMode )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_waccess_s( const wchar_t* pFilename, int iAccessMode )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::__wcserror( const wchar_t* pStr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::__wcserror_s( wchar_t* pBuffer, size_t SizeInWords, const wchar_t* pErrMsg )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	void Cwchar::_wassert( const wchar_t* pMessage, const wchar_t* pFile, unsigned uiLine )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wscanf_l( const wchar_t* format, locale_t locale, va_list )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wscanf_s_l( const wchar_t* format, locale_t locale, va_list )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vcprintf( const char* format, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vcprintf_l( const char* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vcprintf_p( const char* format, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vcprintf_p_l( const char* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vcprintf_s( const char* format, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vcprintf_s_l( const char* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vcwprintf( const wchar_t* format, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vcwprintf_l( const wchar_t* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vcwprintf_p( const wchar_t* format, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vcwprintf_p_l( const wchar_t* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vcwprintf_s( const wchar_t* format, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vcwprintf_s_l( const wchar_t* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vfprintf_l( FILE* stream, const char* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vfprintf_p( FILE* stream, const char* format, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vfprintf_p_l( FILE* stream, const char* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vfprintf_s_l( FILE* stream, const char* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vfwprintf_l( FILE* stream, const wchar_t* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vfwprintf_p( FILE* stream, const wchar_t* format, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vfwprintf_p_l( FILE* stream, const wchar_t* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vfwprintf_s_l( FILE* stream, const wchar_t* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vprintf_l( const char* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vprintf_p( const char* format, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vprintf_p_l( const char* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vprintf_s_l( const char* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vscprintf( const char* format, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vscprintf_l( const char* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vscprintf_p_l( const char* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vscwprintf( const wchar_t* format, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vscwprintf_l( const wchar_t* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vscwprintf_p_l( const wchar_t* _Format, ::_locale_t _Locale, va_list _ArgList )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vsnprintf( char* buffer, size_t count, const char* format, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::_vsnprintf" );
		__QOR_PROTECT
		{
			return _vsnprintf_l( buffer, count, format, 0, argptr );
		}__QOR_ENDPROTECT
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vsnprintf_c( char* _DstBuf, size_t _MaxCount, const char* _Format, va_list _ArgList )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vsnprintf_c_l( char* _DstBuf, size_t _MaxCount, const char* szFormat, ::_locale_t _Locale, va_list _ArgList )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vsnprintf_l( char* buffer, size_t count, const char* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::_vsnprintf_l" );
		int iResult = 0;
		__QOR_PROTECT
		{
			CCRTFile File;
			CFormatter Formatter( &File );			

			if( format == 0 || count == 0 || buffer == 0 )
			{
				errno = EINVAL;
				iResult = -1;
			}
			else
			{
				File._cnt = ( count > INT_MAX ) ? INT_MAX : count;
				File._flag = _IOWRT | _IOSTRG;
				File._ptr = File._base = buffer;
				iResult = Formatter.OutputA_l( format, argptr );

				if( buffer != 0 )
				{
					Formatter._putch_nolock( '\0' );
				}
			}

		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vsnprintf_s( char* buffer, size_t sizeOfBuffer, size_t count, const char* format, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vsnprintf_s_l( char* buffer, size_t sizeOfBuffer, size_t count, const char* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vsnwprintf( wchar_t* buffer, size_t count, const wchar_t* format, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::_vsnwprintf" );
		int iResult = 0;
		__QOR_PROTECT
		{
			CCRTFile File;
			CFormatter Formatter( &File );			

			if( format == 0 || count == 0 || buffer == 0 )
			{
				errno = EINVAL;
				iResult = -1;
			}
			else
			{
				File._cnt = ( count > INT_MAX ) ? INT_MAX : count;
				File._flag = _IOWRT | _IOSTRG;
				File._ptr = File._base = reinterpret_cast< char* >( buffer );
				iResult = Formatter.OutputW_l( format, argptr );

				if( buffer != 0 )
				{
					Formatter._putwch_nolock( 0 );
				}
			}
		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vsnwprintf_l( wchar_t* buffer, size_t count, const wchar_t* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vsnwprintf_s( wchar_t* buffer, size_t sizeOfBuffer, size_t count, const wchar_t* format, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vsnwprintf_s_l( wchar_t* buffer, size_t sizeOfBuffer, size_t count, const wchar_t* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vsprintf_l( char* buffer, const char* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vsprintf_p( char* buffer, size_t sizeInBytes, const char* format, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vsprintf_p_l( char* buffer, size_t sizeInBytes, const char* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vsprintf_s_l( char* buffer, size_t numberOfElements, const char* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vswprintf_c_l( wchar_t* _DstBuf, size_t _MaxCount, const wchar_t* _Format, ::_locale_t _Locale, va_list _ArgList )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vswprintf_l( wchar_t* buffer, size_t count, const wchar_t* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vswprintf_p_l( wchar_t* buffer, size_t count, const wchar_t* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vswprintf_s_l( wchar_t* buffer, size_t numberOfElements, const wchar_t* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vwprintf_l( const wchar_t* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vwprintf_p( const wchar_t* format, va_list ArgList )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vwprintf_p_l( const wchar_t* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vwprintf_s_l( const wchar_t* format, locale_t locale, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wprintf_s_l( const wchar_t* format, locale_t locale, va_list )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wprintf_p_l( const wchar_t* format, locale_t locale, va_list )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vswprintf_p( wchar_t* string, size_t MaxCount, const wchar_t* format, va_list ArgList )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_vswprintf_c( wchar_t* string, size_t count, const wchar_t* format, va_list ArgList )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_woutput_s( const wchar_t* format, va_list argptr )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_wctomb_s_l( int* pRetValue, char* mbchar, size_t sizeInBytes, wchar_t wchar, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wctomb_l( char* mbchar, wchar_t wchar, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_wcsupr_s_l( wchar_t* str, size_t numberOfElements, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::_wcsupr_l( wchar_t* str, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned long Cwchar::_wcstoul_l( const wchar_t* nptr, wchar_t** endptr, int base, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	Cmp_unsigned__int64 Cwchar::_wcstoui64_l( const wchar_t* nptr, wchar_t** endptr, int base, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_wcstombs_s_l( size_t* pReturnValue, char* mbstr, size_t sizeInBytes, const wchar_t* wcstr, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::_wcstombs_l( char* mbstr, const wchar_t* wcstr, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	long Cwchar::_wcstol_l( const wchar_t* nptr, wchar_t** endptr, int base, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	__int64 Cwchar::_wcstoi64_l( const wchar_t* nptr, wchar_t** endptr, int base, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wcsnicoll_l( const wchar_t* string1, const wchar_t* string2, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wcsnicmp_l( const wchar_t* string1, const wchar_t* string2, size_t count )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wcsncoll_l( const wchar_t* string1, const wchar_t* string2, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_wcslwr_s_l( wchar_t* str, size_t numberOfElements, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::_wcslwr_l( wchar_t* str, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wcsicoll_l( const wchar_t* string1, const wchar_t* string2, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_wcsicmp_l( const wchar_t* string1, const wchar_t* string2, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::_wcsftime_l( wchar_t* strDest, size_t maxsize, const wchar_t* format, const tm* timeptr, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	wchar_t* Cwchar::_wcsdup_dbg( const wchar_t* strSource, int blockType, const char* filename, int linenumber )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		wchar_t* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned int Cwchar::_mbbtombc( unsigned int c )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned int Cwchar::_mbbtombc_l( unsigned int c, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_mbbtype( unsigned char c, int type )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	void Cwchar::_mbccpy( unsigned char* dest, const unsigned char* src )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
	}

	//--------------------------------------------------------------------------------
	void Cwchar::_mbccpy_l( unsigned char* dest, const unsigned char* src, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_mbccpy_s( unsigned char* dest, size_t buffSizeInBytes, int* pCopied, const unsigned char* src )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_mbccpy_s_l( unsigned char* dest, size_t buffSizeInBytes, int* pCopied, const unsigned char* src, locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned int Cwchar::_mbcjistojms( unsigned int c )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned int Cwchar::_mbcjistojms_l( unsigned int c, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned int Cwchar::_mbcjmstojis( unsigned int c )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned int Cwchar::_mbcjmstojis_l( unsigned int c, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::_mbclen( const unsigned char* c )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_mbclen_l( const char* mbstr, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned int Cwchar::_mbctohira( unsigned int c )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned int Cwchar::_mbctohira_l( unsigned int c, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned int Cwchar::_mbctokata( unsigned int c )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned int Cwchar::_mbctokata_l( unsigned int c, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned int Cwchar::_mbctolower( unsigned int c )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned int Cwchar::_mbctolower_l( unsigned int c, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned int Cwchar::_mbctoupper( unsigned int c )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned int Cwchar::_mbctoupper_l( unsigned int c, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned int Cwchar::_mbctombb( unsigned int c )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned int Cwchar::_mbctombb_l( unsigned int c, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_mblen_l( const char* mbstr, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_mbsbtype( const unsigned char* mbstr, size_t count )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_mbsbtype_l( const unsigned char* mbstr, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbscat( unsigned char* strDestination, const unsigned char* strSource )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_mbscat_s( unsigned char* strDestination, size_t numberOfElements, const unsigned char* strSource )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_mbscat_s_l( unsigned char* strDest, size_t numberOfElements, const unsigned char* strSource, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbschr( const unsigned char* str, unsigned int c )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbschr_l( const unsigned char* str, unsigned int c, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_mbscmp( const unsigned char* string1, const unsigned char* string2 )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_mbscmp_l( const unsigned char* string1, const unsigned char* string2, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_mbscoll( const unsigned char* string1, const unsigned char* string2 )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_mbscoll_l( const unsigned char* string1, const unsigned char* string2, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbscpy( unsigned char* strDestination, const unsigned char* strSource )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_mbscpy_s( unsigned char* strDestination, size_t numberOfElements, const unsigned char* strSource )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		errno_t Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_mbscpy_s_l( unsigned char* strDestination, size_t numberOfElements, const unsigned char* strSource, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::_mbscspn( const unsigned char* str, const unsigned char* strCharSet )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::_mbscspn_l( const unsigned char* str, const unsigned char* strCharSet, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsdec( const unsigned char* start, const unsigned char* current )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsdec_l( const unsigned char* start, const unsigned char* current, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsdup( const unsigned char* strSource )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_mbsicmp( const unsigned char* string1, const unsigned char* string2 )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_mbsicmp_l( const unsigned char* string1, const unsigned char* string2, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_mbsicoll( const unsigned char* string1, const unsigned char* string2 )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_mbsicoll_l( const unsigned char* string1, const unsigned char* string2, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsinc( const unsigned char* current )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsinc_l( const unsigned char* current, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::_mbslen( const unsigned char* str )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::_mbslen_l( const unsigned char* str, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbslwr( unsigned char* str )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbslwr_l( unsigned char* str, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_mbslwr_s( unsigned char* str, size_t numberOfElements )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_mbslwr_s_l( unsigned char* str, size_t numberOfElements, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsnbcat( unsigned char* dest, const unsigned char* src, size_t count )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsnbcat_l( unsigned char* dest, const unsigned char* src, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_mbsnbcat_s( unsigned char* dest, size_t sizeInBytes, const unsigned char* src, size_t count )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_mbsnbcat_s_l( unsigned char* dest, size_t sizeInBytes, const unsigned char* src, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_mbsnbcmp( const unsigned char* string1, const unsigned char* string2, size_t count )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_mbsnbcmp_l( const unsigned char* string1, const unsigned char* string2, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::_mbsnbcnt( const unsigned char* str, size_t count )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::_mbsnbcnt_l( const unsigned char* str, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_mbsnbcoll( const unsigned char* string1, const unsigned char* string2, size_t count )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_mbsnbcoll_l( const unsigned char* string1, const unsigned char* string2, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsnbcpy( unsigned char* strDest, const unsigned char* strSource, size_t count )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsnbcpy_l( unsigned char* strDest, const unsigned char* strSource, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_mbsnbcpy_s( unsigned char* strDest, size_t sizeInBytes, const unsigned char* strSource, size_t count )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_mbsnbcpy_s_l( unsigned char* strDest, size_t sizeInBytes, const unsigned char* strSource, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_mbsnbicmp( const unsigned char* string1, const unsigned char* string2, size_t count )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_mbsnbicmp_l( const unsigned char* string1, const unsigned char* string2, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_mbsnbicoll( const unsigned char* string1, const unsigned char* string2, size_t count )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_mbsnbicoll_l( const unsigned char* string1, const unsigned char* string2, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsnbset( unsigned char* str, unsigned int c, size_t count )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsnbset_l( unsigned char* str, unsigned int c, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_mbsnbset_s( unsigned char* str, size_t size, unsigned int c, size_t count )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_mbsnbset_s_l( unsigned char* str, size_t size, unsigned int c, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsncat( unsigned char* strDest, const unsigned char* strSource, size_t count )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsncat_l( unsigned char* strDest, const unsigned char* strSource, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_mbsncat_s( unsigned char* strDest, size_t numberOfElements, const unsigned char* strSource, size_t count )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_mbsncat_s_l( unsigned char* strDest, size_t numberOfElements, const unsigned char* strSource, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::_mbsnccnt( const unsigned char* str, size_t count )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::_mbsnccnt_l( const unsigned char* str, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_mbsncmp( const unsigned char* string1, const unsigned char* string2, size_t count )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_mbsncmp_l( const unsigned char* string1, const unsigned char* string2, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_mbsncoll( const unsigned char* string1, const unsigned char* string2, size_t count )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_mbsncoll_l( const unsigned char* string1, const unsigned char* string2, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsncpy( unsigned char* strDest, const unsigned char* strSource, size_t count )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsncpy_l( unsigned char* strDest, const unsigned char* strSource, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_mbsncpy_s( unsigned char* strDest, size_t numberOfElements, const unsigned char* strSource, size_t count )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_mbsncpy_s_l( unsigned char* strDest, size_t numberOfElements, const unsigned char* strSource, size_t count, locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned int Cwchar::_mbsnextc( const unsigned char* str )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned int Cwchar::_mbsnextc_l( const unsigned char* str, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_mbsnicmp( const unsigned char* string1, const unsigned char* string2, size_t count )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_mbsnicmp_l( const unsigned char* string1, const unsigned char* string2, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_mbsnicoll( const unsigned char* string1, const unsigned char* string2, size_t count )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_mbsnicoll_l( const unsigned char* string1, const unsigned char* string2, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsninc( const unsigned char* str, size_t count )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsninc_l( const unsigned char* str, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::_mbsnlen( const unsigned char* str, size_t numberOfElements )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::_mbsnlen_l( const unsigned char* str, size_t numberOfElements, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsnset( unsigned char* str, unsigned int c, size_t count )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsnset_l( unsigned char* str, unsigned int c, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_mbsnset_s( unsigned char* str, size_t numberOfElements, unsigned int c, size_t count )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_mbsnset_s_l( unsigned char* str, size_t numberOfElements, unsigned int c, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbspbrk( const unsigned char* str, const unsigned char* strCharSet )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbspbrk_l( unsigned char* str, const unsigned char* strCharSet, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsrchr( const unsigned char* str, unsigned int c )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsrchr_l( const unsigned char* str, unsigned int c, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsrev( unsigned char* str )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsrev_l( unsigned char* str, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsset( unsigned char* str, unsigned int c )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsset_l( unsigned char* str, unsigned int c, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_mbsset_s( unsigned char* str, size_t numberOfElements, unsigned int c )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_mbsset_s_l( unsigned char* str, size_t numberOfElements, unsigned int c, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::_mbsspn( const unsigned char* str, const unsigned char* strCharSet )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::_mbsspn_l( const unsigned char* str, const unsigned char* strCharSet, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsspnp( const unsigned char* str, const unsigned char* charset )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsspnp_l( const unsigned char* str, const unsigned char* charset, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsstr( const unsigned char* str, const unsigned char* strSearch )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsstr_l( const unsigned char* str, const unsigned char* strSearch, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbstok( unsigned char* strToken, const unsigned char* strDelimit )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbstok_l( unsigned char* strToken, const unsigned char* strDelimit, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbstok_s( unsigned char* strToken, const unsigned char* strDelimit, char** context )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbstok_s_l( unsigned char* strToken, const unsigned char* strDelimit, char** context, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::_mbstowcs_l( wchar_t* wcstr, const char* mbstr, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		size_t Result = 0;
		__QOR_PROTECT
		{
			Result = _mbstowcs_l_helper( wcstr, mbstr, count, locale );
		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_mbstowcs_s_l( size_t* pReturnValue, wchar_t* wcstr, size_t sizeInWords, const char* mbstr, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::_mbstrlen( const char* str )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::_mbstrlen_l( const char* str, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::_mbstrnlen( const char* str, size_t numberOfElements )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::_mbstrnlen_l( const char* str, size_t numberOfElements, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsupr( unsigned char* str )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	unsigned char* Cwchar::_mbsupr_l( unsigned char* str, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		unsigned char* Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_mbsupr_s( unsigned char* str, size_t numberOfElements )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	errno_t Cwchar::_mbsupr_s_l( unsigned char* str, size_t numberOfElements, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	int Cwchar::_mbtowc_l( wchar_t* wchar, const char* mbchar, size_t count, ::_locale_t locale )
	{
		_WINQ_FCONTEXT( "Cwchar::" );
		int Result = 0;
		__QOR_PROTECT
		{

		}__QOR_ENDPROTECT
		return Result;
	}

	//--------------------------------------------------------------------------------
	size_t Cwchar::_mbstowcs_l_helper( wchar_t* pwcs, const char* s, size_t n, ::_locale_t plocinfo )
	{
		size_t count = 0;

		if( pwcs && n == 0 )
		{
			return (size_t) 0;		// dest string exists, but 0 bytes converted 
		}

		if( pwcs && n > 0 )
		{
			*pwcs = '\0';
		}

		assert( s != 0 );
		// validation section
		//_VALIDATE_RETURN(s != NULL, EINVAL, (size_t)-1);

		CLocaleThreadData* pLocaleThreadData = 0;//TODO
		CLocaleUpdate _loc_update( pLocaleThreadData );
		// if destination string exists, fill it in
		if( pwcs )
		{
			if( _loc_update.GetLocaleT()->LocaleInfoPtr()->Handles()[ CLocale::LCCTYPE ] == CLocale::_CLOCALEHANDLE )
			{
				// C locale: easy and fast
				while( count < n )
				{
					*pwcs = (wchar_t)( (unsigned char)s[ count ] );
					if( !s[ count ] )
					{
						return count;
					}
					count++;
					pwcs++;
				}
				return count;

			} 
			else 
			{
				nsWin32::CErrorHelper ErrorHelper;
				int bytecnt, charcnt;
				unsigned char* p;

				// Assume that the buffer is large enough
				if( ( count = _loc_update.GetLocaleT()->LocaleInfoPtr()->CodePage().MultiByteToWideChar( MB_Precomposed | MB_Err_Invalid_Chars, s, -1, pwcs, (int)n ) ) != 0 )
				{
					return count - 1; // don't count NUL
				}

				if( ErrorHelper.GetLastError() != ErrorInsufficientBuffer )
				{
					errno = EILSEQ;
					*pwcs = '\0';
					return (size_t)-1;
				}

				// User-supplied buffer not large enough.

				// How many bytes are in n characters of the string?
				charcnt = (int)n;
				for( p = (unsigned char *)s; ( charcnt-- && *p ); p++ )
				{
					if( _loc_update.GetLocaleT()->LocaleInfoPtr()->CType()[ (unsigned char)(*p) ] & CharData::E_LEADBYTE )					
					{
						if( p[ 1 ] == '\0' )
						{
							//  this is a leadbyte followed by EOS -- a dud MBCS string We choose not to assert here because this function is defined to deal with dud strings on input and return a known value
							errno = EILSEQ;
							*pwcs = '\0';
							return (size_t)-1;
						}
						else
						{
							p++;
						}
					}
				}

				bytecnt = ( (int)( (char*)p - (char*)s ) );

				if( ( count = _loc_update.GetLocaleT()->LocaleInfoPtr()->CodePage().MultiByteToWideChar( MB_Precomposed, s, bytecnt, pwcs, (int)n ) ) == 0 )
				{
					errno = EILSEQ;
					*pwcs = '\0';
					return (size_t)-1;
				}

				return count; // no NUL in string 
			}
		}
		else 
		{ // pwcs == NULL, get size only, s must be NUL-terminated
			if( _loc_update.GetLocaleT()->LocaleInfoPtr()->Handles()[ CLocale::LCCTYPE ] == CLocale::_CLOCALEHANDLE ) 
			{
				return strlen(s);
			} 
			else if( ( count = _loc_update.GetLocaleT()->LocaleInfoPtr()->CodePage().MultiByteToWideChar( MB_Precomposed | MB_Err_Invalid_Chars, s, -1, NULL, 0 ) ) == 0 ) 
			{
				errno = EILSEQ;
				return (size_t)-1;
			} 
			else 
			{
				return count - 1;
			}
		}
	}



	//

	int Cwchar::_wchartodigit( wchar_t ch )
	{
#define DIGIT_RANGE_TEST(zero)  \
	if (ch < zero)              \
		return -1;              \
	if (ch < zero + 10)         \
	{                           \
		return ch - zero;       \
	}

		DIGIT_RANGE_TEST(0x0030)        // 0030;DIGIT ZERO
		if (ch < 0xFF10)                // FF10;FULLWIDTH DIGIT ZERO
		{
			DIGIT_RANGE_TEST(0x0660)    // 0660;ARABIC-INDIC DIGIT ZERO
			DIGIT_RANGE_TEST(0x06F0)    // 06F0;EXTENDED ARABIC-INDIC DIGIT ZERO
			DIGIT_RANGE_TEST(0x0966)    // 0966;DEVANAGARI DIGIT ZERO
			DIGIT_RANGE_TEST(0x09E6)    // 09E6;BENGALI DIGIT ZERO
			DIGIT_RANGE_TEST(0x0A66)    // 0A66;GURMUKHI DIGIT ZERO
			DIGIT_RANGE_TEST(0x0AE6)    // 0AE6;GUJARATI DIGIT ZERO
			DIGIT_RANGE_TEST(0x0B66)    // 0B66;ORIYA DIGIT ZERO
			DIGIT_RANGE_TEST(0x0C66)    // 0C66;TELUGU DIGIT ZERO
			DIGIT_RANGE_TEST(0x0CE6)    // 0CE6;KANNADA DIGIT ZERO
			DIGIT_RANGE_TEST(0x0D66)    // 0D66;MALAYALAM DIGIT ZERO
			DIGIT_RANGE_TEST(0x0E50)    // 0E50;THAI DIGIT ZERO
			DIGIT_RANGE_TEST(0x0ED0)    // 0ED0;LAO DIGIT ZERO
			DIGIT_RANGE_TEST(0x0F20)    // 0F20;TIBETAN DIGIT ZERO
			DIGIT_RANGE_TEST(0x1040)    // 1040;MYANMAR DIGIT ZERO
			DIGIT_RANGE_TEST(0x17E0)    // 17E0;KHMER DIGIT ZERO
			DIGIT_RANGE_TEST(0x1810)    // 1810;MONGOLIAN DIGIT ZERO


			return -1;
		}
#undef DIGIT_RANGE_TEST

										// FF10;FULLWIDTH DIGIT ZERO
		if (ch < 0xFF10 + 10)
		{
			return ch - 0xFF10;
		}
		return -1;

	}

}//nsWin32


#endif//(QOR_SYS_OS == QOR_SYS_MSW)

