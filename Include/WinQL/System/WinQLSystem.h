//WinQLSystem.h

// Copyright Querysoft Limited 2013, 2015, 2017
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//WinQL System object

#ifndef WINQL_SYSTEM_H_3
#define WINQL_SYSTEM_H_3

#include "SystemQOR.h"
#include "CodeQOR/Instancing/STMember.h"
#include "CodeQOR/DataStructures/TLazy.h"
#include "CodeQOR/DataStructures/TSyncRef.h"
#include "CodeQOR/ClassReg/ClassRegEntry.h"
#include "SystemQOR/System.h"
#include "WinQL/WinQL.h"
#include "WinQL/System/Atoms/WinQLGlobalAtoms.h"
#include "WinQL/System/Info/WinQLInfo.h"
#include "WinQL/System/Locale/WinQLSystemLocale.h"
#include "WinQL/System/Devices/WinQLDeviceManager.h"
#include "WinQL/System/Power/WinQLPowerManagement.h"
#include "WinQL/System/Devices/Mouse/WinQLMouse.h"
#include "WinQL/Application/Graphics/WinQLDisplay.h"
#include "WinQL/System/Performance/WinQLPerformanceHelper.h"
#include "WinQL/System/Registry/WinQLRegistry.h"
#include "WinQL/System/Clipboard/WinQLClipboard.h"
#include "WinQL/System/Clock/WinQLTime.h"
#include "WinQL/System/Session/WinQLSession.h"
#include "WinQL/System/ProcessManager/WinQLProcessManager.h"
#include "WinQL/System/ProcessManager/WinQLServiceControlManager.h"
#include "WinQL/System/FileSystem/WinQLFilesystem.h"
#include "WinQL/System/TerminalServices/WinQLTerminalServices.h"
#include "WinQL/System/EventLogging/WinQLEventLog.h"
#include "WinQL/CodeServices/WinQLSharedRef.h"
#include "WinQL/System/Devices/Keyboard/WinQLKeyboardDevice.h"
#include "WinQL/GUI/WindowStation.h"
#include "ArchQOR/Common/Machine.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	//--------------------------------------------------------------------------------
    class __QOR_INTERFACE( __WINQL ) CSystem : public nsQOR::ISystem
	{
	public:

		__QOR_DECLARE_OCLASS_ID( CSystem );

		__QOR_IMPL_REF( CSystem );

		static nsCodeQOR::CTExternalRegEntry< CSystem > RegEntry;

		CSystem();
		CSystem( const CSystem& ) = delete;
		virtual ~CSystem();

		virtual void Setup( nsQOR::IApplication& Application );
		virtual void Shutdown( nsQOR::IApplication& Application );

		nsCodeQOR::CTSyncAdaptor< nsCodeQOR::CTLazyAdaptor< nsArch::CMachine >, CWinQLPolicy > Machine;
		nsCodeQOR::CTSyncAdaptor< nsCodeQOR::CTLazyAdaptor< CGlobalAtomTable >, CWinQLPolicy > AtomTable;
		nsCodeQOR::CTSyncAdaptor< nsCodeQOR::CTLazyAdaptor< CDeviceManager >, CWinQLPolicy > Devices;
		nsCodeQOR::CTSyncAdaptor< nsCodeQOR::CTLazyAdaptor< CSystemLocale >, CWinQLPolicy > Locale;
		nsCodeQOR::CTSyncAdaptor< nsCodeQOR::CTLazyAdaptor< CSystemInfo >, CWinQLPolicy > Information;
		nsCodeQOR::CTSyncAdaptor< nsCodeQOR::CTLazyAdaptor< CPowerManager >, CWinQLPolicy > Power;
		nsCodeQOR::CTSyncAdaptor< nsCodeQOR::CTLazyAdaptor< CPerformanceHelper >, CWinQLPolicy > Performance;
		nsCodeQOR::CTSyncAdaptor< nsCodeQOR::CTLazyAdaptor< CRegistry >, CWinQLPolicy > Registry;
		nsCodeQOR::CTSyncAdaptor< nsCodeQOR::CTLazyAdaptor< CClipboard >, CWinQLPolicy > Clipboard;
		nsCodeQOR::CTSyncAdaptor< nsCodeQOR::CTLazyAdaptor< CSession >, CWinQLPolicy > Session;
		nsCodeQOR::CTSyncAdaptor< nsCodeQOR::CTLazyAdaptor< CTime >, CWinQLPolicy > Time;
		nsCodeQOR::CTSyncAdaptor< nsCodeQOR::CTLazyAdaptor< CFileSystem >, CWinQLPolicy > FileSystem;
		nsCodeQOR::CTSyncAdaptor< nsCodeQOR::CTLazyAdaptor< CProcessManager >, CWinQLPolicy > Processes;
		nsCodeQOR::CTSyncAdaptor< nsCodeQOR::CTLazyAdaptor< CServiceControlManager >, CWinQLPolicy > Services;
		nsCodeQOR::CTSyncAdaptor< nsCodeQOR::CTLazyAdaptor< CTerminalServices >, CWinQLPolicy > TerminalServices;
		nsCodeQOR::CTSyncAdaptor< nsCodeQOR::CTLazyAdaptor< CEventLog >, CWinQLPolicy > EventLog;
		nsCodeQOR::CTSyncAdaptor< nsCodeQOR::CTLazyAdaptor< CWindowStationManager >, CWinQLPolicy >WindowStations;
		nsCodeQOR::CTSyncAdaptor< nsCodeQOR::CTLazyAdaptor< CDisplay >, CWinQLPolicy > Display;

		CKeyboard::ref_type Keyboard(unsigned int uiUnit = 0);
		CMouse::ref_type Mouse(unsigned int uiUnit);

	};

}//nsWin32

#endif//WINQL_SYSTEM_H_3

