//WinQLDataObjectClient.cpp

// Copyright Querysoft Limited 2013, 2015, 2017
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "WinQL/CodeServices/WinQLPolicy.h"
#include "WinQL/Application/Threading/WinQLCriticalSection.h"
#include "WinQL/Application/ErrorSystem/WinQLError.h"
#include "WinQL/COM/Client/ComPtr/WinQLDataObjectClient.h"
#include "WinQAPI/OLE32.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{

	__QOR_IMPLEMENT_OCLASS_LUID( CDataObjectClient )

	//--------------------------------------------------------------------------------
	CDataObjectClient::CDataObjectClient()
	{
		_WINQ_FCONTEXT( "CDataObjectClient::CDataObjectClient" );
	}

	//--------------------------------------------------------------------------------
	CDataObjectClient::~CDataObjectClient()
	{
		_WINQ_FCONTEXT( "CDataObjectClient::~CDataObjectClient" );
	}

	//--------------------------------------------------------------------------------
	long CDataObjectClient::OleCreateFromData( const GUID& riid, unsigned long renderopt, FormatEtc* pFormatEtc, IOleClientSite* pClientSite, IStorage* pStg, void** ppvObj )
	{
		_WINQ_FCONTEXT( "CDataObjectClient::OleCreateFromData" );
		long lResult = -1;
		__QOR_PROTECT
		{
			lResult = m_Library.OleCreateFromData( reinterpret_cast< ::LPDATAOBJECT >( m_p ),
				reinterpret_cast< REFIID >( riid ), renderopt, reinterpret_cast< ::LPFORMATETC >( pFormatEtc ), 
				reinterpret_cast< ::LPOLECLIENTSITE >( pClientSite ), 
				reinterpret_cast< ::LPSTORAGE >( pStg ), ppvObj );
		}__QOR_ENDPROTECT
		return lResult;
	}

	//--------------------------------------------------------------------------------
	long CDataObjectClient::OleCreateFromDataEx( const GUID& riid, unsigned long dwFlags, unsigned long renderopt, unsigned long cFormats, unsigned long* rgAdvf, FormatEtc* rgFormatEtc, IAdviseSink* lpAdviseSink, unsigned long* rgdwConnection, IOleClientSite* pClientSite, IStorage* pStg, void** ppvObj )
	{
		_WINQ_FCONTEXT( "CDataObjectClient::OleCreateFromDataEx" );
		long lResult = -1;
		__QOR_PROTECT
		{
			lResult = m_Library.OleCreateFromDataEx( reinterpret_cast< ::LPDATAOBJECT >( m_p )
				, reinterpret_cast< REFIID >( riid ), dwFlags, renderopt, cFormats, rgAdvf, reinterpret_cast< ::LPFORMATETC >( rgFormatEtc ),
				reinterpret_cast< ::IAdviseSink* >( lpAdviseSink ), rgdwConnection, reinterpret_cast< ::LPOLECLIENTSITE >( pClientSite ), 
				reinterpret_cast< ::LPSTORAGE >( pStg ), ppvObj );
		}__QOR_ENDPROTECT
		return lResult;
	}

	//--------------------------------------------------------------------------------
	long CDataObjectClient::OleCreateLinkFromData( const GUID& riid, unsigned long renderopt, FormatEtc* pFormatEtc, IOleClientSite* pClientSite, IStorage* pStg, void** ppvObj )
	{
		_WINQ_FCONTEXT( "CDataObjectClient::OleCreateLinkFromData" );
		long lResult = -1;
		__QOR_PROTECT
		{
			lResult = m_Library.OleCreateLinkFromData( reinterpret_cast< ::LPDATAOBJECT >( m_p ), reinterpret_cast< REFIID >( riid ), renderopt, reinterpret_cast< ::LPFORMATETC >( pFormatEtc ), reinterpret_cast< ::LPOLECLIENTSITE >( pClientSite ), reinterpret_cast< ::LPSTORAGE >( pStg ), ppvObj );
		}__QOR_ENDPROTECT
		return lResult;
	}

	//--------------------------------------------------------------------------------
	long CDataObjectClient::OleCreateLinkFromDataEx( const GUID& riid, unsigned long dwFlags, unsigned long renderopt, unsigned long cFormats, unsigned long* rgAdvf, FormatEtc* rgFormatEtc, IAdviseSink* lpAdviseSink, unsigned long* rgdwConnection, IOleClientSite* pClientSite, IStorage* pStg, void** ppvObj )
	{
		_WINQ_FCONTEXT( "CDataObjectClient::OleCreateLinkFromDataEx" );
		long lResult = -1;
		__QOR_PROTECT
		{
			lResult = m_Library.OleCreateLinkFromDataEx( reinterpret_cast< ::LPDATAOBJECT >( m_p ), reinterpret_cast< REFIID >( riid ), dwFlags, renderopt, cFormats, rgAdvf, reinterpret_cast< ::LPFORMATETC >( rgFormatEtc ), reinterpret_cast< ::IAdviseSink* >( lpAdviseSink ), rgdwConnection, reinterpret_cast< ::LPOLECLIENTSITE >( pClientSite ), reinterpret_cast< ::LPSTORAGE >( pStg ), ppvObj );
		}__QOR_ENDPROTECT
		return lResult;
	}

	//--------------------------------------------------------------------------------
	long CDataObjectClient::OleCreateStaticFromData( const GUID& iid, unsigned long renderopt, FormatEtc* pFormatEtc, IOleClientSite* pClientSite, IStorage* pStg, void** ppvObj )
	{
		_WINQ_FCONTEXT( "CDataObjectClient::OleCreateStaticFromData" );
		long lResult = -1;
		__QOR_PROTECT
		{
			lResult = m_Library.OleCreateStaticFromData( reinterpret_cast< ::LPDATAOBJECT >( m_p ), reinterpret_cast< REFIID >( iid ), renderopt, 
				reinterpret_cast< ::LPFORMATETC >( pFormatEtc ), reinterpret_cast< ::LPOLECLIENTSITE >( pClientSite ), 
				reinterpret_cast< ::LPSTORAGE >( pStg ), ppvObj );
		}__QOR_ENDPROTECT
		return lResult;
	}

	//--------------------------------------------------------------------------------
	long CDataObjectClient::OleIsCurrentClipboard()
	{
		_WINQ_FCONTEXT( "CDataObjectClient::OleIsCurrentClipboard" );
		long lResult = -1;
		__QOR_PROTECT
		{
			lResult = m_Library.OleIsCurrentClipboard( reinterpret_cast< ::LPDATAOBJECT >( m_p ) );
		}__QOR_ENDPROTECT
		return lResult;
	}

	//--------------------------------------------------------------------------------
	long CDataObjectClient::OleQueryCreateFromData()
	{
		_WINQ_FCONTEXT( "CDataObjectClient::OleQueryCreateFromData" );
		long lResult = -1;
		__QOR_PROTECT
		{
			lResult = m_Library.OleQueryCreateFromData( reinterpret_cast< ::LPDATAOBJECT >( m_p ) );
		}__QOR_ENDPROTECT
		return lResult;
	}

	//--------------------------------------------------------------------------------
	long CDataObjectClient::OleQueryLinkFromData()
	{
		_WINQ_FCONTEXT( "CDataObjectClient::OleQueryLinkFromData" );
		long lResult = -1;
		__QOR_PROTECT
		{
			lResult = m_Library.OleQueryLinkFromData( reinterpret_cast< ::LPDATAOBJECT >( m_p ) );
		}__QOR_ENDPROTECT
		return lResult;
	}

	//--------------------------------------------------------------------------------
	long CDataObjectClient::OleSetClipboard( void )
	{
		_WINQ_FCONTEXT( "CDataObjectClient::OleSetClipboard" );
		long lResult = -1;
		__QOR_PROTECT
		{
			lResult = m_Library.OleSetClipboard( reinterpret_cast< ::LPDATAOBJECT >( m_p ) );
		}__QOR_ENDPROTECT
		return lResult;
	}		
		
	//--------------------------------------------------------------------------------
	long CDataObjectClient::OleFlushClipboard( void )
	{
		_WINQ_FCONTEXT( "CDataObjectClient::OleFlushClipboard" );
		long lResult = -1;
		__QOR_PROTECT
		{
			lResult = m_Library.OleFlushClipboard();
		}__QOR_ENDPROTECT
		return lResult;
	}

}//nsWin32

