//SystemQOR.cpp

// Copyright Querysoft Limited 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#define __QCMP_REPORTCONIG	__QCS_YES_

#include "SystemQOR.h"
#include "CodeQOR/DataTypes/GUID.h"
#include "CodeQOR/Modules/LoadableModuleBase.h"
#include "CodeQOR/Tracing/FunctionContextBase.h"

//------------------------------------------------------------------------------
//Only for shared library builds as one of a network of codependent shared libraries

#ifdef _USRDLL

__QCMP_STARTLINKAGE_C

#ifdef QOR_MONOLITHIC
	//------------------------------------------------------------------------------
	__QCMP_EXPORT nsCodeQOR::mxGUID* QORidentity( void )
	{
		static nsCodeQOR::mxGUID SystemQOR = { 0x8620ae4f, 0xe950, 0x4141, { 0xbb, 0xcd, 0x6a, 0x89, 0x31, 0x6c, 0xa, 0xf } };	// {8620AE4F-E950-4141-BBCD-6A89316C0A0F}
		return &SystemQOR;
	}
#else

	extern int _cdecl QORStaticInit( void );

	//------------------------------------------------------------------------------
	__QCMP_EXPORT int _cdecl QORinit( void )
	{
		QORStaticInit();
		return 1;
	}

	//------------------------------------------------------------------------------
	//This gives the SystemQOR library a unique identity
	__QCMP_EXPORT nsCodeQOR::mxGUID* QORidentity( void )
	{
		static nsCodeQOR::mxGUID SystemQOR = { 0x74346fa1, 0xab39, 0x48b7, { 0xbe, 0x13, 0xe1, 0xdf, 0x5b, 0x7b, 0x22, 0xe6 } };
		return &SystemQOR;
	}
#endif//QOR_MONOLITHIC

void* __dso_handle = reinterpret_cast< void* >( &QORidentity );

__QCMP_ENDLINKAGE_C


#ifndef QOR_MONOLITHIC
//------------------------------------------------------------------------------
//Provide a Module Context that represents the SystemQOR Module
nsCodeQOR::CLoadableModuleBase& ThisModule( void )
{
	static nsCodeQOR::CLoadableModuleBase SystemQORModule( "Querysoft Open Runtime System Library" );
	return SystemQORModule;
}
#else
//In Monolithic builds the SystemQOR contributes the one and only Module Context for the whole QOR library
static nsCodeQOR::CLoadableModuleBase MonolithicQORModule( "Querysoft Open Runtime Library" );

//------------------------------------------------------------------------------
nsCodeQOR::CLoadableModuleBase& ThisModule( void )
{
	return MonolithicQORModule;
}

#endif//QOR_MONOTHILIC


//------------------------------------------------------------------------------
const char* __QCMP_LOCAL ThisModuleVersion(void)
{
	return QOR_PP_STRINGIZE(__DATE__:__TIME__);
}

#endif//_USRDLL

