//BfSource.cpp

// Copyright Querysoft Limited 2013, 2016
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Implements the base class for Bluefoot pipeline sources

#include "BluefootQOR/BFSource.h"
#include "BluefootQOR/BFSink.h"

//------------------------------------------------------------------------------
namespace nsBluefoot
{
	__QOR_IMPLEMENT_OCLASS_LUID(CSource);

	//------------------------------------------------------------------------------
	CSource::CSource() : m_pSink( 0 )
	{
		__QCS_MEMBER_FCONTEXT("CSource::CSource");
	}

	//------------------------------------------------------------------------------
	CSource::~CSource()
	{
		__QCS_MEMBER_FCONTEXT("CSource::~CSource");
	}

	//------------------------------------------------------------------------------
	CSource::CSource( const CSource& src )
	{
		__QCS_MEMBER_FCONTEXT("CSource::CSource");
		*this = src;
	}

	//------------------------------------------------------------------------------
	CSource& CSource::operator = ( const CSource& src )
	{
		__QCS_MEMBER_FCONTEXT("CSource::operator=");
		if (&src != this)
		{
			m_pSink = src.m_pSink;
		}
		return *this;
	}

	//------------------------------------------------------------------------------
	void CSource::SetSink( CSink* pSink )
	{
		__QCS_MEMBER_FCONTEXT("CSource::SetSink");
		m_pSink = pSink;
	}

	//------------------------------------------------------------------------------
	CSink* CSource::GetSink( void )
	{
		__QCS_MEMBER_FCONTEXT("CSource::GetSink");
		return m_pSink;
	}

}//nsBluefoot

