//DComp.h

// Copyright Querysoft Limited 2017
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef WINQAPI_MODULES_DCOMP_H_3
#define WINQAPI_MODULES_DCOMP_H_3

#include "../Source/SystemQOR/MSWindows/WinQAPI/include/DynamicLibrary.h"
#include "WinQAPI/Kernel32.h"

#if (NTDDI_VERSION >= NTDDI_WIN8)

#include <dcomp.h>

//--------------------------------------------------------------------------------
namespace nsWinQAPI
{
	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE(__WINQAPI) CDComp : public CDll
	{
	public:

		//--------------------------------------------------------------------------------
		CDComp() : CDll(TEXT("DComp.Dll"))
		{
		}

		//--------------------------------------------------------------------------------
		static CDComp& Instance(void)
		{
			static CDComp _instance;
			return _instance;
		}

		//--------------------------------------------------------------------------------
		~CDComp()
		{
		}

		HRESULT __QCMP_STDCALLCONVENTION AttachMouseDragToHwnd( IDCompositionVisual* visual, HWND hwnd, BOOL enable );
		HRESULT __QCMP_STDCALLCONVENTION AttachMouseWheelToHwnd( IDCompositionVisual* visual, HWND hwnd, BOOL enable );
		HRESULT __QCMP_STDCALLCONVENTION CreateDevice( IDXGIDevice* dxgiDevice, REFIID iid, void** dcompositionDevice );
		HRESULT __QCMP_STDCALLCONVENTION CreateDevice2( IUnknown* renderingDevice, REFIID iid, void** dcompositionDevice );
		HRESULT __QCMP_STDCALLCONVENTION CreateDevice3( IUnknown* renderingDevice, REFIID iid, void** dcompositionDevice );
		HRESULT __QCMP_STDCALLCONVENTION CreateSurfaceHandle( DWORD desiredAccess, SECURITY_ATTRIBUTES* securityAttributes, HANDLE* surfaceHandle );
		HRESULT __QCMP_STDCALLCONVENTION GetFrameStatistics( DCOMPOSITION_FRAME_STATISTICS* statistics, D3D_FEATURE_LEVEL* minSafeFeaturelLevel, D3D_FEATURE_LEVEL* maxHardwareFeaturelLevel);

	};
}//nsWinQAPI

#endif//(NTDDI_VERSION >= NTDDI_WIN8)

#endif//WINQAPI_MODULES_DCOMP_H_3
