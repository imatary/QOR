//LibraryBase.h

// Copyright Querysoft Limited 2017
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Base class for static and dynamic library objects

#ifndef CODEQOR_MODULES_LIBRARYBASE_H_1
#define CODEQOR_MODULES_LIBRARYBASE_H_1

#include "CompilerQOR.h"

//--------------------------------------------------------------------------------
namespace nsCodeQOR
{

    //--------------------------------------------------------------------------------
	//A base class for both static and dynamic library objects
#ifdef QOR_MONOLITHIC
	class __QOR_INTERFACE( __CODEQOR ) CLibraryBase
#else
	class __QOR_INTERFACE( 1 ) CLibraryBase
#endif
    {
    public:

        CLibraryBase( const char* szLibName, bool bSubclass = false );
        virtual ~CLibraryBase();
		CLibraryBase( const CLibraryBase& );
		CLibraryBase& operator = ( const CLibraryBase& );
		const char* LibraryName( void );					//Return the library name
		void AppendLibrary( CLibraryBase* pNext );			//Append a static library to the chain of QOR libraries in this module
		CLibraryBase* NextLibrary( void );					//Return the next static library in the chain of static libraries for this module
		const char* Version( void );						//Return the compilation time-stamp

	protected:

		const char* m_szLibName;							//The internal library name, not necessarily related to any file name
		CLibraryBase* m_pNext;								//Pointer to next for static libraries that go into the build of a shared library or executable
		bool m_bRegistered;									//Static libraries register with the containing shared library or executable module

    };

}//nsCodeQOR

#endif//CODEQOR_MODULES_LIBRARYBASE_H_1
