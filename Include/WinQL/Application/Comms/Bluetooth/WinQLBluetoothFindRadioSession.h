//WinQLBluetoothFindRadioSession.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Win32 Session over Bluetooth Find Device

#ifndef WINQL_COMMS_BLUETOOTHFINDRADIOSESSION_H_3
#define WINQL_COMMS_BLUETOOTHFINDRADIOSESSION_H_3

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#include "WinQL/WinQL.h"
#include "WinQL/CodeServices/WinQLPolicy.h"
#include "WinQL/CodeServices/Text/WinString.h"
#include "WinQL/GUI/Window.h"
#include "WinQL/Application/Comms/Bluetooth/WinQLBluetoothRemoteDevice.h"
#include "WinQL/System/Devices/BluetoothRadio/WinQLBluetoothRadio.h"

//--------------------------------------------------------------------------------
namespace nsWinQAPI
{
	class __QOR_INTERFACE( __WINQAPI ) CBthProps;
}//nsWinQAPI

//--------------------------------------------------------------------------------
namespace nsWin32
{
	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL ) CFindBluetoothRadioSession
	{
	public:

		typedef nsCodeQOR::CTLRef< CFindBluetoothRadioSession > refType;

		//--------------------------------------------------------------------------------
		struct SearchParams
		{
			unsigned long dwSize;             //  IN  sizeof this structure
		};

		__QOR_DECLARE_OCLASS_ID( CFindBluetoothRadioSession );
		
		CFindBluetoothRadioSession( CBluetoothRadio::ref_type& Radio );
		CFindBluetoothRadioSession( CFindBluetoothRadioSession::SearchParams& SearchParams, CBluetoothRadio::ref_type& Radio );
		virtual ~CFindBluetoothRadioSession();

		//--------------------------------------------------------------------------------
		refType Ref( void )
		{
			return refType( this, false );
		}

		bool Next( CBluetoothRadio::ref_type& Radio );

	private:

		nsWinQAPI::CBthProps& m_Library;

		CHandle m_Handle;

		SearchParams m_SearchParams;

		CFindBluetoothRadioSession();
		CFindBluetoothRadioSession( const CFindBluetoothRadioSession& );
		CFindBluetoothRadioSession& operator = ( const CFindBluetoothRadioSession& );
	};

}//nsWin32

#endif//WINQL_COMMS_BLUETOOTHFINDRADIOSESSION_H_3
