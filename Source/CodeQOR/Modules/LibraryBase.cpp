//LibraryBase.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Implement a very basic static library representative class

#include "CompilerQOR.h"
#include "CodeQOR/Modules/LibraryBase.h"
#include "CodeQOR/Modules/LoadableModuleBase.h"

extern nsCodeQOR::CLoadableModuleBase& ThisModule();
extern const char* ThisModuleVersion();

//--------------------------------------------------------------------------------
namespace nsCodeQOR
{

	//--------------------------------------------------------------------------------
    CLibraryBase::CLibraryBase( const char* szLibName, bool bShared ) : m_szLibName( szLibName ), m_bRegistered( false ), m_pNext( 0 )
	{
		if( !bShared )
		{
			CLoadableModuleBase* pThisModule = &(ThisModule());			//Find the Loadable module this static library is part of
			if( pThisModule != 0 && pThisModule->m_bRegistered )
			{
				m_bRegistered = pThisModule->RegisterLibrary( this );	//Register as a static library component
			}
		}
	}

	//--------------------------------------------------------------------------------
	CLibraryBase::CLibraryBase( const CLibraryBase& src ) : m_szLibName( src.m_szLibName ), m_bRegistered( src.m_bRegistered ), m_pNext( src.m_pNext )
	{
	}

	//--------------------------------------------------------------------------------
	CLibraryBase& CLibraryBase::operator = ( const CLibraryBase& src )
	{
		if( &src != this )
		{
			m_szLibName = src.m_szLibName;
			m_bRegistered = src.m_bRegistered;
			m_pNext = src.m_pNext;
		}
		return *this;
	}

	//--------------------------------------------------------------------------------
	CLibraryBase::~CLibraryBase()
	{
		if( m_bRegistered )
		{
			CLoadableModuleBase* pThisModule = &(ThisModule());
			if( pThisModule != 0 )
			{
				pThisModule->UnregisterLibrary( this );
			}
		}
	}

	//--------------------------------------------------------------------------------
	const char* CLibraryBase::LibraryName( void )
	{
		return m_szLibName;
	}

	//--------------------------------------------------------------------------------
	//A slow but extremely simple append implementation. Appending to any item in the list always appends at the end.
	void CLibraryBase::AppendLibrary( CLibraryBase* ptNext )
	{
		CLibraryBase* pEnd = this;

		while( pEnd->m_pNext != 0 && pEnd != ptNext )
		{
			pEnd = pEnd->m_pNext;
		}

		if( pEnd != ptNext )
		{
			pEnd->m_pNext = ptNext;
		}
	}

	//--------------------------------------------------------------------------------	
	CLibraryBase* CLibraryBase::NextLibrary()
	{
		return m_pNext;
	}

	//--------------------------------------------------------------------------------
	const char* CLibraryBase::Version()
	{
		return ThisModuleVersion();
	}

}//nsCodeQOR

#ifndef QOR_MONOLITHIC
nsCodeQOR::CLibraryBase QORModuleLibrary( "QOR Module library", false );
#endif


