//WinQLInProcServerModule.cpp

// Copyright Querysoft Limited 2013, 2015, 2017
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "WinQL/CodeServices/WinQLPolicy.h"
#include "WinQL/Application/Threading/WinQLCriticalSection.h"
#include "WinQL/Application/ErrorSystem/WinQLFunctionContext.h"
#include "WinQL/COM/Server/Module/WinQLInProcServerModule.h"
#include "WinQAPI/OLE32.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	__QOR_IMPLEMENT_OCLASS_LUID( CInProcServerModule );

	//--------------------------------------------------------------------------------
	CInProcServerModule::CInProcServerModule( const char* szModuleName ) : nsCodeQOR::CLoadableModuleBase( szModuleName ), CCOObjectBase()
	,	m_lObjectCount( 0 )
	{
		_WINQ_FCONTEXT( "CInProcServerModule::CInProcServerModule" );
	}

	//--------------------------------------------------------------------------------
	CInProcServerModule::~CInProcServerModule()
	{
		_WINQ_FCONTEXT( "CInProcServerModule::~CInProcServerModule" );
	}

	//--------------------------------------------------------------------------------
	long CInProcServerModule::IncrementObjectCount( void )
	{
		_WINQ_FCONTEXT( "CInProcServerModule::IncrementObjectCount" );
		return ++m_lObjectCount;
	}

	//--------------------------------------------------------------------------------
	long CInProcServerModule::DecrementObjectCount( void )
	{
		_WINQ_FCONTEXT( "CInProcServerModule::DecrementObjectCount" );
		return --m_lObjectCount;
	}

	//--------------------------------------------------------------------------------
	long CInProcServerModule::GetObjectCount( void )
	{
		_WINQ_FCONTEXT( "CInProcServerModule::GetObjectCount" );
		return m_lObjectCount;
	}

	//--------------------------------------------------------------------------------
	long CInProcServerModule::Lock( void )
	{
		_WINQ_FCONTEXT( "CInProcServerModule::Lock" );
		return ++m_lLockCount;
	}

	//--------------------------------------------------------------------------------
	long CInProcServerModule::Unlock( void )
	{
		_WINQ_FCONTEXT( "CInProcServerModule::Unlock" );
		return --m_lLockCount;
	}

	//--------------------------------------------------------------------------------
	long CInProcServerModule::LockCount( void )
	{
		_WINQ_FCONTEXT( "CInProcServerModule::LockCount" );
		return m_lLockCount;
	}

}//nsWin32


