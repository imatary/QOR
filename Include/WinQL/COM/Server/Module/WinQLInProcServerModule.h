//WinQLInProcServerModule.h

// Copyright Querysoft Limited 2013, 2017
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef WINQL_COM_SERVER_MODULE_INPROC_H_3
#define WINQL_COM_SERVER_MODULE_INPROC_H_3

#include "WinQL/Definitions/Constants.h"
#include "WinQL/Definitions/Security.h"
#include "WinQL/COM/Server/BaseParts/WinQLCOObjectBase.h"
#include "WinQL/Application/Threading/WinQLSynchronization.h"
#include "CodeQOR/Modules/LoadableModuleBase.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL ) CInProcServerModule : public nsCodeQOR::CLoadableModuleBase, public CCOObjectBase 
	{
	public:

		__QOR_DECLARE_OCLASS_ID( CInProcServerModule );

		CInProcServerModule( const char* szModuleName );
		virtual ~CInProcServerModule();

		long IncrementObjectCount( void );
		long DecrementObjectCount( void );
		long GetObjectCount( void );

		long Lock( void );
		long Unlock( void );
		long LockCount( void );

	private:

		CInProcServerModule();
		CInProcServerModule( const CInProcServerModule& );
		CInProcServerModule& operator = ( const CInProcServerModule& );

		shared_long m_lObjectCount;
		shared_long m_lLockCount;
	};

	//--------------------------------------------------------------------------------
	//Each including module implements this function to return its own Module object
	__declspec( noinline ) inline CInProcServerModule& InProcServerModule()
	{
		return *( dynamic_cast< CInProcServerModule* >( &( ThisModule() ) ) );
	}

}//nsWin32

#endif//WINQL_COM_SERVER_MODULE_INPROC_H_3

