//LoadableModuleBase.h

// Copyright Querysoft Limited 2017
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Intermediate base class for dynamic library objects

#include "CompilerQOR.h"

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#ifndef CODEQOR_MODULES_LOADABLEMODULEBASE_H_1
#define CODEQOR_MODULES_LOADABLEMODULEBASE_H_1

#include "LibraryBase.h"

//--------------------------------------------------------------------------------
namespace nsCodeQOR
{
	class __QOR_INTERFACE(__CODEQOR) CClassReg;
	class __QOR_INTERFACE(__CODEQOR) CExternalClassReg;

	//--------------------------------------------------------------------------------
	//Base class for dynamic library objects
    class __QOR_INTERFACE( __CODEQOR ) CLoadableModuleBase : public CLibraryBase
    {
    public:

		CLoadableModuleBase( const char* szModuleName );
		virtual ~CLoadableModuleBase();

		virtual bool RegisterLibrary( CLibraryBase* pLibrary );			//Register a static library as part of this module
		virtual void UnregisterLibrary( CLibraryBase* pLibrary );		//Unregister a static library from this module
		virtual void StaticLibraryList( void( pCallback )( CLibraryBase*, void* ), void* pContext );	//Visit the items on the static library list
		virtual CClassReg& ClassReg( void );							//Return the Class Registry for this module
		virtual CExternalClassReg& ExternalClassReg( void );			//Return the External Class Registry for this module
		void SetThisModule( CLoadableModuleBase* pRuntimeModule );		//Store the current module pointer

	protected:

		CLibraryBase* m_pStaticLibraryList;

	private:

		CLoadableModuleBase( const CLoadableModuleBase& );
		CLoadableModuleBase& operator = ( const CLoadableModuleBase& );
	};

}//nsCodeQOR

//Each and every module that includes this header must provide a ThisModule function returning its module representative object and a ThisModuleVersion function returning the module version
extern nsCodeQOR::CLoadableModuleBase& ThisModule( void );				
extern const char* ThisModuleVersion(void);

#endif//CODEQOR_MODULES_LOADABLEMODULEBASE_H_1

