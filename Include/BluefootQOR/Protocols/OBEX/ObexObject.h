//ObexObject.h

// Copyright Querysoft Limited 2016
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef BLUEFOOT_OBEXOBJECT_H_3
#define BLUEFOOT_OBEXOBJECT_H_3

//Defines an Obex Object

#include "BluefootQOR/Protocols/OBEX/ObexHeader.h"
#include <vector>

//------------------------------------------------------------------------------
namespace nsOBEX
{
	//------------------------------------------------------------------------------
	// Obex commands
	enum obex_cmd
	{
		CMD_CONNECT = 0x00,
		CMD_DISCONNECT = 0x01,
		CMD_PUT = 0x02,
		CMD_GET = 0x03,
		CMD_SETPATH = 0x05,
		CMD_ACTION = 0x06,
		CMD_SESSION = 0x07, // used for reliable session support
		CMD_ABORT = 0x7f,
	};

#define OBEX_FINAL		0x80

	//------------------------------------------------------------------------------
	// Obex responses
	enum obex_rsp
	{
		RSP_CONTINUE = 0x10,
		RSP_SWITCH_PRO = 0x11,
		RSP_SUCCESS = 0x20,
		RSP_CREATED = 0x21,
		RSP_ACCEPTED = 0x22,
		RSP_NON_AUTHORITATIVE = 0x23,
		RSP_NO_CONTENT = 0x24,
		RSP_RESET_CONTENT = 0x25,
		RSP_PARTIAL_CONTENT = 0x26,
		RSP_MULTIPLE_CHOICES = 0x30,
		RSP_MOVED_PERMANENTLY = 0x31,
		RSP_MOVED_TEMPORARILY = 0x32,
		RSP_SEE_OTHER = 0x33,
		RSP_NOT_MODIFIED = 0x34,
		RSP_USE_PROXY = 0x35,
		RSP_BAD_REQUEST = 0x40,
		RSP_UNAUTHORIZED = 0x41,
		RSP_PAYMENT_REQUIRED = 0x42,
		RSP_FORBIDDEN = 0x43,
		RSP_NOT_FOUND = 0x44,
		RSP_METHOD_NOT_ALLOWED = 0x45,
		RSP_NOT_ACCEPTABLE = 0x46,
		RSP_PROXY_AUTH_REQUIRED = 0x47,
		RSP_REQUEST_TIME_OUT = 0x48,
		RSP_CONFLICT = 0x49,
		RSP_GONE = 0x4a,
		RSP_LENGTH_REQUIRED = 0x4b,
		RSP_PRECONDITION_FAILED = 0x4c,
		RSP_REQ_ENTITY_TOO_LARGE = 0x4d,
		RSP_REQ_URL_TOO_LARGE = 0x4e,
		RSP_UNSUPPORTED_MEDIA_TYPE = 0x4f,
		RSP_INTERNAL_SERVER_ERROR = 0x50,
		RSP_NOT_IMPLEMENTED = 0x51,
		RSP_BAD_GATEWAY = 0x52,
		RSP_SERVICE_UNAVAILABLE = 0x53,
		RSP_GATEWAY_TIMEOUT = 0x54,
		RSP_VERSION_NOT_SUPPORTED = 0x55,
		RSP_DATABASE_FULL = 0x60,
		RSP_DATABASE_LOCKED = 0x61,
	};

	//------------------------------------------------------------------------------
	// Obex response modes
	enum obex_rsp_mode
	{
		RSP_MODE_NORMAL = 0, //< normal response mode
		RSP_MODE_SINGLE = 1, //< single response mode (SRM)
	};

	// Min, Max and default transport MTU
#define DEFAULT_MTU	1024
#define MINIMUM_MTU	255
#define MAXIMUM_MTU	65535

	//------------------------------------------------------------------------------
	class __QOR_INTERFACE(__BLUEFOOTQOR) CObject
	{
	public:

		__QOR_DECLARE_OCLASS_ID(CObject);

		CObject(obex_cmd Command);
		virtual ~CObject();

		void AddHeader(CHeader* pHeader);

		void Suspend(void);
		void Resume(void);
		void Abort(void);

	protected:

		obex_cmd m_Command;
		obex_rsp m_Response;

	private:

		obex_rsp m_LastResponse;
		uint16_t m_HeaderOffset;		// Where to start parsing headers		
		bool m_bAbort;					// Request shall be aborted		
		bool m_bSuspended;				// Temporarily stop transfering object
		
		std::vector< CHeader* > m_VecHeaders;
		/*
		CObexBody* m_pBody;
		*/
	};

}//nsOBEX

#endif//BLUEFOOT_OBEXOBJECT_H_3
