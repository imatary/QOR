//ArchQOR.cpp

// Copyright Querysoft Limited 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "SystemQOR.h"
#include "ArchQOR.h"
#include "ArchQOR/Common/Machine.h"
#include "CodeQOR/DataTypes/GUID.h"
#include "CodeQOR/Modules/LoadableModuleBase.h"

//------------------------------------------------------------------------------
namespace nsArch
{
	//------------------------------------------------------------------------------
	CArchQORModule::CArchQORModule() : nsCodeQOR::CLoadableModuleBase( "Querysoft Open Runtime: Hardware Architecture Support Library (ArchQOR)" )
	{
		m_pMachine = 0;
	}

	//------------------------------------------------------------------------------
	CArchQORModule::~CArchQORModule()
	{
		delete m_pMachine;
	}

	//------------------------------------------------------------------------------
	CMachine* CArchQORModule::Machine()
	{
		if (m_pMachine == 0)
		{
			m_pMachine = new CMachine;
		}

		return m_pMachine;
	}

}//nsArch


//------------------------------------------------------------------------------
//Only for shared library builds as one of a network of codependent shared libraries
#ifndef QOR_MONOLITHIC
#	ifdef _USRDLL

__QCMP_STARTLINKAGE_C

	extern int _cdecl QORStaticInit( void );

	//------------------------------------------------------------------------------
	__QCMP_EXPORT int _cdecl QORinit( void )
	{
		QORStaticInit();
		return 1;
	}

	//------------------------------------------------------------------------------
	//This gives the Architecture QOR Library a unique identity
	__QCMP_EXPORT nsCodeQOR::mxGUID* QORidentity( void )
	{
		static nsCodeQOR::mxGUID ArchQOR = { 0xdd8152fd, 0xcdd8, 0x4c26, { 0xb3, 0x55, 0x0, 0xd5, 0x79, 0x55, 0xb8, 0x7a } };
		return &ArchQOR;
	}

__QCMP_ENDLINKAGE_C

	//------------------------------------------------------------------------------
	nsCodeQOR::CLoadableModuleBase& ThisModule( void )
	{
		static nsArch::CArchQORModule ArchQORModule;
		return ArchQORModule;
	}

#	endif//_USRDLL
#endif//!QOR_MONOLITHIC

__QCMP_STARTLINKAGE_C

//------------------------------------------------------------------------------
__QCMP_EXPORT nsArch::CMachine* TheMachine(void)
{
	return ((nsArch::CArchQORModule&)ThisModule()).Machine();
}

__QCMP_ENDLINKAGE_C
