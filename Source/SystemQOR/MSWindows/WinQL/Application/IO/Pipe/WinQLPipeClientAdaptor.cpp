//WinQLPipeClientAdaptor.cpp

// Copyright Querysoft Limited 2013, 2017
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "WinQL/Application/IO/Pipe/WinQLPipeClientAdaptor.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	__QOR_IMPLEMENT_OCLASS_LUID( CPipeClientAdaptor );

	//--------------------------------------------------------------------------------
	CPipeClientAdaptor::CPipeClientAdaptor( nsBluefoot::CConnectionPool* pPool ) : CPipeConnector( pPool )
	{
		_WINQ_FCONTEXT( "CPipeClientAdaptor::CPipeClientAdaptor" );
		m_ulReadMode = 0;
	}

	//--------------------------------------------------------------------------------
	CPipeClientAdaptor::~CPipeClientAdaptor()
	{
		_WINQ_FCONTEXT( "CPipeClientAdaptor::~CPipeClientAdaptor" );
	}

	//--------------------------------------------------------------------------------
	void CPipeClientAdaptor::OnConnected()
	{
		_WINQ_FCONTEXT( "CPipeConnector::OnConnected" );
		
		m_Pipe.SetHandleState( &m_ulReadMode, 0, 0 );
		CPipeConnector::OnConnected();
	}

	//--------------------------------------------------------------------------------
	void CPipeClientAdaptor::SetReadMode( unsigned long ulReadMode )
	{
		_WINQ_FCONTEXT( "CPipeClientAdaptor::SetReadMode" );
		m_ulReadMode = ulReadMode;
	}

	//--------------------------------------------------------------------------------
	unsigned long CPipeClientAdaptor::GetReadMode( void )
	{
		_WINQ_FCONTEXT( "CPipeClientAdaptor::GetReadMode" );
		return m_ulReadMode;
	}

}//nsWin32

