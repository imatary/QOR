//WinQLProtocolServer.cpp

// Copyright Querysoft Limited 2016
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//WinQL Application Role for Protocol Servers

#include "WinQL/WinQL.h"

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#include "CodeQOR/Traits/MemoryTraits.h"
#include "WinQL/System/WinQLSystem.h"
#include "WinQL/Application/Roles/WinQLProtocolServerRole.h"
#include "WinQL/Application/Process/WinQLProcess.h"
#include "WinQL/Application/WinQLApplication.h"
#include "WinQL/System/EventLogging/WinQLEventLog.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	
	__QOR_IMPLEMENT_OCLASS_GUID( CProtocolServerRole, 0xf3d42074, 0xec43, 0x470d, 0x8b, 0x77, 0xf7, 0x68, 0xf8, 0x99, 0xdb, 0xa1 );// {F3D42074-EC43-470D-8B77-F768F899DBA1}

	nsCodeQOR::CTExternalRegEntry< CProtocolServerRole > CProtocolServerRole::RegEntry;

	//--------------------------------------------------------------------------------
	CProtocolServerRole::CProtocolServerRole() : nsQOR::CRoleImplBase()
	{
		_WINQ_FCONTEXT( "CProtocolServerRole::CProtocolServerRole" );
		AddSubSystem( *CThreading::ClassID(), m_Threading.Ref() );
	}

	//--------------------------------------------------------------------------------
	CProtocolServerRole::~CProtocolServerRole()
	{
		_WINQ_FCONTEXT( "CProtocolServerRole::~CProtocolServerRole" );
	}

	//--------------------------------------------------------------------------------
	CProtocolServerRole::CProtocolServerRole( const CProtocolServerRole& src ) : nsQOR::CRoleImplBase( src )
	{
		_WINQ_FCONTEXT( "CProtocolServerRole::CProtocolServerRole" );
	}

	//--------------------------------------------------------------------------------
	CProtocolServerRole& CProtocolServerRole::operator = ( const CProtocolServerRole& src )
	{
		_WINQ_FCONTEXT( "CProtocolServerRole::operator =" );
		if( &src != this )
		{
		}
		return *this;
	}

	//--------------------------------------------------------------------------------
	void CProtocolServerRole::Setup( nsQOR::IApplication& Application )
	{
		_WINQ_FCONTEXT( "CProtocolServerRole::Setup" );
		m_Threading.Setup( Application );
	}

	//--------------------------------------------------------------------------------
	void CProtocolServerRole::Shutdown( nsQOR::IApplication& Application )
	{
		_WINQ_FCONTEXT( "CProtocolServerRole::Shutdown" );
		m_Threading.Shutdown( Application );
	}

}//nsWin32
