//Overlapped.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Data structures, POD types only, for use with the Microsoft Windows Operating System

#ifndef WINQL_DEFS_OVERLAPPED_H
#define WINQL_DEFS_OVERLAPPED_H

namespace nsWin32
{
	//--------------------------------------------------------------------------------
	typedef struct _OVERLAPPED
	{
		Cmp_ulong_ptr Internal;
		Cmp_ulong_ptr InternalHigh;

		__QCMP_WARNING_PUSH
			__QCMP_WARNING_DISABLE( __QCMP_WARN_NAMELESS_STRUCTUNION, _QCMP_TXT("Deliberate use of Microsoft extension") )

		union __QCMP_NAMELESS_STRUCT
		{
			struct __QCMP_NAMELESS_STRUCT
			{
				unsigned long Offset;
				unsigned long OffsetHigh;
			} DUMMYSTRUCTNAME;
			void* Pointer;
		} DUMMYUNIONNAME;

		__QCMP_WARNING_POP

			void*  hEvent;
	} OVERLAPPED, *LPOVERLAPPED;

	//--------------------------------------------------------------------------------
	typedef struct _OVERLAPPED_ENTRY
	{
		Cmp_ulong_ptr lpCompletionKey;
		LPOVERLAPPED lpOverlapped;
		Cmp_ulong_ptr Internal;
		unsigned long dwNumberOfBytesTransferred;
	} OVERLAPPED_ENTRY, *LPOVERLAPPED_ENTRY;

}//nsWin32

#endif//WINQL_DEFS_OVERLAPPED_H

