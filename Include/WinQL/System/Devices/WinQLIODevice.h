//WinQLIODevice.h

// Copyright Querysoft Limited 2013, 2017
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Win32 DeviceIO

#ifndef WINQL_IODEVICEIO_H_3
#define WINQL_IODEVICEIO_H_3

#include "CompilerQOR.h"

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#include "CodeQOR/DataStructures/TRef.h"
#include "WinQL/Definitions/Data.h"
#include "WinQL/Definitions/IO.h"
#include "WinQL/System/Devices/WinQLDeviceFile.h"
#include "WinQL/System/Devices/WinQLDeviceHandle.h"
#include "WinQL/CodeServices/Text/WinString.h"

__QOR_DECLARE_REF(nsWin32, __WINQL, CIODeviceFile, CTRef);

//--------------------------------------------------------------------------------
namespace nsWin32
{
	//--------------------------------------------------------------------------------	
	class __QOR_INTERFACE( __WINQL ) CIODeviceFile : public CDeviceFile
	{

	public:
		
		__QOR_DECLARE_REF_TYPE(CIODeviceFile);

		CIODeviceFile( const TCHAR* pDeviceName, unsigned long dwDesiredAccess, unsigned long dwShareMode, unsigned long dwFlagsAndAttributes );
		CIODeviceFile( CDeviceHandle& hExisting );
		virtual ~CIODeviceFile();
		bool Control( unsigned long dwIoControlCode, void* lpInBuffer, unsigned long nInBufferSize, void* lpOutBuffer, unsigned long nOutBufferSize, unsigned long* lpBytesReturned, nsWin32::LPOVERLAPPED lpOverlapped );
		bool GetPowerState( int& fOn );
		bool CancelWakeupRequest( void );

	private:

		CIODeviceFile();
		CIODeviceFile( const CIODeviceFile& );
		CIODeviceFile& operator = ( const CIODeviceFile& );
	};

}//nsWin32

#endif//WINQL_IODEVICEIO_H_3
